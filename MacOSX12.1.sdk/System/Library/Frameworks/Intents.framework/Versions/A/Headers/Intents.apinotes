---
Classes:
- Name: INCarHeadUnit
  SwiftName: INCar.HeadUnit
- Name: INMediaDestination
  SwiftBridge: INMediaDestination
  SwiftName: INMediaDestinationReference
- Name: INRequestRideIntent
  Methods:
  - Selector: 'initWithPickupLocation:dropOffLocation:rideOptionName:partySize:paymentMethod:'
    MethodKind: Instance
    SwiftPrivate: true
- Name: INShortcut
  SwiftBridge: INShortcut
  SwiftName: INShortcutReference
Name: Intents
SwiftVersions:
- Version: 3
  Classes:
  - Name: INImage
    Methods:
    - Selector: 'imageWithURL:'
      MethodKind: Class
      NullabilityOfRet: N
  - Name: INPersonHandle
    Methods:
    - Selector: 'initWithValue:type:'
      MethodKind: Instance
      Parameters:
      - Position: 0
        Nullability: N
    - Selector: 'initWithValue:type:label:'
      MethodKind: Instance
      Parameters:
      - Position: 0
        Nullability: N
    Properties:
    - Name: value
      Nullability: N
  Protocols:
  - Name: INActivateCarSignalIntentHandling
    Methods:
    - Selector: 'confirmActivateCarSignal:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(activateCarSignal:completion:)'
    - Selector: 'handleActivateCarSignal:completion:'
      MethodKind: Instance
      SwiftName: 'handle(activateCarSignal:completion:)'
    - Selector: 'resolveCarNameForActivateCarSignal:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forActivateCarSignal:with:)'
    - Selector: 'resolveSignalsForActivateCarSignal:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSignals(forActivateCarSignal:with:)'
  - Name: INAddCallParticipantIntentHandling
    Methods:
    - Selector: 'confirmAddCallParticipant:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(addCallParticipant:completion:)'
    - Selector: 'handleAddCallParticipant:completion:'
      MethodKind: Instance
      SwiftName: 'handle(addCallParticipant:completion:)'
    - Selector: 'resolveParticipantsForAddCallParticipant:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveParticipants(forAddCallParticipant:with:)'
  - Name: INAddMediaIntentHandling
    Methods:
    - Selector: 'confirmAddMedia:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(addMedia:completion:)'
    - Selector: 'handleAddMedia:completion:'
      MethodKind: Instance
      SwiftName: 'handle(addMedia:completion:)'
    - Selector: 'resolveMediaDestinationForAddMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveMediaDestination(forAddMedia:with:)'
    - Selector: 'resolveMediaItemsForAddMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveMediaItems(forAddMedia:with:)'
  - Name: INAddTasksIntentHandling
    Methods:
    - Selector: 'confirmAddTasks:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(addTasks:completion:)'
    - Selector: 'handleAddTasks:completion:'
      MethodKind: Instance
      SwiftName: 'handle(addTasks:completion:)'
    - Selector: 'resolvePriorityForAddTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePriority(forAddTasks:with:)'
    - Selector: 'resolveSpatialEventTriggerForAddTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSpatialEventTrigger(forAddTasks:with:)'
    - Selector: 'resolveTargetTaskListForAddTasks:completion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTaskList(forAddTasks:with:)'
    - Selector: 'resolveTargetTaskListForAddTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTaskList(forAddTasks:with:)'
    - Selector: 'resolveTaskTitlesForAddTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTaskTitles(forAddTasks:with:)'
    - Selector: 'resolveTemporalEventTriggerForAddTasks:completion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forAddTasks:with:)'
    - Selector: 'resolveTemporalEventTriggerForAddTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forAddTasks:with:)'
  - Name: INAnswerCallIntentHandling
    Methods:
    - Selector: 'confirmAnswerCall:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(answerCall:completion:)'
    - Selector: 'handleAnswerCall:completion:'
      MethodKind: Instance
      SwiftName: 'handle(answerCall:completion:)'
  - Name: INAppendToNoteIntentHandling
    Methods:
    - Selector: 'confirmAppendToNote:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(appendToNote:completion:)'
    - Selector: 'handleAppendToNote:completion:'
      MethodKind: Instance
      SwiftName: 'handle(appendToNote:completion:)'
    - Selector: 'resolveContentForAppendToNote:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContent(forAppendToNote:with:)'
    - Selector: 'resolveTargetNoteForAppendToNote:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetNote(forAppendToNote:with:)'
  - Name: INCancelWorkoutIntentHandling
    Methods:
    - Selector: 'confirmCancelWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(cancelWorkout:completion:)'
    - Selector: 'handleCancelWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'handle(cancelWorkout:completion:)'
    - Selector: 'resolveWorkoutNameForCancelWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkoutName(forCancelWorkout:with:)'
  - Name: INChangeAlarmStatusIntentHandling
    Methods:
    - Selector: 'confirmChangeAlarmStatus:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(changeAlarmStatus:completion:)'
    - Selector: 'handleChangeAlarmStatus:completion:'
      MethodKind: Instance
      SwiftName: 'handle(changeAlarmStatus:completion:)'
    - Selector: 'resolveAlarmsForChangeAlarmStatus:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlarms(forChangeAlarmStatus:with:)'
    - Selector: 'resolveOperationForChangeAlarmStatus:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveOperation(forChangeAlarmStatus:with:)'
  - Name: INCompressFileIntentHandling
    Methods:
    - Selector: 'confirmCompressFile:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(compressFile:completion:)'
    - Selector: 'handleCompressFile:completion:'
      MethodKind: Instance
      SwiftName: 'handle(compressFile:completion:)'
    - Selector: 'resolveEntityNameForCompressFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityName(forCompressFile:with:)'
    - Selector: 'resolveEntityTypeForCompressFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityType(forCompressFile:with:)'
  - Name: INConfigureHomeIntentHandling
    Methods:
    - Selector: 'confirmConfigureHome:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(configureHome:completion:)'
    - Selector: 'handleConfigureHome:completion:'
      MethodKind: Instance
      SwiftName: 'handle(configureHome:completion:)'
    - Selector: 'resolveEntitiesForConfigureHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntities(forConfigureHome:with:)'
  - Name: INControlHomeIntentHandling
    Methods:
    - Selector: 'confirmControlHome:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(controlHome:completion:)'
    - Selector: 'handleControlHome:completion:'
      MethodKind: Instance
      SwiftName: 'handle(controlHome:completion:)'
    - Selector: 'resolveContentsForControlHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContents(forControlHome:with:)'
    - Selector: 'resolveFiltersForControlHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveFilters(forControlHome:with:)'
    - Selector: 'resolveTimeForControlHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTime(forControlHome:with:)'
    - Selector: 'resolveUserTaskForControlHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveUserTask(forControlHome:with:)'
  - Name: INCopyFileIntentHandling
    Methods:
    - Selector: 'confirmCopyFile:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(copyFile:completion:)'
    - Selector: 'handleCopyFile:completion:'
      MethodKind: Instance
      SwiftName: 'handle(copyFile:completion:)'
    - Selector: 'resolveDestinationNameForCopyFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationName(forCopyFile:with:)'
    - Selector: 'resolveDestinationTypeForCopyFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationType(forCopyFile:with:)'
    - Selector: 'resolveEntityNameForCopyFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityName(forCopyFile:with:)'
    - Selector: 'resolveEntityTypeForCopyFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityType(forCopyFile:with:)'
    - Selector: 'resolvePropertiesForCopyFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProperties(forCopyFile:with:)'
    - Selector: 'resolveSourceNameForCopyFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSourceName(forCopyFile:with:)'
    - Selector: 'resolveSourceTypeForCopyFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSourceType(forCopyFile:with:)'
  - Name: INCreateAlarmIntentHandling
    Methods:
    - Selector: 'confirmCreateAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(createAlarm:completion:)'
    - Selector: 'handleCreateAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'handle(createAlarm:completion:)'
    - Selector: 'resolveAlarmRepeatScheduleOptionsForCreateAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlarmRepeatScheduleOptions(forCreateAlarm:with:)'
    - Selector: 'resolveLabelForCreateAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLabel(forCreateAlarm:with:)'
    - Selector: 'resolveTimeForCreateAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTime(forCreateAlarm:with:)'
  - Name: INCreateFileIntentHandling
    Methods:
    - Selector: 'confirmCreateFile:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(createFile:completion:)'
    - Selector: 'handleCreateFile:completion:'
      MethodKind: Instance
      SwiftName: 'handle(createFile:completion:)'
    - Selector: 'resolveDestinationNameForCreateFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationName(forCreateFile:with:)'
    - Selector: 'resolveDestinationTypeForCreateFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationType(forCreateFile:with:)'
    - Selector: 'resolveEntityNameForCreateFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityName(forCreateFile:with:)'
    - Selector: 'resolveEntityTypeForCreateFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityType(forCreateFile:with:)'
  - Name: INCreateNoteIntentHandling
    Methods:
    - Selector: 'confirmCreateNote:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(createNote:completion:)'
    - Selector: 'handleCreateNote:completion:'
      MethodKind: Instance
      SwiftName: 'handle(createNote:completion:)'
    - Selector: 'resolveContentForCreateNote:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContent(forCreateNote:with:)'
    - Selector: 'resolveGroupNameForCreateNote:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveGroupName(forCreateNote:with:)'
    - Selector: 'resolveTitleForCreateNote:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTitle(forCreateNote:with:)'
  - Name: INCreateTaskListIntentHandling
    Methods:
    - Selector: 'confirmCreateTaskList:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(createTaskList:completion:)'
    - Selector: 'handleCreateTaskList:completion:'
      MethodKind: Instance
      SwiftName: 'handle(createTaskList:completion:)'
    - Selector: 'resolveGroupNameForCreateTaskList:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveGroupName(forCreateTaskList:with:)'
    - Selector: 'resolveTaskTitlesForCreateTaskList:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTaskTitles(forCreateTaskList:with:)'
    - Selector: 'resolveTitleForCreateTaskList:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTitle(forCreateTaskList:with:)'
  - Name: INCreateTimerIntentHandling
    Methods:
    - Selector: 'confirmCreateTimer:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(createTimer:completion:)'
    - Selector: 'handleCreateTimer:completion:'
      MethodKind: Instance
      SwiftName: 'handle(createTimer:completion:)'
    - Selector: 'resolveDurationForCreateTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDuration(forCreateTimer:with:)'
    - Selector: 'resolveLabelForCreateTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLabel(forCreateTimer:with:)'
    - Selector: 'resolveTypeForCreateTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveType(forCreateTimer:with:)'
  - Name: INDeleteAlarmIntentHandling
    Methods:
    - Selector: 'confirmDeleteAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(deleteAlarm:completion:)'
    - Selector: 'handleDeleteAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'handle(deleteAlarm:completion:)'
    - Selector: 'resolveAlarmsForDeleteAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlarms(forDeleteAlarm:with:)'
  - Name: INDeleteFilePermanentlyIntentHandling
    Methods:
    - Selector: 'confirmDeleteFilePermanently:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(deleteFilePermanently:completion:)'
    - Selector: 'handleDeleteFilePermanently:completion:'
      MethodKind: Instance
      SwiftName: 'handle(deleteFilePermanently:completion:)'
  - Name: INDeleteHealthSampleIntentHandling
    Methods:
    - Selector: 'confirmDeleteHealthSample:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(deleteHealthSample:completion:)'
    - Selector: 'handleDeleteHealthSample:completion:'
      MethodKind: Instance
      SwiftName: 'handle(deleteHealthSample:completion:)'
    - Selector: 'resolveSampleUuidsForDeleteHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSampleUuids(forDeleteHealthSample:with:)'
  - Name: INDeleteParkingLocationIntentHandling
    Methods:
    - Selector: 'confirmDeleteParkingLocation:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(deleteParkingLocation:completion:)'
    - Selector: 'handleDeleteParkingLocation:completion:'
      MethodKind: Instance
      SwiftName: 'handle(deleteParkingLocation:completion:)'
  - Name: INDeleteTasksIntentHandling
    Methods:
    - Selector: 'confirmDeleteTasks:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(deleteTasks:completion:)'
    - Selector: 'handleDeleteTasks:completion:'
      MethodKind: Instance
      SwiftName: 'handle(deleteTasks:completion:)'
    - Selector: 'resolveTaskListForDeleteTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTaskList(forDeleteTasks:with:)'
    - Selector: 'resolveTasksForDeleteTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTasks(forDeleteTasks:with:)'
  - Name: INDeleteTimerIntentHandling
    Methods:
    - Selector: 'confirmDeleteTimer:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(deleteTimer:completion:)'
    - Selector: 'handleDeleteTimer:completion:'
      MethodKind: Instance
      SwiftName: 'handle(deleteTimer:completion:)'
    - Selector: 'resolveDeleteMultipleForDeleteTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDeleteMultiple(forDeleteTimer:with:)'
    - Selector: 'resolveTargetTimerForDeleteTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTimer(forDeleteTimer:with:)'
  - Name: INEndWorkoutIntentHandling
    Methods:
    - Selector: 'confirmEndWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(endWorkout:completion:)'
    - Selector: 'handleEndWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'handle(endWorkout:completion:)'
    - Selector: 'resolveWorkoutNameForEndWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkoutName(forEndWorkout:with:)'
  - Name: INFindDeviceAndPlaySoundIntentHandling
    Methods:
    - Selector: 'confirmFindDeviceAndPlaySound:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(findDeviceAndPlaySound:completion:)'
    - Selector: 'handleFindDeviceAndPlaySound:completion:'
      MethodKind: Instance
      SwiftName: 'handle(findDeviceAndPlaySound:completion:)'
    - Selector: 'resolveDevicesForFindDeviceAndPlaySound:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDevices(forFindDeviceAndPlaySound:with:)'
  - Name: INGetCarLockStatusIntentHandling
    Methods:
    - Selector: 'confirmGetCarLockStatus:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(getCarLockStatus:completion:)'
    - Selector: 'handleGetCarLockStatus:completion:'
      MethodKind: Instance
      SwiftName: 'handle(getCarLockStatus:completion:)'
    - Selector: 'resolveCarNameForGetCarLockStatus:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forGetCarLockStatus:with:)'
  - Name: INGetCarPowerLevelStatusIntentHandling
    Methods:
    - Selector: 'confirmGetCarPowerLevelStatus:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(getCarPowerLevelStatus:completion:)'
    - Selector: 'handleGetCarPowerLevelStatus:completion:'
      MethodKind: Instance
      SwiftName: 'handle(getCarPowerLevelStatus:completion:)'
    - Selector: 'resolveCarNameForGetCarPowerLevelStatus:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forGetCarPowerLevelStatus:with:)'
  - Name: INGetFileInformationIntentHandling
    Methods:
    - Selector: 'confirmGetFileInformation:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(getFileInformation:completion:)'
    - Selector: 'handleGetFileInformation:completion:'
      MethodKind: Instance
      SwiftName: 'handle(getFileInformation:completion:)'
    - Selector: 'resolveEntityNameForGetFileInformation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityName(forGetFileInformation:with:)'
    - Selector: 'resolveEntityTypeForGetFileInformation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityType(forGetFileInformation:with:)'
    - Selector: 'resolvePropertyNameForGetFileInformation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePropertyName(forGetFileInformation:with:)'
    - Selector: 'resolveQualifierForGetFileInformation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveQualifier(forGetFileInformation:with:)'
  - Name: INGetRideStatusIntentHandling
    Methods:
    - Selector: 'confirmGetRideStatus:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(getRideStatus:completion:)'
    - Selector: 'handleGetRideStatus:completion:'
      MethodKind: Instance
      SwiftName: 'handle(getRideStatus:completion:)'
    - Selector: 'startSendingUpdatesForGetRideStatus:toObserver:'
      MethodKind: Instance
      SwiftName: 'startSendingUpdates(forGetRideStatus:to:)'
    - Selector: 'stopSendingUpdatesForGetRideStatus:'
      MethodKind: Instance
      SwiftName: 'stopSendingUpdates(forGetRideStatus:)'
  - Name: INGetSettingIntentHandling
    Methods:
    - Selector: 'confirmGetSetting:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(getSetting:completion:)'
    - Selector: 'handleGetSetting:completion:'
      MethodKind: Instance
      SwiftName: 'handle(getSetting:completion:)'
    - Selector: 'resolveConfirmationValueForGetSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveConfirmationValue(forGetSetting:with:)'
    - Selector: 'resolveSettingMetadataForGetSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSettingMetadata(forGetSetting:with:)'
  - Name: INGetVisualCodeIntentHandling
    Methods:
    - Selector: 'confirmGetVisualCode:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(getVisualCode:completion:)'
    - Selector: 'handleGetVisualCode:completion:'
      MethodKind: Instance
      SwiftName: 'handle(getVisualCode:completion:)'
    - Selector: 'resolveVisualCodeTypeForGetVisualCode:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveVisualCodeType(forGetVisualCode:with:)'
  - Name: INHangUpCallIntentHandling
    Methods:
    - Selector: 'confirmHangUpCall:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(hangUpCall:completion:)'
    - Selector: 'handleHangUpCall:completion:'
      MethodKind: Instance
      SwiftName: 'handle(hangUpCall:completion:)'
  - Name: INIdentifyIncomingCallerIntentHandling
    Methods:
    - Selector: 'confirmIdentifyIncomingCaller:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(identifyIncomingCaller:completion:)'
    - Selector: 'handleIdentifyIncomingCaller:completion:'
      MethodKind: Instance
      SwiftName: 'handle(identifyIncomingCaller:completion:)'
  - Name: INJoinCallIntentHandling
    Methods:
    - Selector: 'confirmJoinCall:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(joinCall:completion:)'
    - Selector: 'handleJoinCall:completion:'
      MethodKind: Instance
      SwiftName: 'handle(joinCall:completion:)'
    - Selector: 'resolveGroupConversationForJoinCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveGroupConversation(forJoinCall:with:)'
  - Name: INListCarsIntentHandling
    Methods:
    - Selector: 'confirmListCars:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(listCars:completion:)'
    - Selector: 'handleListCars:completion:'
      MethodKind: Instance
      SwiftName: 'handle(listCars:completion:)'
  - Name: INListRideOptionsIntentHandling
    Methods:
    - Selector: 'confirmListRideOptions:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(listRideOptions:completion:)'
    - Selector: 'handleListRideOptions:completion:'
      MethodKind: Instance
      SwiftName: 'handle(listRideOptions:completion:)'
    - Selector: 'resolveDropOffLocationForListRideOptions:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDropOffLocation(forListRideOptions:with:)'
    - Selector: 'resolvePickupLocationForListRideOptions:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePickupLocation(forListRideOptions:with:)'
  - Name: INListShortcutsIntentHandling
    Methods:
    - Selector: 'confirmListShortcuts:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(listShortcuts:completion:)'
    - Selector: 'handleListShortcuts:completion:'
      MethodKind: Instance
      SwiftName: 'handle(listShortcuts:completion:)'
    - Selector: 'resolveAppTitlesForListShortcuts:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAppTitles(forListShortcuts:with:)'
  - Name: INMoveFileIntentHandling
    Methods:
    - Selector: 'confirmMoveFile:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(moveFile:completion:)'
    - Selector: 'handleMoveFile:completion:'
      MethodKind: Instance
      SwiftName: 'handle(moveFile:completion:)'
    - Selector: 'resolveDestinationNameForMoveFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationName(forMoveFile:with:)'
    - Selector: 'resolveDestinationTypeForMoveFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationType(forMoveFile:with:)'
    - Selector: 'resolveEntityNamesForMoveFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityNames(forMoveFile:with:)'
    - Selector: 'resolveEntityTypesForMoveFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityTypes(forMoveFile:with:)'
    - Selector: 'resolvePropertiesForMoveFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProperties(forMoveFile:with:)'
    - Selector: 'resolveSourceNameForMoveFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSourceName(forMoveFile:with:)'
    - Selector: 'resolveSourceTypeForMoveFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSourceType(forMoveFile:with:)'
  - Name: INOpenFileIntentHandling
    Methods:
    - Selector: 'confirmOpenFile:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(openFile:completion:)'
    - Selector: 'handleOpenFile:completion:'
      MethodKind: Instance
      SwiftName: 'handle(openFile:completion:)'
    - Selector: 'resolveAppIdForOpenFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAppId(forOpenFile:with:)'
    - Selector: 'resolveEntityNameForOpenFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityName(forOpenFile:with:)'
    - Selector: 'resolveEntityTypeForOpenFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityType(forOpenFile:with:)'
    - Selector: 'resolvePropertiesForOpenFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProperties(forOpenFile:with:)'
    - Selector: 'resolveScopeEntityNameForOpenFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveScopeEntityName(forOpenFile:with:)'
    - Selector: 'resolveScopeForOpenFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveScope(forOpenFile:with:)'
  - Name: INOpenSettingIntentHandling
    Methods:
    - Selector: 'confirmOpenSetting:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(openSetting:completion:)'
    - Selector: 'handleOpenSetting:completion:'
      MethodKind: Instance
      SwiftName: 'handle(openSetting:completion:)'
    - Selector: 'resolveSearchQueryForOpenSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSearchQuery(forOpenSetting:with:)'
    - Selector: 'resolveSettingMetadataForOpenSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSettingMetadata(forOpenSetting:with:)'
  - Name: INPauseTimerIntentHandling
    Methods:
    - Selector: 'confirmPauseTimer:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(pauseTimer:completion:)'
    - Selector: 'handlePauseTimer:completion:'
      MethodKind: Instance
      SwiftName: 'handle(pauseTimer:completion:)'
    - Selector: 'resolvePauseMultipleForPauseTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePauseMultiple(forPauseTimer:with:)'
    - Selector: 'resolveTargetTimerForPauseTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTimer(forPauseTimer:with:)'
  - Name: INPauseWorkoutIntentHandling
    Methods:
    - Selector: 'confirmPauseWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(pauseWorkout:completion:)'
    - Selector: 'handlePauseWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'handle(pauseWorkout:completion:)'
    - Selector: 'resolveWorkoutNameForPauseWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkoutName(forPauseWorkout:with:)'
  - Name: INPayBillIntentHandling
    Methods:
    - Selector: 'confirmPayBill:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(payBill:completion:)'
    - Selector: 'handlePayBill:completion:'
      MethodKind: Instance
      SwiftName: 'handle(payBill:completion:)'
    - Selector: 'resolveBillPayeeForPayBill:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveBillPayee(forPayBill:with:)'
    - Selector: 'resolveBillTypeForPayBill:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveBillType(forPayBill:with:)'
    - Selector: 'resolveDueDateForPayBill:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDueDate(forPayBill:with:)'
    - Selector: 'resolveFromAccountForPayBill:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveFromAccount(forPayBill:with:)'
    - Selector: 'resolveTransactionAmountForPayBill:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTransactionAmount(forPayBill:with:)'
    - Selector: 'resolveTransactionNoteForPayBill:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTransactionNote(forPayBill:with:)'
    - Selector: 'resolveTransactionScheduledDateForPayBill:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTransactionScheduledDate(forPayBill:with:)'
  - Name: INPlayAudioMessageIntentHandling
    Methods:
    - Selector: 'confirmPlayAudioMessage:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(playAudioMessage:completion:)'
    - Selector: 'handlePlayAudioMessage:completion:'
      MethodKind: Instance
      SwiftName: 'handle(playAudioMessage:completion:)'
  - Name: INPlayMediaIntentHandling
    Methods:
    - Selector: 'confirmPlayMedia:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(playMedia:completion:)'
    - Selector: 'handlePlayMedia:completion:'
      MethodKind: Instance
      SwiftName: 'handle(playMedia:completion:)'
    - Selector: 'resolveMediaItemsForPlayMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveMediaItems(forPlayMedia:with:)'
    - Selector: 'resolvePlayShuffledForPlayMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePlayShuffled(forPlayMedia:with:)'
    - Selector: 'resolvePlaybackQueueLocationForPlayMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePlaybackQueueLocation(forPlayMedia:with:)'
    - Selector: 'resolvePlaybackRepeatModeForPlayMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePlaybackRepeatMode(forPlayMedia:with:)'
    - Selector: 'resolvePlaybackSpeedForPlayMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePlaybackSpeed(forPlayMedia:with:)'
    - Selector: 'resolveResumePlaybackForPlayMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveResumePlayback(forPlayMedia:with:)'
  - Name: INPlayMessageSoundIntentHandling
    Methods:
    - Selector: 'confirmPlayMessageSound:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(playMessageSound:completion:)'
    - Selector: 'handlePlayMessageSound:completion:'
      MethodKind: Instance
      SwiftName: 'handle(playMessageSound:completion:)'
  - Name: INPlayVoicemailIntentHandling
    Methods:
    - Selector: 'confirmPlayVoicemail:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(playVoicemail:completion:)'
    - Selector: 'handlePlayVoicemail:completion:'
      MethodKind: Instance
      SwiftName: 'handle(playVoicemail:completion:)'
  - Name: INQueryHealthSampleIntentHandling
    Methods:
    - Selector: 'confirmQueryHealthSample:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(queryHealthSample:completion:)'
    - Selector: 'handleQueryHealthSample:completion:'
      MethodKind: Instance
      SwiftName: 'handle(queryHealthSample:completion:)'
    - Selector: 'resolveExpectedResultTypeForQueryHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveExpectedResultType(forQueryHealthSample:with:)'
    - Selector: 'resolveObjectTypeForQueryHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveObjectType(forQueryHealthSample:with:)'
    - Selector: 'resolveQuestionTypeForQueryHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveQuestionType(forQueryHealthSample:with:)'
    - Selector: 'resolveRecordDatesForQueryHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecordDates(forQueryHealthSample:with:)'
    - Selector: 'resolveThresholdValuesForQueryHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveThresholdValues(forQueryHealthSample:with:)'
    - Selector: 'resolveUnitForQueryHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveUnit(forQueryHealthSample:with:)'
  - Name: INQueryHomeIntentHandling
    Methods:
    - Selector: 'confirmQueryHome:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(queryHome:completion:)'
    - Selector: 'handleQueryHome:completion:'
      MethodKind: Instance
      SwiftName: 'handle(queryHome:completion:)'
    - Selector: 'resolveEntitiesForQueryHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntities(forQueryHome:with:)'
  - Name: INReportIncidentIntentHandling
    Methods:
    - Selector: 'confirmReportIncident:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(reportIncident:completion:)'
    - Selector: 'handleReportIncident:completion:'
      MethodKind: Instance
      SwiftName: 'handle(reportIncident:completion:)'
    - Selector: 'resolveAdditionalDetailsForReportIncident:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAdditionalDetails(forReportIncident:with:)'
    - Selector: 'resolveIncidentTypeForReportIncident:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveIncidentType(forReportIncident:with:)'
    - Selector: 'resolveIsClearForReportIncident:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveIsClear(forReportIncident:with:)'
    - Selector: 'resolveStartTimeForReportIncident:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveStartTime(forReportIncident:with:)'
    - Selector: 'resolveUserLocationForReportIncident:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveUserLocation(forReportIncident:with:)'
  - Name: INRequestPaymentIntentHandling
    Methods:
    - Selector: 'confirmRequestPayment:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(requestPayment:completion:)'
    - Selector: 'handleRequestPayment:completion:'
      MethodKind: Instance
      SwiftName: 'handle(requestPayment:completion:)'
    - Selector: 'resolveCurrencyAmountForRequestPayment:completion:'
      MethodKind: Instance
      SwiftName: 'resolveCurrencyAmount(forRequestPayment:with:)'
    - Selector: 'resolveCurrencyAmountForRequestPayment:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCurrencyAmount(forRequestPayment:with:)'
    - Selector: 'resolveNoteForRequestPayment:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveNote(forRequestPayment:with:)'
    - Selector: 'resolvePayerForRequestPayment:completion:'
      MethodKind: Instance
      SwiftName: 'resolvePayer(forRequestPayment:with:)'
    - Selector: 'resolvePayerForRequestPayment:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePayer(forRequestPayment:with:)'
  - Name: INRequestRideIntentHandling
    Methods:
    - Selector: 'confirmRequestRide:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(requestRide:completion:)'
    - Selector: 'handleRequestRide:completion:'
      MethodKind: Instance
      SwiftName: 'handle(requestRide:completion:)'
    - Selector: 'resolveDropOffLocationForRequestRide:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDropOffLocation(forRequestRide:with:)'
    - Selector: 'resolvePartySizeForRequestRide:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePartySize(forRequestRide:with:)'
    - Selector: 'resolvePickupLocationForRequestRide:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePickupLocation(forRequestRide:with:)'
    - Selector: 'resolveRideOptionNameForRequestRide:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRideOptionName(forRequestRide:with:)'
    - Selector: 'resolveScheduledPickupTimeForRequestRide:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveScheduledPickupTime(forRequestRide:with:)'
  - Name: INResetTimerIntentHandling
    Methods:
    - Selector: 'confirmResetTimer:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(resetTimer:completion:)'
    - Selector: 'handleResetTimer:completion:'
      MethodKind: Instance
      SwiftName: 'handle(resetTimer:completion:)'
    - Selector: 'resolveResetMultipleForResetTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveResetMultiple(forResetTimer:with:)'
    - Selector: 'resolveTargetTimerForResetTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTimer(forResetTimer:with:)'
  - Name: INResumeTimerIntentHandling
    Methods:
    - Selector: 'confirmResumeTimer:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(resumeTimer:completion:)'
    - Selector: 'handleResumeTimer:completion:'
      MethodKind: Instance
      SwiftName: 'handle(resumeTimer:completion:)'
    - Selector: 'resolveResumeMultipleForResumeTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveResumeMultiple(forResumeTimer:with:)'
    - Selector: 'resolveTargetTimerForResumeTimer:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTimer(forResumeTimer:with:)'
  - Name: INResumeWorkoutIntentHandling
    Methods:
    - Selector: 'confirmResumeWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(resumeWorkout:completion:)'
    - Selector: 'handleResumeWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'handle(resumeWorkout:completion:)'
    - Selector: 'resolveWorkoutNameForResumeWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkoutName(forResumeWorkout:with:)'
  - Name: INRetrieveParkingLocationIntentHandling
    Methods:
    - Selector: 'confirmRetrieveParkingLocation:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(retrieveParkingLocation:completion:)'
    - Selector: 'handleRetrieveParkingLocation:completion:'
      MethodKind: Instance
      SwiftName: 'handle(retrieveParkingLocation:completion:)'
  - Name: INRunVoiceCommandIntentHandling
    Methods:
    - Selector: 'confirmRunVoiceCommand:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(runVoiceCommand:completion:)'
    - Selector: 'handleRunVoiceCommand:completion:'
      MethodKind: Instance
      SwiftName: 'handle(runVoiceCommand:completion:)'
    - Selector: 'resolveExecutionResultForRunVoiceCommand:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveExecutionResult(forRunVoiceCommand:with:)'
    - Selector: 'resolveVoiceCommandForRunVoiceCommand:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveVoiceCommand(forRunVoiceCommand:with:)'
  - Name: INRunWorkflowIntentHandling
    Methods:
    - Selector: 'confirmRunWorkflow:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(runWorkflow:completion:)'
    - Selector: 'handleRunWorkflow:completion:'
      MethodKind: Instance
      SwiftName: 'handle(runWorkflow:completion:)'
    - Selector: 'resolveWorkflowForRunWorkflow:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkflow(forRunWorkflow:with:)'
  - Name: INSaveHealthSampleIntentHandling
    Methods:
    - Selector: 'confirmSaveHealthSample:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(saveHealthSample:completion:)'
    - Selector: 'handleSaveHealthSample:completion:'
      MethodKind: Instance
      SwiftName: 'handle(saveHealthSample:completion:)'
    - Selector: 'resolveObjectTypeForSaveHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveObjectType(forSaveHealthSample:with:)'
    - Selector: 'resolveRecordDateForSaveHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecordDate(forSaveHealthSample:with:)'
    - Selector: 'resolveSampleMetadatasForSaveHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSampleMetadatas(forSaveHealthSample:with:)'
    - Selector: 'resolveUnitForSaveHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveUnit(forSaveHealthSample:with:)'
    - Selector: 'resolveValuesForSaveHealthSample:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveValues(forSaveHealthSample:with:)'
  - Name: INSaveParkingLocationIntentHandling
    Methods:
    - Selector: 'confirmSaveParkingLocation:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(saveParkingLocation:completion:)'
    - Selector: 'handleSaveParkingLocation:completion:'
      MethodKind: Instance
      SwiftName: 'handle(saveParkingLocation:completion:)'
    - Selector: 'resolveParkingLocationForSaveParkingLocation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveParkingLocation(forSaveParkingLocation:with:)'
    - Selector: 'resolveParkingNoteForSaveParkingLocation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveParkingNote(forSaveParkingLocation:with:)'
  - Name: INSaveProfileInCarIntentHandling
    Methods:
    - Selector: 'confirmSaveProfileInCar:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(saveProfileInCar:completion:)'
    - Selector: 'handleSaveProfileInCar:completion:'
      MethodKind: Instance
      SwiftName: 'handle(saveProfileInCar:completion:)'
    - Selector: 'resolveProfileNameForSaveProfileInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProfileName(forSaveProfileInCar:with:)'
    - Selector: 'resolveProfileNumberForSaveProfileInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProfileNumber(forSaveProfileInCar:with:)'
  - Name: INScanVisualCodeIntentHandling
    Methods:
    - Selector: 'confirmScanVisualCode:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(scanVisualCode:completion:)'
    - Selector: 'handleScanVisualCode:completion:'
      MethodKind: Instance
      SwiftName: 'handle(scanVisualCode:completion:)'
  - Name: INSearchAlarmIntentHandling
    Methods:
    - Selector: 'confirmSearchAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchAlarm:completion:)'
    - Selector: 'handleSearchAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchAlarm:completion:)'
    - Selector: 'resolveAlarmsForSearchAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlarms(forSearchAlarm:with:)'
  - Name: INSearchCallHistoryIntentHandling
    Methods:
    - Selector: 'confirmSearchCallHistory:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchCallHistory:completion:)'
    - Selector: 'handleSearchCallHistory:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchCallHistory:completion:)'
    - Selector: 'resolveCallTypeForSearchCallHistory:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCallType(forSearchCallHistory:with:)'
    - Selector: 'resolveCallTypesForSearchCallHistory:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCallTypes(forSearchCallHistory:with:)'
    - Selector: 'resolveDateCreatedForSearchCallHistory:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDateCreated(forSearchCallHistory:with:)'
    - Selector: 'resolveRecipientForSearchCallHistory:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecipient(forSearchCallHistory:with:)'
    - Selector: 'resolveUnseenForSearchCallHistory:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveUnseen(forSearchCallHistory:with:)'
  - Name: INSearchForAccountsIntentHandling
    Methods:
    - Selector: 'confirmSearchForAccounts:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForAccounts:completion:)'
    - Selector: 'handleSearchForAccounts:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForAccounts:completion:)'
    - Selector: 'resolveAccountNicknameForSearchForAccounts:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAccountNickname(forSearchForAccounts:with:)'
    - Selector: 'resolveAccountTypeForSearchForAccounts:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAccountType(forSearchForAccounts:with:)'
    - Selector: 'resolveOrganizationNameForSearchForAccounts:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveOrganizationName(forSearchForAccounts:with:)'
    - Selector: 'resolveRequestedBalanceTypeForSearchForAccounts:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRequestedBalanceType(forSearchForAccounts:with:)'
  - Name: INSearchForBillsIntentHandling
    Methods:
    - Selector: 'confirmSearchForBills:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForBills:completion:)'
    - Selector: 'handleSearchForBills:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForBills:completion:)'
    - Selector: 'resolveBillPayeeForSearchForBills:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveBillPayee(forSearchForBills:with:)'
    - Selector: 'resolveBillTypeForSearchForBills:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveBillType(forSearchForBills:with:)'
    - Selector: 'resolveDueDateRangeForSearchForBills:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDueDateRange(forSearchForBills:with:)'
    - Selector: 'resolvePaymentDateRangeForSearchForBills:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePaymentDateRange(forSearchForBills:with:)'
    - Selector: 'resolveStatusForSearchForBills:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveStatus(forSearchForBills:with:)'
  - Name: INSearchForContactIntentHandling
    Methods:
    - Selector: 'confirmSearchForContact:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForContact:completion:)'
    - Selector: 'handleSearchForContact:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForContact:completion:)'
    - Selector: 'resolveContactIdentifiersForSearchForContact:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContactIdentifiers(forSearchForContact:with:)'
  - Name: INSearchForFilesIntentHandling
    Methods:
    - Selector: 'confirmSearchForFiles:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForFiles:completion:)'
    - Selector: 'handleSearchForFiles:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForFiles:completion:)'
    - Selector: 'resolveAppIdForSearchForFiles:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAppId(forSearchForFiles:with:)'
    - Selector: 'resolveEntityNameForSearchForFiles:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityName(forSearchForFiles:with:)'
    - Selector: 'resolveEntityTypeForSearchForFiles:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityType(forSearchForFiles:with:)'
    - Selector: 'resolvePropertiesForSearchForFiles:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProperties(forSearchForFiles:with:)'
    - Selector: 'resolveScopeEntityNameForSearchForFiles:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveScopeEntityName(forSearchForFiles:with:)'
    - Selector: 'resolveScopeForSearchForFiles:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveScope(forSearchForFiles:with:)'
  - Name: INSearchForMeCardIntentHandling
    Methods:
    - Selector: 'confirmSearchForMeCard:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForMeCard:completion:)'
    - Selector: 'handleSearchForMeCard:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForMeCard:completion:)'
  - Name: INSearchForMediaIntentHandling
    Methods:
    - Selector: 'confirmSearchForMedia:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForMedia:completion:)'
    - Selector: 'handleSearchForMedia:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForMedia:completion:)'
    - Selector: 'resolveMediaItemsForSearchForMedia:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveMediaItems(forSearchForMedia:with:)'
  - Name: INSearchForMessagesIntentHandling
    Methods:
    - Selector: 'confirmSearchForMessages:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForMessages:completion:)'
    - Selector: 'handleSearchForMessages:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForMessages:completion:)'
    - Selector: 'resolveAttributesForSearchForMessages:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAttributes(forSearchForMessages:with:)'
    - Selector: 'resolveDateTimeRangeForSearchForMessages:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDateTimeRange(forSearchForMessages:with:)'
    - Selector: 'resolveGroupNamesForSearchForMessages:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveGroupNames(forSearchForMessages:with:)'
    - Selector: 'resolveRecipientsForSearchForMessages:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecipients(forSearchForMessages:with:)'
    - Selector: 'resolveSendersForSearchForMessages:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSenders(forSearchForMessages:with:)'
    - Selector: 'resolveSpeakableGroupNamesForSearchForMessages:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSpeakableGroupNames(forSearchForMessages:with:)'
  - Name: INSearchForNotebookItemsIntentHandling
    Methods:
    - Selector: 'confirmSearchForNotebookItems:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForNotebookItems:completion:)'
    - Selector: 'handleSearchForNotebookItems:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForNotebookItems:completion:)'
    - Selector: 'resolveContentForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContent(forSearchForNotebookItems:with:)'
    - Selector: 'resolveDateSearchTypeForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDateSearchType(forSearchForNotebookItems:with:)'
    - Selector: 'resolveDateTimeForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDateTime(forSearchForNotebookItems:with:)'
    - Selector: 'resolveItemTypeForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveItemType(forSearchForNotebookItems:with:)'
    - Selector: 'resolveLocationForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLocation(forSearchForNotebookItems:with:)'
    - Selector: 'resolveLocationSearchTypeForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLocationSearchType(forSearchForNotebookItems:with:)'
    - Selector: 'resolveStatusForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveStatus(forSearchForNotebookItems:with:)'
    - Selector: 'resolveTaskPriorityForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTaskPriority(forSearchForNotebookItems:with:)'
    - Selector: 'resolveTemporalEventTriggerTypesForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTriggerTypes(forSearchForNotebookItems:with:)'
    - Selector: 'resolveTitleForSearchForNotebookItems:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTitle(forSearchForNotebookItems:with:)'
  - Name: INSearchForPhotosIntentHandling
    Methods:
    - Selector: 'confirmSearchForPhotos:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForPhotos:completion:)'
    - Selector: 'handleSearchForPhotos:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForPhotos:completion:)'
    - Selector: 'resolveAlbumNameForSearchForPhotos:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlbumName(forSearchForPhotos:with:)'
    - Selector: 'resolveDateCreatedForSearchForPhotos:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDateCreated(forSearchForPhotos:with:)'
    - Selector: 'resolveLocationCreatedForSearchForPhotos:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLocationCreated(forSearchForPhotos:with:)'
    - Selector: 'resolvePeopleInPhotoForSearchForPhotos:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePeopleInPhoto(forSearchForPhotos:with:)'
    - Selector: 'resolveSearchTermsForSearchForPhotos:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSearchTerms(forSearchForPhotos:with:)'
  - Name: INSearchForTimersIntentHandling
    Methods:
    - Selector: 'confirmSearchForTimers:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(searchForTimers:completion:)'
    - Selector: 'handleSearchForTimers:completion:'
      MethodKind: Instance
      SwiftName: 'handle(searchForTimers:completion:)'
    - Selector: 'resolveDurationForSearchForTimers:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDuration(forSearchForTimers:with:)'
    - Selector: 'resolveLabelForSearchForTimers:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLabel(forSearchForTimers:with:)'
    - Selector: 'resolveStateForSearchForTimers:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveState(forSearchForTimers:with:)'
    - Selector: 'resolveTypeForSearchForTimers:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveType(forSearchForTimers:with:)'
  - Name: INSendMessageIntentHandling
    Methods:
    - Selector: 'confirmSendMessage:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(sendMessage:completion:)'
    - Selector: 'handleSendMessage:completion:'
      MethodKind: Instance
      SwiftName: 'handle(sendMessage:completion:)'
    - Selector: 'resolveContentForSendMessage:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContent(forSendMessage:with:)'
    - Selector: 'resolveGroupNameForSendMessage:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveGroupName(forSendMessage:with:)'
    - Selector: 'resolveOutgoingMessageTypeForSendMessage:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveOutgoingMessageType(forSendMessage:with:)'
    - Selector: 'resolveRecipientsForSendMessage:completion:'
      MethodKind: Instance
      SwiftName: 'resolveRecipients(forSendMessage:with:)'
    - Selector: 'resolveRecipientsForSendMessage:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecipients(forSendMessage:with:)'
    - Selector: 'resolveSpeakableGroupNameForSendMessage:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSpeakableGroupName(forSendMessage:with:)'
  - Name: INSendPaymentIntentHandling
    Methods:
    - Selector: 'confirmSendPayment:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(sendPayment:completion:)'
    - Selector: 'handleSendPayment:completion:'
      MethodKind: Instance
      SwiftName: 'handle(sendPayment:completion:)'
    - Selector: 'resolveCurrencyAmountForSendPayment:completion:'
      MethodKind: Instance
      SwiftName: 'resolveCurrencyAmount(forSendPayment:with:)'
    - Selector: 'resolveCurrencyAmountForSendPayment:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCurrencyAmount(forSendPayment:with:)'
    - Selector: 'resolveNoteForSendPayment:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveNote(forSendPayment:with:)'
    - Selector: 'resolvePayeeForSendPayment:completion:'
      MethodKind: Instance
      SwiftName: 'resolvePayee(forSendPayment:with:)'
    - Selector: 'resolvePayeeForSendPayment:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePayee(forSendPayment:with:)'
  - Name: INSetAudioSourceInCarIntentHandling
    Methods:
    - Selector: 'confirmSetAudioSourceInCar:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setAudioSourceInCar:completion:)'
    - Selector: 'handleSetAudioSourceInCar:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setAudioSourceInCar:completion:)'
    - Selector: 'resolveAudioSourceForSetAudioSourceInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAudioSource(forSetAudioSourceInCar:with:)'
    - Selector: 'resolveRelativeAudioSourceReferenceForSetAudioSourceInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRelativeAudioSourceReference(forSetAudioSourceInCar:with:)'
  - Name: INSetBinarySettingIntentHandling
    Methods:
    - Selector: 'confirmSetBinarySetting:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setBinarySetting:completion:)'
    - Selector: 'handleSetBinarySetting:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setBinarySetting:completion:)'
    - Selector: 'resolveBinaryValueForSetBinarySetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveBinaryValue(forSetBinarySetting:with:)'
    - Selector: 'resolveSettingMetadataForSetBinarySetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSettingMetadata(forSetBinarySetting:with:)'
    - Selector: 'resolveTemporalEventTriggerForSetBinarySetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forSetBinarySetting:with:)'
  - Name: INSetCarLockStatusIntentHandling
    Methods:
    - Selector: 'confirmSetCarLockStatus:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setCarLockStatus:completion:)'
    - Selector: 'handleSetCarLockStatus:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setCarLockStatus:completion:)'
    - Selector: 'resolveCarNameForSetCarLockStatus:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forSetCarLockStatus:with:)'
    - Selector: 'resolveLockedForSetCarLockStatus:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLocked(forSetCarLockStatus:with:)'
  - Name: INSetClimateSettingsInCarIntentHandling
    Methods:
    - Selector: 'confirmSetClimateSettingsInCar:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setClimateSettingsInCar:completion:)'
    - Selector: 'handleSetClimateSettingsInCar:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setClimateSettingsInCar:completion:)'
    - Selector: 'resolveAirCirculationModeForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAirCirculationMode(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveCarNameForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveClimateZoneForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveClimateZone(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveEnableAirConditionerForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnableAirConditioner(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveEnableAutoModeForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnableAutoMode(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveEnableClimateControlForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnableClimateControl(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveEnableFanForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnableFan(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveFanSpeedIndexForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveFanSpeedIndex(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveFanSpeedPercentageForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveFanSpeedPercentage(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveRelativeFanSpeedSettingForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRelativeFanSpeedSetting(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveRelativeTemperatureSettingForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRelativeTemperatureSetting(forSetClimateSettingsInCar:with:)'
    - Selector: 'resolveTemperatureForSetClimateSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemperature(forSetClimateSettingsInCar:with:)'
  - Name: INSetDefrosterSettingsInCarIntentHandling
    Methods:
    - Selector: 'confirmSetDefrosterSettingsInCar:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setDefrosterSettingsInCar:completion:)'
    - Selector: 'handleSetDefrosterSettingsInCar:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setDefrosterSettingsInCar:completion:)'
    - Selector: 'resolveCarNameForSetDefrosterSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forSetDefrosterSettingsInCar:with:)'
    - Selector: 'resolveDefrosterForSetDefrosterSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDefroster(forSetDefrosterSettingsInCar:with:)'
    - Selector: 'resolveEnableForSetDefrosterSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnable(forSetDefrosterSettingsInCar:with:)'
  - Name: INSetLabeledSettingIntentHandling
    Methods:
    - Selector: 'confirmSetLabeledSetting:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setLabeledSetting:completion:)'
    - Selector: 'handleSetLabeledSetting:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setLabeledSetting:completion:)'
    - Selector: 'resolveLabeledValueForSetLabeledSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLabeledValue(forSetLabeledSetting:with:)'
    - Selector: 'resolveSettingMetadataForSetLabeledSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSettingMetadata(forSetLabeledSetting:with:)'
    - Selector: 'resolveTemporalEventTriggerForSetLabeledSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forSetLabeledSetting:with:)'
  - Name: INSetMessageAttributeIntentHandling
    Methods:
    - Selector: 'confirmSetMessageAttribute:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setMessageAttribute:completion:)'
    - Selector: 'handleSetMessageAttribute:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setMessageAttribute:completion:)'
    - Selector: 'resolveAttributeForSetMessageAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAttribute(forSetMessageAttribute:with:)'
  - Name: INSetNicknameIntentHandling
    Methods:
    - Selector: 'confirmSetNickname:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setNickname:completion:)'
    - Selector: 'handleSetNickname:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setNickname:completion:)'
    - Selector: 'resolveTargetNicknameForSetNickname:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetNickname(forSetNickname:with:)'
  - Name: INSetNumericSettingIntentHandling
    Methods:
    - Selector: 'confirmSetNumericSetting:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setNumericSetting:completion:)'
    - Selector: 'handleSetNumericSetting:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setNumericSetting:completion:)'
    - Selector: 'resolveActionForSetNumericSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAction(forSetNumericSetting:with:)'
    - Selector: 'resolveBoundedValueForSetNumericSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveBoundedValue(forSetNumericSetting:with:)'
    - Selector: 'resolveNumericValueForSetNumericSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveNumericValue(forSetNumericSetting:with:)'
    - Selector: 'resolveSettingMetadataForSetNumericSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSettingMetadata(forSetNumericSetting:with:)'
    - Selector: 'resolveTemporalEventTriggerForSetNumericSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forSetNumericSetting:with:)'
  - Name: INSetProfileInCarIntentHandling
    Methods:
    - Selector: 'confirmSetProfileInCar:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setProfileInCar:completion:)'
    - Selector: 'handleSetProfileInCar:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setProfileInCar:completion:)'
    - Selector: 'resolveCarNameForSetProfileInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forSetProfileInCar:with:)'
    - Selector: 'resolveProfileNameForSetProfileInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProfileName(forSetProfileInCar:with:)'
    - Selector: 'resolveProfileNumberForSetProfileInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProfileNumber(forSetProfileInCar:with:)'
  - Name: INSetRadioStationIntentHandling
    Methods:
    - Selector: 'confirmSetRadioStation:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setRadioStation:completion:)'
    - Selector: 'handleSetRadioStation:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setRadioStation:completion:)'
    - Selector: 'resolveChannelForSetRadioStation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveChannel(forSetRadioStation:with:)'
    - Selector: 'resolveFrequencyForSetRadioStation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveFrequency(forSetRadioStation:with:)'
    - Selector: 'resolvePresetNumberForSetRadioStation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePresetNumber(forSetRadioStation:with:)'
    - Selector: 'resolveRadioTypeForSetRadioStation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRadioType(forSetRadioStation:with:)'
    - Selector: 'resolveStationNameForSetRadioStation:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveStationName(forSetRadioStation:with:)'
  - Name: INSetRelationshipIntentHandling
    Methods:
    - Selector: 'confirmSetRelationship:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setRelationship:completion:)'
    - Selector: 'handleSetRelationship:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setRelationship:completion:)'
    - Selector: 'resolveContactIdentifiersForSetRelationship:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContactIdentifiers(forSetRelationship:with:)'
    - Selector: 'resolveTargetRelationshipForSetRelationship:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetRelationship(forSetRelationship:with:)'
  - Name: INSetSeatSettingsInCarIntentHandling
    Methods:
    - Selector: 'confirmSetSeatSettingsInCar:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setSeatSettingsInCar:completion:)'
    - Selector: 'handleSetSeatSettingsInCar:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setSeatSettingsInCar:completion:)'
    - Selector: 'resolveCarNameForSetSeatSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCarName(forSetSeatSettingsInCar:with:)'
    - Selector: 'resolveEnableCoolingForSetSeatSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnableCooling(forSetSeatSettingsInCar:with:)'
    - Selector: 'resolveEnableHeatingForSetSeatSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnableHeating(forSetSeatSettingsInCar:with:)'
    - Selector: 'resolveEnableMassageForSetSeatSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEnableMassage(forSetSeatSettingsInCar:with:)'
    - Selector: 'resolveLevelForSetSeatSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLevel(forSetSeatSettingsInCar:with:)'
    - Selector: 'resolveRelativeLevelSettingForSetSeatSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRelativeLevelSetting(forSetSeatSettingsInCar:with:)'
    - Selector: 'resolveSeatForSetSeatSettingsInCar:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSeat(forSetSeatSettingsInCar:with:)'
  - Name: INSetTaskAttributeIntentHandling
    Methods:
    - Selector: 'confirmSetTaskAttribute:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setTaskAttribute:completion:)'
    - Selector: 'handleSetTaskAttribute:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setTaskAttribute:completion:)'
    - Selector: 'resolvePriorityForSetTaskAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePriority(forSetTaskAttribute:with:)'
    - Selector: 'resolveSpatialEventTriggerForSetTaskAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSpatialEventTrigger(forSetTaskAttribute:with:)'
    - Selector: 'resolveStatusForSetTaskAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveStatus(forSetTaskAttribute:with:)'
    - Selector: 'resolveTargetTaskForSetTaskAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTask(forSetTaskAttribute:with:)'
    - Selector: 'resolveTaskTitleForSetTaskAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTaskTitle(forSetTaskAttribute:with:)'
    - Selector: 'resolveTemporalEventTriggerForSetTaskAttribute:completion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forSetTaskAttribute:with:)'
    - Selector: 'resolveTemporalEventTriggerForSetTaskAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forSetTaskAttribute:with:)'
  - Name: INSetTemporalSettingIntentHandling
    Methods:
    - Selector: 'confirmSetTemporalSetting:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setTemporalSetting:completion:)'
    - Selector: 'handleSetTemporalSetting:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setTemporalSetting:completion:)'
    - Selector: 'resolveActionForSetTemporalSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAction(forSetTemporalSetting:with:)'
    - Selector: 'resolveSettingMetadataForSetTemporalSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveSettingMetadata(forSetTemporalSetting:with:)'
    - Selector: 'resolveTemporalEventTriggerForSetTemporalSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTemporalEventTrigger(forSetTemporalSetting:with:)'
    - Selector: 'resolveTimeValueForSetTemporalSetting:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTimeValue(forSetTemporalSetting:with:)'
  - Name: INSetTimerAttributeIntentHandling
    Methods:
    - Selector: 'confirmSetTimerAttribute:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(setTimerAttribute:completion:)'
    - Selector: 'handleSetTimerAttribute:completion:'
      MethodKind: Instance
      SwiftName: 'handle(setTimerAttribute:completion:)'
    - Selector: 'resolveTargetTimerForSetTimerAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTargetTimer(forSetTimerAttribute:with:)'
    - Selector: 'resolveToDurationForSetTimerAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveToDuration(forSetTimerAttribute:with:)'
    - Selector: 'resolveToLabelForSetTimerAttribute:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveToLabel(forSetTimerAttribute:with:)'
  - Name: INShareETAIntentHandling
    Methods:
    - Selector: 'confirmShareETA:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(shareETA:completion:)'
    - Selector: 'handleShareETA:completion:'
      MethodKind: Instance
      SwiftName: 'handle(shareETA:completion:)'
    - Selector: 'resolveRecipientsForShareETA:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecipients(forShareETA:with:)'
  - Name: INShareFileIntentHandling
    Methods:
    - Selector: 'confirmShareFile:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(shareFile:completion:)'
    - Selector: 'handleShareFile:completion:'
      MethodKind: Instance
      SwiftName: 'handle(shareFile:completion:)'
    - Selector: 'resolveEntityNamesForShareFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityNames(forShareFile:with:)'
    - Selector: 'resolveRecipientsForShareFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecipients(forShareFile:with:)'
    - Selector: 'resolveShareModeForShareFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveShareMode(forShareFile:with:)'
  - Name: INShareFocusStatusIntentHandling
    Methods:
    - Selector: 'confirmShareFocusStatus:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(shareFocusStatus:completion:)'
    - Selector: 'handleShareFocusStatus:completion:'
      MethodKind: Instance
      SwiftName: 'handle(shareFocusStatus:completion:)'
  - Name: INShowHomeIntentHandling
    Methods:
    - Selector: 'confirmShowHome:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(showHome:completion:)'
    - Selector: 'handleShowHome:completion:'
      MethodKind: Instance
      SwiftName: 'handle(showHome:completion:)'
    - Selector: 'resolveFiltersForShowHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveFilters(forShowHome:with:)'
    - Selector: 'resolveTimeForShowHome:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTime(forShowHome:with:)'
  - Name: INSnoozeAlarmIntentHandling
    Methods:
    - Selector: 'confirmSnoozeAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(snoozeAlarm:completion:)'
    - Selector: 'handleSnoozeAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'handle(snoozeAlarm:completion:)'
    - Selector: 'resolveAlarmsForSnoozeAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlarms(forSnoozeAlarm:with:)'
  - Name: INSnoozeTasksIntentHandling
    Methods:
    - Selector: 'confirmSnoozeTasks:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(snoozeTasks:completion:)'
    - Selector: 'handleSnoozeTasks:completion:'
      MethodKind: Instance
      SwiftName: 'handle(snoozeTasks:completion:)'
    - Selector: 'resolveNextTriggerTimeForSnoozeTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveNextTriggerTime(forSnoozeTasks:with:)'
    - Selector: 'resolveTasksForSnoozeTasks:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTasks(forSnoozeTasks:with:)'
  - Name: INSpeakable
    Properties:
    - Name: spokenPhrase
      Nullability: O
  - Name: INStartAudioCallIntentHandling
    Methods:
    - Selector: 'confirmStartAudioCall:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(startAudioCall:completion:)'
    - Selector: 'handleStartAudioCall:completion:'
      MethodKind: Instance
      SwiftName: 'handle(startAudioCall:completion:)'
    - Selector: 'resolveContactsForStartAudioCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContacts(forStartAudioCall:with:)'
    - Selector: 'resolveDestinationTypeForStartAudioCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationType(forStartAudioCall:with:)'
  - Name: INStartCallIntentHandling
    Methods:
    - Selector: 'confirmStartCall:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(startCall:completion:)'
    - Selector: 'handleStartCall:completion:'
      MethodKind: Instance
      SwiftName: 'handle(startCall:completion:)'
    - Selector: 'resolveCallCapabilityForStartCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCallCapability(forStartCall:with:)'
    - Selector: 'resolveCallRecordToCallBackForStartCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveCallRecordToCallBack(forStartCall:with:)'
    - Selector: 'resolveContactsForStartCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContacts(forStartCall:with:)'
    - Selector: 'resolveDestinationTypeForStartCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDestinationType(forStartCall:with:)'
  - Name: INStartPhotoPlaybackIntentHandling
    Methods:
    - Selector: 'confirmStartPhotoPlayback:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(startPhotoPlayback:completion:)'
    - Selector: 'handleStartPhotoPlayback:completion:'
      MethodKind: Instance
      SwiftName: 'handle(startPhotoPlayback:completion:)'
    - Selector: 'resolveAlbumNameForStartPhotoPlayback:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlbumName(forStartPhotoPlayback:with:)'
    - Selector: 'resolveDateCreatedForStartPhotoPlayback:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveDateCreated(forStartPhotoPlayback:with:)'
    - Selector: 'resolveLocationCreatedForStartPhotoPlayback:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveLocationCreated(forStartPhotoPlayback:with:)'
    - Selector: 'resolvePeopleInPhotoForStartPhotoPlayback:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolvePeopleInPhoto(forStartPhotoPlayback:with:)'
  - Name: INStartVideoCallIntentHandling
    Methods:
    - Selector: 'confirmStartVideoCall:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(startVideoCall:completion:)'
    - Selector: 'handleStartVideoCall:completion:'
      MethodKind: Instance
      SwiftName: 'handle(startVideoCall:completion:)'
    - Selector: 'resolveContactsForStartVideoCall:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveContacts(forStartVideoCall:with:)'
  - Name: INStartWorkoutIntentHandling
    Methods:
    - Selector: 'confirmStartWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(startWorkout:completion:)'
    - Selector: 'handleStartWorkout:completion:'
      MethodKind: Instance
      SwiftName: 'handle(startWorkout:completion:)'
    - Selector: 'resolveGoalValueForStartWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveGoalValue(forStartWorkout:with:)'
    - Selector: 'resolveIsOpenEndedForStartWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveIsOpenEnded(forStartWorkout:with:)'
    - Selector: 'resolveWorkoutGoalUnitTypeForStartWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkoutGoalUnitType(forStartWorkout:with:)'
    - Selector: 'resolveWorkoutLocationTypeForStartWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkoutLocationType(forStartWorkout:with:)'
    - Selector: 'resolveWorkoutNameForStartWorkout:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveWorkoutName(forStartWorkout:with:)'
  - Name: INStopShareETAIntentHandling
    Methods:
    - Selector: 'confirmStopShareETA:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(stopShareETA:completion:)'
    - Selector: 'handleStopShareETA:completion:'
      MethodKind: Instance
      SwiftName: 'handle(stopShareETA:completion:)'
    - Selector: 'resolveRecipientsForStopShareETA:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveRecipients(forStopShareETA:with:)'
  - Name: INTransferMoneyIntentHandling
    Methods:
    - Selector: 'confirmTransferMoney:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(transferMoney:completion:)'
    - Selector: 'handleTransferMoney:completion:'
      MethodKind: Instance
      SwiftName: 'handle(transferMoney:completion:)'
    - Selector: 'resolveFromAccountForTransferMoney:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveFromAccount(forTransferMoney:with:)'
    - Selector: 'resolveToAccountForTransferMoney:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveToAccount(forTransferMoney:with:)'
    - Selector: 'resolveTransactionAmountForTransferMoney:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTransactionAmount(forTransferMoney:with:)'
    - Selector: 'resolveTransactionNoteForTransferMoney:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTransactionNote(forTransferMoney:with:)'
    - Selector: 'resolveTransactionScheduledDateForTransferMoney:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveTransactionScheduledDate(forTransferMoney:with:)'
  - Name: INUncompressFileIntentHandling
    Methods:
    - Selector: 'confirmUncompressFile:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(uncompressFile:completion:)'
    - Selector: 'handleUncompressFile:completion:'
      MethodKind: Instance
      SwiftName: 'handle(uncompressFile:completion:)'
    - Selector: 'resolveEntityNameForUncompressFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityName(forUncompressFile:with:)'
    - Selector: 'resolveEntityTypeForUncompressFile:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveEntityType(forUncompressFile:with:)'
  - Name: INUpdateAlarmIntentHandling
    Methods:
    - Selector: 'confirmUpdateAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(updateAlarm:completion:)'
    - Selector: 'handleUpdateAlarm:completion:'
      MethodKind: Instance
      SwiftName: 'handle(updateAlarm:completion:)'
    - Selector: 'resolveAlarmForUpdateAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAlarm(forUpdateAlarm:with:)'
    - Selector: 'resolveOperationForUpdateAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveOperation(forUpdateAlarm:with:)'
    - Selector: 'resolveProposedLabelForUpdateAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProposedLabel(forUpdateAlarm:with:)'
    - Selector: 'resolveProposedTimeForUpdateAlarm:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveProposedTime(forUpdateAlarm:with:)'
  - Name: INUpdateMediaAffinityIntentHandling
    Methods:
    - Selector: 'confirmUpdateMediaAffinity:completion:'
      MethodKind: Instance
      SwiftName: 'confirm(updateMediaAffinity:completion:)'
    - Selector: 'handleUpdateMediaAffinity:completion:'
      MethodKind: Instance
      SwiftName: 'handle(updateMediaAffinity:completion:)'
    - Selector: 'resolveAffinityTypeForUpdateMediaAffinity:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveAffinityType(forUpdateMediaAffinity:with:)'
    - Selector: 'resolveMediaItemsForUpdateMediaAffinity:withCompletion:'
      MethodKind: Instance
      SwiftName: 'resolveMediaItems(forUpdateMediaAffinity:with:)'
Tags:
- Name: INIntentErrorCode
  NSErrorDomain: INIntentErrorDomain
