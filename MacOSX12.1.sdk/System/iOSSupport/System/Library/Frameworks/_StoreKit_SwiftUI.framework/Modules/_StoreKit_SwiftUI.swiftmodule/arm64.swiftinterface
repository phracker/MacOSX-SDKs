// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.46.202 clang-1300.0.29.30)
// swift-module-flags: -target arm64e-apple-ios14.0-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name _StoreKit_SwiftUI
import Foundation
@_exported import StoreKit
import Swift
import SwiftUI
import _Concurrency
import os.log
import os
@available(iOS 15.0, macCatalyst 15.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension SwiftUI.View {
  public func refundRequestSheet(for transactionID: Swift.UInt64, isPresented: SwiftUI.Binding<Swift.Bool>, onDismiss: ((Swift.Result<StoreKit.Transaction.RefundRequestStatus, StoreKit.Transaction.RefundRequestError>) -> ())? = nil) -> some SwiftUI.View
  
}
@available(iOS 15.0, macCatalyst 15.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension SwiftUI.View {
  public func manageSubscriptionsSheet(isPresented: SwiftUI.Binding<Swift.Bool>) -> some SwiftUI.View
  
}
@available(iOS 14.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension SwiftUI.View {
  public func appStoreOverlay(isPresented: SwiftUI.Binding<Swift.Bool>, configuration: @escaping () -> StoreKit.SKOverlay.Configuration) -> some SwiftUI.View
  
}
