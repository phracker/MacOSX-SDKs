---
Name: HomeKit
Classes:
- Name: HMCameraAudioControl
  Methods:
  - Selector: 'readOn:'
    SwiftName: 'readOn(_:)'
    MethodKind: Instance
  - Selector: 'writeOn:completionHandler:'
    SwiftName: 'writeOn(_:completionHandler:)'
    MethodKind: Instance
- Name: HMEventTrigger
  Methods:
  - Selector: 'predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:applyingOffset:'
    SwiftName: 'predicateForEvaluatingTrigger(occurringBefore:applyingOffset:)'
    MethodKind: Class
  - Selector: 'predicateForEvaluatingTriggerOccurringAfterSignificantEvent:applyingOffset:'
    SwiftName: 'predicateForEvaluatingTrigger(occurringAfter:applyingOffset:)'
    MethodKind: Class
  - Selector: 'predicateForEvaluatingTriggerOccurringBeforeDateWithComponents:'
    SwiftName: 'predicateForEvaluatingTrigger(occurringBefore:)'
    MethodKind: Class
  - Selector: 'predicateForEvaluatingTriggerOccurringOnDateWithComponents:'
    SwiftName: 'predicateForEvaluatingTrigger(occurringOn:)'
    MethodKind: Class
  - Selector: 'predicateForEvaluatingTriggerOccurringAfterDateWithComponents:'
    SwiftName: 'predicateForEvaluatingTrigger(occurringAfter:)'
    MethodKind: Class
  - Selector: 'predicateForEvaluatingTriggerWithCharacteristic:relatedBy:toValue:'
    SwiftName: 'predicateForEvaluatingTrigger(_:relatedBy:toValue:)'
    MethodKind: Class
- Name: HMHome
  Methods:
  - Selector: 'servicesWithTypes:'
    SwiftName: 'servicesWithTypes(_:)'
    MethodKind: Instance
- Name: HMTimerTrigger
  Methods:
  - Selector: 'initWithName:fireDate:timeZone:recurrence:recurrenceCalendar:'
    SwiftName: 'init(name:fireDate:timeZone:recurrence:recurrenceCalendar:)'
    MethodKind: Instance
  - Selector: 'updateFireDate:completionHandler:'
    SwiftName: 'updateFireDate(_:completionHandler:)'
    MethodKind: Instance
  - Selector: 'initWithName:fireDate:timeZone:recurrences:'
    SwiftName: 'init(name:fireDate:timeZone:recurrences:)'
    MethodKind: Instance
- Name: HMHomeManagerDelegate
  Methods:
  - Selector: 'homeManager:didReceiveAddAccessoryRequest:'
    SwiftName: 'homeManager(_:didReceiveAddAccessoryRequest:)'
    MethodKind: Instance
- Name: HMAddAccessoryRequest
  Methods:
  - Selector: 'payloadWithOwnershipToken:'
    SwiftName: 'makePayload(ownershipToken:)'
    MethodKind: Instance
  - Selector: 'payloadWithURL:ownershipToken:'
    SwiftName: 'makePayload(url:ownershipToken:)'
    MethodKind: Instance
Tags:
- Name: HMErrorCode
  NSErrorDomain: HMErrorDomain
SwiftVersions:
- Version: 3.0
  Classes:
    - Name: HMActionSet
      Properties:
        - Name: lastExecutionDate
          Nullability: N
