.\"
.\" Copyright (c) 2000-2021 Apple Inc.  All rights reserved.
.\"
.Dd January 25, 2021
.Dt NVRAM 8
.Os macOS
.Sh NAME
.Nm nvram
.Nd manipulate firmware NVRAM variables
.Sh SYNOPSIS
.Nm
.Op Fl x
.Op Fl p
.Op Fl f Ar filename
.Op Fl d Ar name
.Op Fl c
.Op Ar name Op = Ar value Op ...
.Sh DESCRIPTION
The
.Nm
command allows manipulation of firmware NVRAM variables.
It can be used to get or set a variable.
It can also be used to print all of the variables or set a list of
variables from a file.
Changes to NVRAM variables are only saved by clean restart or shutdown.
.Pp
In principle,
.Ar name
can be any string.
In practice, not all strings will be accepted.
Some variables require administrator privilege to get or set.
.Pp
The given
.Ar value
must match the data type required for
.Ar name .
Binary data can be set using the %xx notation, where xx is the hex
value of the byte.
The type for new variables is always binary data.
.Sh OPTIONS
.Bl -tag -width ".Fl f Ar filename"
.It Fl d Ar name
Deletes the named firmware variable.
.It Fl f Ar filename
Set firmware variables from a text file.
The file must be a list of "name value" statements.
The first space on each line is taken to be the separator between
"name" and "value".
If the last character of a line is \\, the value extends to the next line.
.It Fl x
Use XML format for reading and writing variables.
This option must be used before the
.Fl p
or
.Fl f
options, since arguments are processed in order.
.It Fl c
Delete all of the firmware variables.
.It Fl p
Print all of the firmware variables.
.El
.Sh EXAMPLES
.ti +8n
example% nvram boot-args="-s rd=*hd:10"
.Pp
Set the boot-args variable to "-s rd=*hd:10".
This would specify single user mode with the root device in hard
drive partition 10.
.Pp
.ti +8n
example% nvram my-variable="String One%00String Two%00%00"
.Pp
Create a new variable, my-variable, containing a list of two
C-strings that is terminated by a NUL.
.Pp
.ti +8n
example% nvram -d my-variable
.Pp
Deletes the variable named my-variable.
