.\"
.\"
.Dd May 25, 2017
.Dt EFICHECK 8
.\".Os BSD 4
.Sh NAME
.Nm eficheck
.Nd "check the integrity of the x86 flash chip firmware."
.Sh SYNOPSIS
.Nm eficheck
.Cm --integrity-check
.Op -h Ar EFI-hash-input-file
.Op -b Ar EFI-binary-input-file
.Nm
.Cm --show-hashes 
.Op -h Ar EFI-hash-input-file
.Op -b Ar EFI-binary-input-file
.Nm
.Cm --generate-hashes 
.Op -h Ar EFI-hash-output-file
.Op -p Ar output-path
.Nm
.Cm --save 
.Op -b Ar EFI-binary-output-file
.Nm
.Cm --cleanup
.Op -b Ar EFI-binary-input-and-output-file>
.Nm
.Cm --version
.Nm
.Cm --help
.Sh DESCRIPTION
.Nm eficheck
is a tool to check the x86 flash chip firmware.
.\".Nm
.Pp
The following commands can be used with eficheck:
.Pp
.Cm --integrity-check
hashes portion of the firmware and compares against known-good hashes
.Pp
.Cm --generate-hashes 
outputs hashes for a given firmware to be used as known-good hashes
.Pp
.Cm --show-hashes 
shows the hashes for the sub-sections of the firmware which are measured
.Pp
.Cm --save
saves the full flash chip contents to a binary file. Requires root privileges.
.Pp
.Cm --cleanup
zeros any privacy-sensitive data (such as nvram), enabling the file to be shared for analysis.
.Pp
.Cm --version
print out eficheck version number.
.Pp
.Cm --help
display a short help.
.Pp
.Sh EXAMPLES
.Pp
 	  'eficheck --save -b firmware.bin'
.Pp
 		 Save this system's EFI firmware as firmware.bin
.Pp
 	  'eficheck --cleanup -b firmware.bin'
.Pp
 		 Overwrite the EFI variables portion of the firmware.bin, in place
.Pp
 	  'eficheck --generate-hashes'
.Pp
 		 Analyze the current system's installed EFI firmware, and store the hashes into hash file(s) in current folder
.Pp
 		 File name(s) will be selected according to image's EFI version(s)
.Pp
	  'eficheck --generate-hashes -b firmware.bin'
.Pp
		 Analyze the firmware.bin, and store the hashes into hash file(s) in current folder. Filename will be based on the detected firmware version.
.Pp
	  'eficheck --generate-hashes -p /usr/local/allowlists'
.Pp
		 Analyze the current system's installed EFI firmware, and store the hashes into hash file(s) in /usr/local/allowlists folder
.Pp
	  'eficheck --integrity-check'
.Pp
		 Attempt to automatically determine which firmware you are running, and integrity check against the appropriate file, and report any differences
.Pp
	  'eficheck --integrity-check -h /usr/libexec/firmwarecheckers/eficheck/EFIAllowListShipping.bundle/allowlists/IM171.88Z.0105.B08.1604111319.0.ealf'
.Pp
		 Compare the current system's EFI firmware against the Apple-provided expected measurements for an "iMac17,1" at firmware revision B08, and report any differences
.Pp
	  'eficheck --integrity-check -h hash.ealf -b firmware.bin'
.Pp
		 Compare the given hash file against against the given firmware image and report any differences
.Pp
	  'eficheck --show-hashes'
.Pp
		 Print the hashes for the current system's installed EFI firmware to stdout
.Pp
	  'eficheck --show-hashes -b firmware.bin'
.Pp
		 Print the hashes for the given firmware.bin to stdout
.Pp
	  'eficheck --show-hashes -h IM171.88Z.0105.B08.1604111319.0.ealf'
.Pp
		 Print the hashes for the given allowlist to stdout
.Pp
