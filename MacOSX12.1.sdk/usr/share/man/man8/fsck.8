.\" Copyright (c) 1980, 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)fsck.8	8.4 (Berkeley) 5/9/95
.\"
.Dd May 18, 2010
.Dt FSCK 8
.Os BSD 4
.Sh NAME
.Nm fsck
.Nd filesystem consistency check and interactive repair
.Sh SYNOPSIS
.Nm fsck
.Fl p
.Op Fl f
.Nm fsck
.Op Fl l Ar maxparallel
.Op Fl q
.Op Fl y
.Op Fl n
.Op Fl d
.Sh DESCRIPTION
The first form of
.Nm fsck
preens a standard set of filesystems or the specified filesystems.
It is normally used in the script
.Pa /etc/rc
during automatic reboot.
Here
.Nm fsck
reads the filesystem descriptor table (using
.Xr getfsent 3 )
to determine which filesystems to check.
Only partitions that have ``rw,'' ``rq'' or ``ro'' as options,
and that have non-zero pass number are checked.
Filesystems with pass number 1 (normally just the root filesystem)
are checked one at a time.
When pass 1 completes, all remaining filesystems are checked,
running one process per disk drive.
The disk drive containing each filesystem is inferred from the shortest prefix
of the device name that ends in one or more digits; the remaining characters
are assumed to be the partition designator.
In preening mode,
filesystems that are marked clean are skipped.
Filesystems are marked clean when they are unmounted,
when they have been mounted read-only, or when
.Nm fsck
runs on them successfully.
.Pp
It should be noted that 
.Nm fsck 
is now essentially a wrapper that invokes other 
.Pa fsck_XXX
utilities as needed.  Currently, 
.Nm fsck 
can invoke 
.Pa fsck_hfs ,
.Pa fsck_apfs ,
.Pa fsck_msdos ,
.Pa fsck_exfat ,
and 
.Pa fsck_udf . 
If this underlying process that 
.Nm fsck 
invokes encounters serious inconsistencies or the filesystem type is not one 
of the above, it exits
with an abnormal return status and an automatic reboot will then fail.
For each corrected inconsistency one or more lines will be printed
identifying the filesystem on which the correction will take place,
and the nature of the correction.  
.Pp
If sent a
.Dv QUIT
signal,
.Nm fsck
will finish the filesystem checks, then exit with an abnormal
return status that causes an automatic reboot to fail.
This is useful when you want to finish the filesystem checks during an
automatic reboot,
but do not want the machine to come up multiuser after the checks complete.
.Pp
Without the
.Fl p
option,
.Nm fsck
audits and interactively repairs inconsistent conditions for filesystems. 
It should be noted that some of the corrective actions which are not
correctable under the
.Fl p
option will result in some loss of data.
The amount and severity of data lost may be determined from the diagnostic
output.
If the operator does not have write permission on the filesystem
.Nm fsck
will default to a 
.Fl n
action.
.Pp
The following flags are interpreted by
.Nm fsck 
and passed along to the underlying tool that it spawns.
.Bl -tag
.It Fl f
Force fsck to check `clean' filesystems when preening.
.It Fl l
Limit the number of parallel checks to the number specified in the following
argument.
By default, the limit is the number of disks, running one process per disk.
If a smaller limit is given, the disks are checked round-robin, one filesystem
at a time.
.It Fl R
Specify a particular passno number for which fsck is to check.  You may only specify 1 or 2.
Only those filesystems matching that particular passno entry (if using fstab) will be checked.
For more information on the passno field, see 
.Xr fstab 5 .
.It Fl p
"Preen" mode, described above.
.It Fl q
Do a quick check to determine if the filesystem was unmounted cleanly. 
.It Fl y
Assume a yes response to all questions asked by 
.Nm fsck ;
this should be used with great caution as this is a free license
to continue after essentially unlimited trouble has been encountered.
.It Fl n
Assume a no response to all questions asked by 
.Nm fsck
except for
.Ql CONTINUE? ,
which is assumed to be affirmative;
do not open the filesystem for writing.
.El
.Pp
If no filesystems are given to 
.Nm fsck
then a default list of filesystems is read using
.Xr getfsent 3 .
.Pp
Because of inconsistencies between the block device and the buffer cache,
the raw device should always be used.
.Sh SEE ALSO
.Xr fs 5 ,
.Xr fsck_hfs 8 ,
.Xr fsck_apfs 8 ,
.Xr fsck_msdos 8 ,
.Xr getfsent 3 ,
.Xr fstab 5,
.Xr reboot 8
