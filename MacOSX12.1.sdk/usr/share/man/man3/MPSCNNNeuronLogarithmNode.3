.TH "MPSCNNNeuronLogarithmNode" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNNeuronLogarithmNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNGraphNodes\&.h>\fP
.PP
Inherits \fBMPSCNNNeuronNode\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSource:a:b:c:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSource:\fP"
.br
.in -1c
.SS "Class Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSource:a:b:c:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSource:\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBA\fP node representing a \fBMPSCNNNeuronLogarithm\fP kernel  For each pixel, applies the following function: 
.PP
.nf
f(x) = log_c(a * x + b)

.fi
.PP
 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) initWithSource: (\fBMPSNNImageNode\fP *__nonnull) sourceNode"
Init a node with default values for parameters a, b, and c 
.SS "\- (nonnull instancetype) \fBinitWithSource:\fP (\fBMPSNNImageNode\fP *__nonnull) sourceNode(float) a(float) b(float) c"
Init a node representing a \fBMPSCNNNeuronLogarithm\fP kernel  For each pixel, applies the following function: 
.PP
.nf
f(x) = log_c(a * x + b)

.fi
.PP
 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNode\fP The \fBMPSNNImageNode\fP representing the source \fBMPSImage\fP for the filter 
.br
\fIa\fP See discussion above\&. 
.br
\fIb\fP See discussion above\&. 
.br
\fIc\fP See discussion above\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP new MPSNNFilter node for a \fBMPSCNNNeuronLogarithm\fP kernel\&. 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithSource: (\fBMPSNNImageNode\fP *__nonnull) sourceNode"
Create an autoreleased node with default values for parameters a, b, and c 
.SS "+ (nonnull instancetype) \fBnodeWithSource:\fP (\fBMPSNNImageNode\fP *__nonnull) sourceNode(float) a(float) b(float) c"


.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
