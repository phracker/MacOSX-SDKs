'\" t
.\"     Title: glGetTexParameter
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLGETTEXPARAMETER" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetTexParameter \- return texture parameter values
.SH "C SPECIFICATION"
.HP \w'void\ glGetTexParameterfv('u
.BI "void glGetTexParameterfv(GLenum\ " "target" ", GLenum\ " "pname" ", GLfloat\ *\ " "params" ");"
.HP \w'void\ glGetTexParameteriv('u
.BI "void glGetTexParameteriv(GLenum\ " "target" ", GLenum\ " "pname" ", GLint\ *\ " "params" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies the symbolic name of the target texture\&.
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_1D_ARRAY\fR,
\fBGL_TEXTURE_2D_ARRAY\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_TEXTURE_RECTANGLE\fR, and
\fBGL_TEXTURE_CUBE_MAP\fR
are accepted\&.
.RE
.PP
\fIpname\fR
.RS 4
Specifies the symbolic name of a texture parameter\&.
\fBGL_TEXTURE_BASE_LEVEL\fR,
\fBGL_TEXTURE_BORDER_COLOR\fR,
\fBGL_TEXTURE_COMPARE_MODE\fR,
\fBGL_TEXTURE_COMPARE_FUNC\fR,
\fBGL_TEXTURE_LOD_BIAS\fR,
\fBGL_TEXTURE_MAG_FILTER\fR,
\fBGL_TEXTURE_MAX_LEVEL\fR,
\fBGL_TEXTURE_MAX_LOD\fR,
\fBGL_TEXTURE_MIN_FILTER\fR,
\fBGL_TEXTURE_MIN_LOD\fR,
\fBGL_TEXTURE_SWIZZLE_R\fR,
\fBGL_TEXTURE_SWIZZLE_G\fR,
\fBGL_TEXTURE_SWIZZLE_B\fR,
\fBGL_TEXTURE_SWIZZLE_A\fR,
\fBGL_TEXTURE_SWIZZLE_RGBA\fR,
\fBGL_TEXTURE_WRAP_S\fR,
\fBGL_TEXTURE_WRAP_T\fR, and
\fBGL_TEXTURE_WRAP_R\fR
are accepted\&.
.RE
.PP
\fIparams\fR
.RS 4
Returns the texture parameters\&.
.RE
.SH "DESCRIPTION"
.PP

\fBglGetTexParameter\fR
returns in
\fIparams\fR
the value or values of the texture parameter specified as
\fIpname\fR\&.
\fItarget\fR
defines the target texture\&.
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_TEXTURE_1D_ARRAY\fR,
\fBGL_TEXTURE_2D_ARRAY\fR,
\fBGL_TEXTURE_RECTANGLE\fR, and
\fBGL_TEXTURE_CUBE_MAP\fR
specify one\-, two\-, or three\-dimensional, one\-dimensional array, two\-dimensional array, rectangle or cube\-mapped texturing, respectively\&.
\fIpname\fR
accepts the same symbols as
\fBglTexParameter\fR(), with the same interpretations:
.PP
\fBGL_TEXTURE_MAG_FILTER\fR
.RS 4
Returns the single\-valued texture magnification filter, a symbolic constant\&. The initial value is
\fBGL_LINEAR\fR\&.
.RE
.PP
\fBGL_TEXTURE_MIN_FILTER\fR
.RS 4
Returns the single\-valued texture minification filter, a symbolic constant\&. The initial value is
\fBGL_NEAREST_MIPMAP_LINEAR\fR\&.
.RE
.PP
\fBGL_TEXTURE_MIN_LOD\fR
.RS 4
Returns the single\-valued texture minimum level\-of\-detail value\&. The initial value is
\-1000\&.
.RE
.PP
\fBGL_TEXTURE_MAX_LOD\fR
.RS 4
Returns the single\-valued texture maximum level\-of\-detail value\&. The initial value is 1000\&.
.RE
.PP
\fBGL_TEXTURE_BASE_LEVEL\fR
.RS 4
Returns the single\-valued base texture mipmap level\&. The initial value is 0\&.
.RE
.PP
\fBGL_TEXTURE_MAX_LEVEL\fR
.RS 4
Returns the single\-valued maximum texture mipmap array level\&. The initial value is 1000\&.
.RE
.PP
\fBGL_TEXTURE_SWIZZLE_R\fR
.RS 4
Returns the red component swizzle\&. The initial value is
\fBGL_RED\fR\&.
.RE
.PP
\fBGL_TEXTURE_SWIZZLE_G\fR
.RS 4
Returns the green component swizzle\&. The initial value is
\fBGL_GREEN\fR\&.
.RE
.PP
\fBGL_TEXTURE_SWIZZLE_B\fR
.RS 4
Returns the blue component swizzle\&. The initial value is
\fBGL_BLUE\fR\&.
.RE
.PP
\fBGL_TEXTURE_SWIZZLE_A\fR
.RS 4
Returns the alpha component swizzle\&. The initial value is
\fBGL_ALPHA\fR\&.
.RE
.PP
\fBGL_TEXTURE_SWIZZLE_RGBA\fR
.RS 4
Returns the component swizzle for all channels in a single query\&.
.RE
.PP
\fBGL_TEXTURE_WRAP_S\fR
.RS 4
Returns the single\-valued wrapping function for texture coordinate
s, a symbolic constant\&. The initial value is
\fBGL_REPEAT\fR\&.
.RE
.PP
\fBGL_TEXTURE_WRAP_T\fR
.RS 4
Returns the single\-valued wrapping function for texture coordinate
t, a symbolic constant\&. The initial value is
\fBGL_REPEAT\fR\&.
.RE
.PP
\fBGL_TEXTURE_WRAP_R\fR
.RS 4
Returns the single\-valued wrapping function for texture coordinate
r, a symbolic constant\&. The initial value is
\fBGL_REPEAT\fR\&.
.RE
.PP
\fBGL_TEXTURE_BORDER_COLOR\fR
.RS 4
Returns four integer or floating\-point numbers that comprise the RGBA color of the texture border\&. Floating\-point values are returned in the range
0 1\&. Integer values are returned as a linear mapping of the internal floating\-point representation such that 1\&.0 maps to the most positive representable integer and
\-1\&.0
maps to the most negative representable integer\&. The initial value is (0, 0, 0, 0)\&.
.RE
.PP
\fBGL_TEXTURE_COMPARE_MODE\fR
.RS 4
Returns a single\-valued texture comparison mode, a symbolic constant\&. The initial value is
\fBGL_NONE\fR\&. See
\fBglTexParameter\fR()\&.
.RE
.PP
\fBGL_TEXTURE_COMPARE_FUNC\fR
.RS 4
Returns a single\-valued texture comparison function, a symbolic constant\&. The initial value is
\fBGL_LEQUAL\fR\&. See
\fBglTexParameter\fR()\&.
.RE
.SH "NOTES"
.PP
If an error is generated, no change is made to the contents of
\fIparams\fR\&.
.SH "ERRORS"
.PP

\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
or
\fIpname\fR
is not an accepted value\&.
.SH "SEE ALSO"
.PP

\fBglTexParameter\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. Copyright
\(co
2010 Khronos Group\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
