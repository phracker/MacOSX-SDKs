.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "File::Spec::VMS 3pm"
.TH File::Spec::VMS 3pm "2014-09-30" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
File::Spec::VMS \- methods for VMS file specs
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& require File::Spec::VMS; # Done internally by File::Spec if needed
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
See File::Spec::Unix for a documentation of the methods provided
there. This package overrides the implementation of these methods, not
the semantics.
.PP
The default behavior is to allow either \s-1VMS\s0 or Unix syntax on input and to 
return \s-1VMS\s0 syntax on output unless Unix syntax has been explicity requested
via the \f(CW\*(C`DECC$FILENAME_UNIX_REPORT\*(C'\fR \s-1CRTL\s0 feature.
.IP "canonpath (override)" 4
.IX Item "canonpath (override)"
Removes redundant portions of file specifications and returns results
in native syntax unless Unix filename reporting has been enabled.
.IP "catdir (override)" 4
.IX Item "catdir (override)"
Concatenates a list of file specifications, and returns the result as a
native directory specification unless the Unix filename reporting feature
has been enabled.  No check is made for \*(L"impossible\*(R" cases (e.g. elements
other than the first being absolute filespecs).
.IP "catfile (override)" 4
.IX Item "catfile (override)"
Concatenates a list of directory specifications with a filename specification
to build a path.
.IP "curdir (override)" 4
.IX Item "curdir (override)"
Returns a string representation of the current directory: '[]' or '.'
.IP "devnull (override)" 4
.IX Item "devnull (override)"
Returns a string representation of the null device: '_NLA0:' or '/dev/null'
.IP "rootdir (override)" 4
.IX Item "rootdir (override)"
Returns a string representation of the root directory: 'SYS$DISK:[000000]'
or '/'
.IP "tmpdir (override)" 4
.IX Item "tmpdir (override)"
Returns a string representation of the first writable directory
from the following list or '' if none are writable:
.Sp
.Vb 3
\&    /tmp if C<DECC$FILENAME_UNIX_REPORT> is enabled.
\&    sys$scratch:
\&    $ENV{TMPDIR}
.Ve
.Sp
Since perl 5.8.0, if running under taint mode, and if \f(CW$ENV\fR{\s-1TMPDIR\s0}
is tainted, it is not used.
.IP "updir (override)" 4
.IX Item "updir (override)"
Returns a string representation of the parent directory: '[\-]' or '..'
.IP "case_tolerant (override)" 4
.IX Item "case_tolerant (override)"
\&\s-1VMS\s0 file specification syntax is case-tolerant.
.IP "path (override)" 4
.IX Item "path (override)"
Translate logical name \s-1DCL$PATH\s0 as a searchlist, rather than trying
to \f(CW\*(C`split\*(C'\fR string value of \f(CW$ENV{\*(AqPATH\*(Aq}\fR.
.IP "file_name_is_absolute (override)" 4
.IX Item "file_name_is_absolute (override)"
Checks for \s-1VMS\s0 directory spec as well as Unix separators.
.IP "splitpath (override)" 4
.IX Item "splitpath (override)"
.Vb 3
\&    ($volume,$directories,$file) = File::Spec\->splitpath( $path );
\&    ($volume,$directories,$file) = File::Spec\->splitpath( $path,
\&                                                          $no_file );
.Ve
.Sp
Passing a true value for \f(CW$no_file\fR indicates that the path being
split only contains directory components, even on systems where you
can usually (when not supporting a foreign syntax) tell the difference
between directories and files at a glance.
.IP "splitdir (override)" 4
.IX Item "splitdir (override)"
Split a directory specification into the components.
.IP "catpath (override)" 4
.IX Item "catpath (override)"
Construct a complete filespec.
.IP "abs2rel (override)" 4
.IX Item "abs2rel (override)"
Attempt to convert an absolute file specification to a relative specification.
.IP "rel2abs (override)" 4
.IX Item "rel2abs (override)"
Return an absolute file specification from a relative one.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2004 by the Perl 5 Porters.  All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See File::Spec and File::Spec::Unix.  This package overrides the
implementation of these methods, not the semantics.
.PP
An explanation of \s-1VMS\s0 file specs can be found at
<http://h71000.www7.hp.com/doc/731FINAL/4506/4506pro_014.html#apps_locating_naming_files>.
