.TH "MPSImageGuidedFilter" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSImageGuidedFilter
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSImageGuidedFilter\&.h>\fP
.PP
Inherits \fBMPSKernel\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:kernelDiameter:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:\fP"
.br
.ti -1c
.RI "(nullable instancetype) \- \fBinitWithCoder:device:\fP"
.br
.ti -1c
.RI "(void) \- \fBencodeRegressionToCommandBuffer:sourceTexture:guidanceTexture:weightsTexture:destinationCoefficientsTexture:\fP"
.br
.ti -1c
.RI "(void) \- \fBencodeReconstructionToCommandBuffer:guidanceTexture:coefficientsTexture:destinationTexture:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "NSUInteger \fBkernelDiameter\fP"
.br
.ti -1c
.RI "float \fBepsilon\fP"
.br
.ti -1c
.RI "float \fBreconstructScale\fP"
.br
.ti -1c
.RI "float \fBreconstructOffset\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBMPSImageGuidedFilter\&.h\fP  MetalPerformanceShaders
.PP
\fBCopyright:\fP
.RS 4
Copyright (c) 2018 Apple Inc\&. All rights reserved\&.  MetalPerformanceShaders guided filter
.RE
.PP
Perform Guided Filter to produce a coefficients image The filter is broken into two stages:
.IP "\(bu" 2
Regression
.IP "\(bu" 2
Reconstruction
.PP
.PP
The regression stage learns a 4-channel 'coefficient' texture (typically at a very low resolution), and represents the per-pixel linear regression of the source texture to the guidance texture\&.
.PP
The reconstruction stage upsamples the coefficeints to the same size as the final output and then at each pixel computes the inner product to produce the output\&.
.PP
The filter is broken into two stages to allow coefficients to be filtered (such as for example - temporally filtering for video to prevent flicker)\&.
.PP
There is also support for an optional weight texture that can be used to discard values in the source data\&.
.PP
Guided Filter is described at https://arxiv.org/pdf/1505.00996.pdf\&. 
.SH "Method Documentation"
.PP 
.SS "\- (void) encodeReconstructionToCommandBuffer: (nonnull id< MTLCommandBuffer >) commandBuffer(nonnull id< MTLTexture >) guidanceTexture(nonnull id< MTLTexture >) coefficientsTexture(nonnull id< MTLTexture >) destinationTexture"
Perform Guided Filter Reconstruction (inference) to produce the filtered output  The filter will not begin to execute until after the command buffer has been enqueued and committed\&.
.PP
sourceGuidanceTexture Input guidance pixel buffer\&. This should be a color (RGB) image\&.  coefficientsTexture Input coefficients texture generated generated by a previous encodeRegressionToCommandBuffer 
.PP
\fBParameters:\fP
.RS 4
\fIdestinationTexture\fP Output texture
.RE
.PP
Note: The coefficients are upsampled at the reconstruction of the filtered data\&. Reconstruct(guidance RGB) = a\&.r * R + a\&.g * G + a\&.b * B + b, where a and b are the coefficients learnt using encodeRegressionToCommandBuffer\&.
.PP
Final reconstructed value = value * reconstructScale + reconstructOffset 
.SS "\- (void) encodeRegressionToCommandBuffer: (nonnull id< MTLCommandBuffer >) commandBuffer(nonnull id< MTLTexture >) sourceTexture(nonnull id< MTLTexture >) guidanceTexture(nullable id< MTLTexture >) weightsTexture(nonnull id< MTLTexture >) destinationCoefficientsTexture"
Perform Guided Filter Regression (correlation) to produce a coefficients texture  The filter will not begin to execute until after the command buffer has been enqueued and committed\&.
.PP
\fBParameters:\fP
.RS 4
\fIcommandBuffer\fP \fBA\fP valid MTLCommandBuffer\&. 
.br
\fIsourceTexture\fP Input source texture to be filtered (typically a mask)\&. This should be a single channel image\&. 
.br
\fIguidanceTexture\fP Input guidance texture\&. This should be a color (RGB) image\&. 
.br
\fIweightsTexture\fP Optional input confidence texture\&. This should also a single channel image\&. 
.br
\fIdestinationCoefficientsTexture\fP Output texture with four coefficients that minimize the mean squared error between the source and an affine function of guidance R, G, B\&. Note: The destinationCoefficientsTexture computes the linear cofficients 'a' and 'b'\&. The 'a' coefficient is stored in the RGB channels of destinationCoefficientsTexture and the 'b' coefficient in the alpha chnanel\&.
.RE
.PP
Set the MPSKernelOptionsAllowReducedPrecision in the 'options' property for this kernel to peform the computations using half-precision arithmetic\&. This can potentially improve performance and/or power usage\&. 
.SS "\- (nullable instancetype) \fBinitWithCoder:\fP (NSCoder *__nonnull) aDecoder(nonnull id< MTLDevice >) device"
\fBNSSecureCoding\fP compatability  While the standard NSSecureCoding/NSCoding method -initWithCoder: should work, since the file can't know which device your data is allocated on, we have to guess and may guess incorrectly\&. To avoid that problem, use initWithCoder:device instead\&. 
.PP
\fBParameters:\fP
.RS 4
\fIaDecoder\fP The NSCoder subclass with your serialized \fBMPSKernel\fP 
.br
\fIdevice\fP The MTLDevice on which to make the \fBMPSKernel\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP new \fBMPSKernel\fP object, or nil if failure\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSKernel\fP\&.
.SS "\- (nonnull instancetype) initWithDevice: (nonnull id< MTLDevice >) device"
Standard init with default properties per filter type 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device that the filter will be used on\&. May not be NULL\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a pointer to the newly initialized object\&. This will fail, returning nil if the device is not supported\&. Devices must be MTLFeatureSet_iOS_GPUFamily2_v1 or later\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSKernel\fP\&.
.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(NSUInteger) kernelDiameter"
Specifies information to apply the guided filter regression\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device the filter will run on 
.br
\fIkernelDiameter\fP The local window size 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP valid MPSImageGuidedFilterRegression object or nil, if failure\&. 
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "\- epsilon\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The regularization parameter  The parameter used when computing the linear coefficients a and b\&. 
.SS "\- kernelDiameter\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The local window size  The local window size\&. 
.SS "\- reconstructOffset\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The offset parameter  The offset parameter added to the result of the scaled reconstructed value\&. The default value is 0\&.0f\&. 
.SS "\- reconstructScale\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The scale parameter  The parameter used to scale the result of the reconstruction operation\&. The default value is 1\&.0f\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
