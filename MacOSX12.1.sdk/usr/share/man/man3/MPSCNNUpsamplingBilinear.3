.TH "MPSCNNUpsamplingBilinear" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNUpsamplingBilinear
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSCNNUpsampling\&.h>\fP
.PP
Inherits \fBMPSCNNUpsampling\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:integerScaleFactorX:integerScaleFactorY:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:integerScaleFactorX:integerScaleFactorY:alignCorners:\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework\&.  Specifies the bilinear spatial upsampling filter\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(NSUInteger) integerScaleFactorX(NSUInteger) integerScaleFactorY"
Initialize the bilinear spatial upsampling filter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device the filter will run on\&. 
.br
\fIintegerScaleFactorX\fP The upsampling factor for the x dimension\&. 
.br
\fIintegerScaleFactorY\fP The upsampling factor for the y dimension\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP valid \fBMPSCNNUpsamplingBilinear\fP object or nil, if failure\&. 
.RE
.PP

.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(NSUInteger) integerScaleFactorX(NSUInteger) integerScaleFactorY(BOOL) alignCorners"
Initialize the bilinear spatial upsampling filter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device the filter will run on\&. 
.br
\fIintegerScaleFactorX\fP The upsampling factor for the x dimension\&. 
.br
\fIintegerScaleFactorY\fP The upsampling factor for the y dimension\&. 
.br
\fIalignCorners\fP Specifier whether the centers of the 4 corner pixels of the input and output regions are aligned, preserving the values at the corner pixels\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP valid \fBMPSCNNUpsamplingBilinear\fP object or nil, if failure\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
