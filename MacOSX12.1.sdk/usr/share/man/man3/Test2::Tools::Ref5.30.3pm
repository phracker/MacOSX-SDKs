.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Tools::Ref 3"
.TH Test2::Tools::Ref 3 "2020-10-22" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test2::Tools::Ref \- Tools for validating references.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module contains tools that allow you to verify that something is a ref. It
also has tools to check if two refs are the same exact ref, or different. None of
the functions in this module do deep comparisons.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Test2::Tools::Ref;
\&
\&    # Ensure something is a ref.
\&    ref_ok($ref);
\&
\&    # Check that $ref is a HASH reference
\&    ref_ok($ref, \*(AqHASH\*(Aq, \*(AqMust be a hash\*(Aq)
\&
\&    ref_is($refa, $refb, "Same exact reference");
\&
\&    ref_is_not($refa, $refb, "Not the same exact reference");
.Ve
.SH "EXPORTS"
.IX Header "EXPORTS"
All subs are exported by default.
.IP "ref_ok($thing)" 4
.IX Item "ref_ok($thing)"
.PD 0
.ie n .IP "ref_ok($thing, $type)" 4
.el .IP "ref_ok($thing, \f(CW$type\fR)" 4
.IX Item "ref_ok($thing, $type)"
.ie n .IP "ref_ok($thing, $type, $name)" 4
.el .IP "ref_ok($thing, \f(CW$type\fR, \f(CW$name\fR)" 4
.IX Item "ref_ok($thing, $type, $name)"
.PD
This checks that \f(CW$thing\fR is a reference. If \f(CW$type\fR is specified then it
will check that \f(CW$thing\fR is that type of reference.
.ie n .IP "ref_is($ref1, $ref2, $name)" 4
.el .IP "ref_is($ref1, \f(CW$ref2\fR, \f(CW$name\fR)" 4
.IX Item "ref_is($ref1, $ref2, $name)"
Verify that two references are the exact same reference.
.ie n .IP "ref_is_not($ref1, $ref2, $name)" 4
.el .IP "ref_is_not($ref1, \f(CW$ref2\fR, \f(CW$name\fR)" 4
.IX Item "ref_is_not($ref1, $ref2, $name)"
Verify that two references are not the exact same reference.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Suite can be found at
\&\fIhttps://github.com/Test\-More/Test2\-Suite/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2018 Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
