.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Tools::Warnings 3"
.TH Test2::Tools::Warnings 3 "2020-10-22" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test2::Tools::Warnings \- Tools to verify warnings.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a collection of tools that can be used to test code that issues
warnings.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Test2::Tools::Warnings qw/warns warning warnings no_warnings/;
\&
\&    ok(warns { warn \*(Aqa\*(Aq }, "the code warns");
\&    ok(!warns { 1 }, "The code does not warn");
\&    is(warns { warn \*(Aqa\*(Aq; warn \*(Aqb\*(Aq }, 2, "got 2 warnings");
\&
\&    ok(no_warnings { ... }, "code did not warn");
\&
\&    like(
\&        warning { warn \*(Aqxxx\*(Aq },
\&        qr/xxx/,
\&        "Got expected warning"
\&    );
\&
\&    is(
\&        warnings { warn "a\en"; warn "b\en" },
\&        [
\&            "a\en",
\&            "b\en",
\&        ],
\&        "Got 2 specific warnings"
\&    );
.Ve
.SH "EXPORTS"
.IX Header "EXPORTS"
All subs are exported by default.
.ie n .IP "$count = warns { ... }" 4
.el .IP "\f(CW$count\fR = warns { ... }" 4
.IX Item "$count = warns { ... }"
Returns the count of warnings produced by the block. This will always return 0,
or a positive integer.
.ie n .IP "$warning = warning { ... }" 4
.el .IP "\f(CW$warning\fR = warning { ... }" 4
.IX Item "$warning = warning { ... }"
Returns the first warning generated by the block. If the block produces more
than one warning, they will all be shown as notes, and an actual warning will tell
you about it.
.ie n .IP "$warnings_ref = warnings { ... }" 4
.el .IP "\f(CW$warnings_ref\fR = warnings { ... }" 4
.IX Item "$warnings_ref = warnings { ... }"
Returns an arrayref with all the warnings produced by the block. This will
always return an array reference. If there are no warnings, this will return an
empty array reference.
.ie n .IP "$bool = no_warnings { ... }" 4
.el .IP "\f(CW$bool\fR = no_warnings { ... }" 4
.IX Item "$bool = no_warnings { ... }"
Return true if the block has no warnings. Returns false if there are warnings.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Suite can be found at
\&\fIhttps://github.com/Test\-More/Test2\-Suite/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2018 Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
