'\" t
.\"     Title: glMultiTexCoord
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLMULTITEXCOORD" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glMultiTexCoord \- set the current texture coordinates
.SH "C SPECIFICATION"
.HP \w'void\ glMultiTexCoord1s('u
.BI "void glMultiTexCoord1s(GLenum\ " "target" ", GLshort\ " "s" ");"
.HP \w'void\ glMultiTexCoord1i('u
.BI "void glMultiTexCoord1i(GLenum\ " "target" ", GLint\ " "s" ");"
.HP \w'void\ glMultiTexCoord1f('u
.BI "void glMultiTexCoord1f(GLenum\ " "target" ", GLfloat\ " "s" ");"
.HP \w'void\ glMultiTexCoord1d('u
.BI "void glMultiTexCoord1d(GLenum\ " "target" ", GLdouble\ " "s" ");"
.HP \w'void\ glMultiTexCoord2s('u
.BI "void glMultiTexCoord2s(GLenum\ " "target" ", GLshort\ " "s" ", GLshort\ " "t" ");"
.HP \w'void\ glMultiTexCoord2i('u
.BI "void glMultiTexCoord2i(GLenum\ " "target" ", GLint\ " "s" ", GLint\ " "t" ");"
.HP \w'void\ glMultiTexCoord2f('u
.BI "void glMultiTexCoord2f(GLenum\ " "target" ", GLfloat\ " "s" ", GLfloat\ " "t" ");"
.HP \w'void\ glMultiTexCoord2d('u
.BI "void glMultiTexCoord2d(GLenum\ " "target" ", GLdouble\ " "s" ", GLdouble\ " "t" ");"
.HP \w'void\ glMultiTexCoord3s('u
.BI "void glMultiTexCoord3s(GLenum\ " "target" ", GLshort\ " "s" ", GLshort\ " "t" ", GLshort\ " "r" ");"
.HP \w'void\ glMultiTexCoord3i('u
.BI "void glMultiTexCoord3i(GLenum\ " "target" ", GLint\ " "s" ", GLint\ " "t" ", GLint\ " "r" ");"
.HP \w'void\ glMultiTexCoord3f('u
.BI "void glMultiTexCoord3f(GLenum\ " "target" ", GLfloat\ " "s" ", GLfloat\ " "t" ", GLfloat\ " "r" ");"
.HP \w'void\ glMultiTexCoord3d('u
.BI "void glMultiTexCoord3d(GLenum\ " "target" ", GLdouble\ " "s" ", GLdouble\ " "t" ", GLdouble\ " "r" ");"
.HP \w'void\ glMultiTexCoord4s('u
.BI "void glMultiTexCoord4s(GLenum\ " "target" ", GLshort\ " "s" ", GLshort\ " "t" ", GLshort\ " "r" ", GLshort\ " "q" ");"
.HP \w'void\ glMultiTexCoord4i('u
.BI "void glMultiTexCoord4i(GLenum\ " "target" ", GLint\ " "s" ", GLint\ " "t" ", GLint\ " "r" ", GLint\ " "q" ");"
.HP \w'void\ glMultiTexCoord4f('u
.BI "void glMultiTexCoord4f(GLenum\ " "target" ", GLfloat\ " "s" ", GLfloat\ " "t" ", GLfloat\ " "r" ", GLfloat\ " "q" ");"
.HP \w'void\ glMultiTexCoord4d('u
.BI "void glMultiTexCoord4d(GLenum\ " "target" ", GLdouble\ " "s" ", GLdouble\ " "t" ", GLdouble\ " "r" ", GLdouble\ " "q" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies the texture unit whose coordinates should be modified\&. The number of texture units is implementation dependent, but must be at least two\&. Symbolic constant must be one of
\fBGL_TEXTURE\fRi, where i ranges from 0 to
\fBGL_MAX_TEXTURE_COORDS\fR
\- 1, which is an implementation\-dependent value\&.
.RE
.PP
\fIs\fR, \fIt\fR, \fIr\fR, \fIq\fR
.RS 4
Specify
\fIs\fR,
\fIt\fR,
\fIr\fR, and
\fIq\fR
texture coordinates for
\fItarget\fR
texture unit\&. Not all parameters are present in all forms of the command\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glMultiTexCoord1sv('u
.BI "void glMultiTexCoord1sv(GLenum\ " "target" ", const\ GLshort\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord1iv('u
.BI "void glMultiTexCoord1iv(GLenum\ " "target" ", const\ GLint\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord1fv('u
.BI "void glMultiTexCoord1fv(GLenum\ " "target" ", const\ GLfloat\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord1dv('u
.BI "void glMultiTexCoord1dv(GLenum\ " "target" ", const\ GLdouble\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord2sv('u
.BI "void glMultiTexCoord2sv(GLenum\ " "target" ", const\ GLshort\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord2iv('u
.BI "void glMultiTexCoord2iv(GLenum\ " "target" ", const\ GLint\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord2fv('u
.BI "void glMultiTexCoord2fv(GLenum\ " "target" ", const\ GLfloat\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord2dv('u
.BI "void glMultiTexCoord2dv(GLenum\ " "target" ", const\ GLdouble\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord3sv('u
.BI "void glMultiTexCoord3sv(GLenum\ " "target" ", const\ GLshort\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord3iv('u
.BI "void glMultiTexCoord3iv(GLenum\ " "target" ", const\ GLint\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord3fv('u
.BI "void glMultiTexCoord3fv(GLenum\ " "target" ", const\ GLfloat\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord3dv('u
.BI "void glMultiTexCoord3dv(GLenum\ " "target" ", const\ GLdouble\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord4sv('u
.BI "void glMultiTexCoord4sv(GLenum\ " "target" ", const\ GLshort\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord4iv('u
.BI "void glMultiTexCoord4iv(GLenum\ " "target" ", const\ GLint\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord4fv('u
.BI "void glMultiTexCoord4fv(GLenum\ " "target" ", const\ GLfloat\ *\ " "v" ");"
.HP \w'void\ glMultiTexCoord4dv('u
.BI "void glMultiTexCoord4dv(GLenum\ " "target" ", const\ GLdouble\ *\ " "v" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies the texture unit whose coordinates should be modified\&. The number of texture units is implementation dependent, but must be at least two\&. Symbolic constant must be one of
\fBGL_TEXTURE\fRi, where i ranges from 0 to
\fBGL_MAX_TEXTURE_COORDS\fR
\- 1, which is an implementation\-dependent value\&.
.RE
.PP
\fIv\fR
.RS 4
Specifies a pointer to an array of one, two, three, or four elements, which in turn specify the
s,
t,
r, and
q
texture coordinates\&.
.RE
.SH "DESCRIPTION"
.PP

\fBglMultiTexCoord\fR
specifies texture coordinates in one, two, three, or four dimensions\&.
\fBglMultiTexCoord1\fR
sets the current texture coordinates to
s 0 0 1; a call to
\fBglMultiTexCoord2\fR
sets them to
s t 0 1\&. Similarly,
\fBglMultiTexCoord3\fR
specifies the texture coordinates as
s t r 1, and
\fBglMultiTexCoord4\fR
defines all four components explicitly as
s t r q\&.
.PP
The current texture coordinates are part of the data that is associated with each vertex and with the current raster position\&. Initially, the values for
s t r q
are
0 0 0 1\&.
.PP
.SH "NOTES"
.PP
The current texture coordinates can be updated at any time\&.
.PP
It is always the case that
\fBGL_TEXTURE\fR
i
=
\fBGL_TEXTURE0\fR
+
i\&.
.SH "ASSOCIATED GETS"
.PP

\fBglGet\fR()
with argument
\fBGL_CURRENT_TEXTURE_COORDS\fR
with appropriate texture unit selected\&.
.PP

\fBglGet\fR()
with argument
\fBGL_MAX_TEXTURE_COORDS\fR
.SH "SEE ALSO"
.PP

\fBglActiveTexture\fR(),
\fBglTexCoord\fR(),
\fBglVertex\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
