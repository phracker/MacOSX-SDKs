.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "IO::Pager::Page 3"
.TH IO::Pager::Page 3 "2018-10-11" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
IO::Pager::Page \- Emulate IO::Page, pipe STDOUT to a pager if STDOUT is a TTY
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Pipes \s-1STDOUT\s0 to a pager if \s-1STDOUT\s0 is a \s-1TTY\s0
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
IO::Pager was designed to programmatically decide whether or not to point
the \s-1STDOUT\s0 file handle into a pipe to program specified in the \fI\s-1PAGER\s0\fR
environment variable or one of a standard list of pagers.
.SH "USAGE"
.IX Header "USAGE"
.Vb 8
\&  BEGIN {
\&    use IO::Pager::Page;
\&    # use I::P::P first, just in case another module sends output to STDOUT
\&  }
\&  print<<HEREDOC;
\&  ...
\&  A bunch of text later
\&  HEREDOC
.Ve
.PP
If you wish to forgo the potential for a \fIBroken Pipe\fR foible resulting
from the user exiting the pager prematurely, load IO::Pager::Page like so:
.PP
.Vb 1
\&  use IO::Pager::Page hush=>1;
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
IO::Page, IO::Pager, IO::Pager::Unbuffered, IO::Pager::Buffered
.SH "AUTHOR"
.IX Header "AUTHOR"
Jerrad Pierce <jpierce@cpan.org>
.PP
Florent Angly <florent.angly@gmail.com>
.PP
This module inspired by Monte Mitzelfelt's IO::Page 0.02
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2003\-2015 Jerrad Pierce
.IP "\(bu" 4
Thou shalt not claim ownership of unmodified materials.
.IP "\(bu" 4
Thou shalt not claim whole ownership of modified materials.
.IP "\(bu" 4
Thou shalt grant the indemnity of the provider of materials.
.IP "\(bu" 4
Thou shalt use and dispense freely without other restrictions.
.PP
Or, if you prefer:
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.0 or,
at your option, any later version of Perl 5 you may have available.
