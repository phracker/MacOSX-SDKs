.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "URI::WithBase 3"
.TH URI::WithBase 3 "2019-01-09" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
URI::WithBase \- URIs which remember their base
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& $u1 = URI::WithBase\->new($str, $base);
\& $u2 = $u1\->abs;
\&
\& $base = $u1\->base;
\& $u1\->base( $new_base )
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides the \f(CW\*(C`URI::WithBase\*(C'\fR class.  Objects of this class
are like \f(CW\*(C`URI\*(C'\fR objects, but can keep their base too.  The base
represents the context where this \s-1URI\s0 was found and can be used to
absolutize or relativize the \s-1URI.\s0  All the methods described in \s-1URI\s0
are supported for \f(CW\*(C`URI::WithBase\*(C'\fR objects.
.PP
The methods provided in addition to or modified from those of \f(CW\*(C`URI\*(C'\fR are:
.ie n .IP "$uri = URI::WithBase\->new($str, [$base])" 4
.el .IP "\f(CW$uri\fR = URI::WithBase\->new($str, [$base])" 4
.IX Item "$uri = URI::WithBase->new($str, [$base])"
The constructor takes an optional base \s-1URI\s0 as the second argument.
If provided, this argument initializes the base attribute.
.ie n .IP "$uri\->base( [$new_base] )" 4
.el .IP "\f(CW$uri\fR\->base( [$new_base] )" 4
.IX Item "$uri->base( [$new_base] )"
Can be used to get or set the value of the base attribute.
The return value, which is the old value, is a \s-1URI\s0 object or \f(CW\*(C`undef\*(C'\fR.
.ie n .IP "$uri\->abs( [$base_uri] )" 4
.el .IP "\f(CW$uri\fR\->abs( [$base_uri] )" 4
.IX Item "$uri->abs( [$base_uri] )"
The \f(CW$base_uri\fR argument is now made optional as the object carries its
base with it.  A new object is returned even if \f(CW$uri\fR is already
absolute (while plain \s-1URI\s0 objects simply return themselves in
that case).
.ie n .IP "$uri\->rel( [$base_uri] )" 4
.el .IP "\f(CW$uri\fR\->rel( [$base_uri] )" 4
.IX Item "$uri->rel( [$base_uri] )"
The \f(CW$base_uri\fR argument is now made optional as the object carries its
base with it.  A new object is always returned.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1URI\s0
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 1998\-2002 Gisle Aas.
