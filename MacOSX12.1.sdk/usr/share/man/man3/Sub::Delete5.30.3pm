.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Sub::Delete 3"
.TH Sub::Delete 3 "2010-04-13" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Sub::Delete \- Perl module enabling one to delete subroutines
.SH "VERSION"
.IX Header "VERSION"
1.00002
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    use Sub::Delete;
\&    sub foo {}
\&    delete_sub \*(Aqfoo\*(Aq;
\&    eval \*(Aqfoo();1\*(Aq or die; # dies
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides one function, \f(CW\*(C`delete_sub\*(C'\fR, that deletes the
subroutine whose name is passed to it. (To load the module without
importing the function, write \f(CW\*(C`useÂ Sub::Delete();\*(C'\fR.)
.PP
This does more than simply undefine
the subroutine in the manner of \f(CW\*(C`undef &foo\*(C'\fR, which leaves a stub that
can trigger \s-1AUTOLOAD\s0 (and, consequently, won't work for deleting methods).
The subroutine is completely obliterated from the
symbol table (though there may be
references to it elsewhere, including in compiled code).
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
This module requires perl 5.8.3 or higher.
.SH "LIMITATIONS"
.IX Header "LIMITATIONS"
If you take a reference to a glob containing a subroutine, and then delete
the subroutine with \f(CW\*(C`delete_sub\*(C'\fR, you will find that the glob you 
referenced still has a subroutine in it. This is because \f(CW\*(C`delete_sub\*(C'\fR
removes a glob, replaces it with another, and then copies the contents of
the old glob into the new one, except for the \f(CW\*(C`CODE\*(C'\fR slot. (This is nearly
impossible to fix without breaking constant::lexical.)
.SH "BUGS"
.IX Header "BUGS"
If you find any bugs, please report them to the author via e\-mail.
.SH "AUTHOR & COPYRIGHT"
.IX Header "AUTHOR & COPYRIGHT"
Copyright (C) 2008\-10 Father Chrysostomos (sprout at, um, cpan dot org)
.PP
This program is free software; you may redistribute or modify it (or both)
under the same terms as perl.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perltodo, which has \f(CW\*(C`delete &sub\*(C'\fR listed as a possible future feature
.PP
Symbol::Glob and Symbol::Util, both of which predate this module (but
I only discovered them recently), and which allow one to delete any
arbitrary slot from a glob. Neither of them takes perl 5.10 constants
into account, however. They also both differ from this module, in that a
subroutine referenced in compiled code can no longer be called if deleted
from its glob. The entire glob must be replaced (which this module does).
