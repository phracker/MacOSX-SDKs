.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPANPLUS::Shell::Default 3pm"
.TH CPANPLUS::Shell::Default 3pm "2014-09-30" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CPANPLUS::Shell::Default \- the default CPANPLUS shell
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    ### loading the shell:
\&    $ cpanp                     # run \*(Aqcpanp\*(Aq from the command line
\&    $ perl \-MCPANPLUS \-eshell   # load the shell from the command line
\&
\&
\&    use CPANPLUS::Shell qw[Default];        # load this shell via the API
\&                                            # always done via CPANPLUS::Shell
\&
\&    my $ui = CPANPLUS::Shell\->new;
\&    $ui\->shell;                             # run the shell
\&    $ui\->dispatch_on_input( input => \*(Aqx\*(Aq);  # update the source using the
\&                                            # dispatch method
\&
\&    ### when in the shell:
\&    ### Note that all commands can also take options.
\&    ### Look at their underlying CPANPLUS::Backend methods to see
\&    ### what options those are.
\&    cpanp> h                 # show help messages
\&    cpanp> ?                 # show help messages
\&
\&    cpanp> m Acme            # find acme modules, allows regexes
\&    cpanp> a KANE            # find modules by kane, allows regexes
\&    cpanp> f Acme::Foo       # get a list of all releases of Acme::Foo
\&
\&    cpanp> i Acme::Foo       # install Acme::Foo
\&    cpanp> i Acme\-Foo\-1.3    # install version 1.3 of Acme::Foo
\&    cpanp> i <URI>           # install from URI, like ftp://foo.com/X.tgz
\&    cpanp> i <DIR>           # install from an absolute or relative directory
\&    cpanp> i 1 3..5          # install search results 1, 3, 4 and 5
\&    cpanp> i *               # install all search results
\&    cpanp> a KANE; i *;      # find modules by kane, install all results
\&    cpanp> t Acme::Foo       # test Acme::Foo, without installing it
\&    cpanp> u Acme::Foo       # uninstall Acme::Foo
\&    cpanp> d Acme::Foo       # download Acme::Foo
\&    cpanp> z Acme::Foo       # download & extract Acme::Foo, then open a
\&                             # shell in the extraction directory
\&
\&    cpanp> c Acme::Foo       # get a list of test results for Acme::Foo
\&    cpanp> l Acme::Foo       # view details about the Acme::Foo package
\&    cpanp> r Acme::Foo       # view Acme::Foo\*(Aqs README file
\&    cpanp> o                 # get a list of all installed modules that
\&                             # are out of date
\&    cpanp> o 1..3            # list uptodateness from a previous search
\&
\&    cpanp> s conf            # show config settings
\&    cpanp> s conf md5 1      # enable md5 checks
\&    cpanp> s program         # show program settings
\&    cpanp> s edit            # edit config file
\&    cpanp> s reconfigure     # go through initial configuration again
\&    cpanp> s selfupdate      # update your CPANPLUS install
\&    cpanp> s save            # save config to disk
\&    cpanp> s mirrors         # show currently selected mirrors
\&
\&    cpanp> ! [PERL CODE]     # execute the following perl code
\&
\&    cpanp> b                 # create an autobundle for this computers
\&                             # perl installation
\&    cpanp> x                 # reload index files (purges cache)
\&    cpanp> x \-\-update_source # reload index files, get fresh source files
\&    cpanp> p [FILE]          # print error stack (to a file)
\&    cpanp> v                 # show the banner
\&    cpanp> w                 # show last search results again
\&
\&    cpanp> q                 # quit the shell
\&    cpanp> e                 # exit the shell and reload
\&
\&    cpanp> /plugins          # list available plugins
\&    cpanp> /? PLUGIN         # list help test of <PLUGIN>
\&
\&    ### common options:
\&    cpanp> i ... \-\-skiptest # skip tests
\&    cpanp> i ... \-\-force    # force all operations
\&    cpanp> i ... \-\-verbose  # run in verbose mode
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides the default user interface to \f(CW\*(C`CPANPLUS\*(C'\fR. You
can start it via the \f(CW\*(C`cpanp\*(C'\fR binary, or as detailed in the \s-1SYNOPSIS\s0.
.SH "BUG REPORTS"
.IX Header "BUG REPORTS"
Please report bugs or other issues to <bug\-cpanplus@rt.cpan.org<gt>.
.SH "AUTHOR"
.IX Header "AUTHOR"
This module by Jos Boumans <kane@cpan.org>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
The \s-1CPAN++\s0 interface (of which this module is a part of) is copyright (c)
2001 \- 2007, Jos Boumans <kane@cpan.org>. All rights reserved.
.PP
This library is free software; you may redistribute and/or modify it
under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
CPANPLUS::Shell::Classic, CPANPLUS::Shell, cpanp
