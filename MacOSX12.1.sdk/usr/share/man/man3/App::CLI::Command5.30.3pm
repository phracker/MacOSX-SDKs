.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::CLI::Command 3"
.TH App::CLI::Command 3 "2018-05-14" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::CLI::Command \- Base class for App::CLI commands
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package MyApp::List;
\&    use base qw(App::CLI::Command);
\&
\&    use constant options => (
\&        \*(Aqverbose\*(Aq   => \*(Aqverbose\*(Aq,
\&        \*(Aqn|name=s\*(Aq  => \*(Aqname\*(Aq,
\&    );
\&
\&    sub run {
\&        my ( $self, $arg ) = @_;
\&
\&        print "verbose" if $self\->{verbose};
\&
\&        my $name = $self\->{name}; # get arg following long option \-\-name
\&
\&        # anything you want this command do
\&    }
\&
\&    # See App::CLI for information of how to invoke (sub)command.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\fI\f(BIsubcommand()\fI\fR
.IX Subsection "subcommand()"
.PP
.Vb 1
\&    return old genre subcommand of $self;
.Ve
.PP
\fI\f(BIcascading()\fI\fR
.IX Subsection "cascading()"
.PP
Return instance of cascading subcommand invoked if it was listed in your
constant subcommands.
.PP
\fI\f(BIcascadable()\fI\fR
.IX Subsection "cascadable()"
.PP
Return package name of subcommand if the subcommand invoked is in your
constant subcommands, otherwise, return \f(CW\*(C`undef\*(C'\fR.
.PP
\fIapp\fR
.IX Subsection "app"
.PP
Return the object referring to the current app.
.PP
\fIbrief_usage ($file)\fR
.IX Subsection "brief_usage ($file)"
.PP
Display a one-line brief usage of the command object.  Optionally, a file
could be given to extract the usage from the \s-1POD.\s0
.PP
\fIusage ($want_detail)\fR
.IX Subsection "usage ($want_detail)"
.PP
Display usage.  If \f(CW$want_detail\fR is true, the \f(CW\*(C`DESCRIPTION\*(C'\fR
section is displayed as well.
.PP
\fIloc_text \f(CI$text\fI\fR
.IX Subsection "loc_text $text"
.PP
Localizes the body of (formatted) text in \f(CW$text\fR and returns the
localized version.
.PP
\fIfilename\fR
.IX Subsection "filename"
.PP
Return the filename for the command module.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
App::CLI, Getopt::Long
.SH "AUTHORS"
.IX Header "AUTHORS"
Chia-liang Kao <clkao@clkao.org>
.PP
Cornelius Lin  <cornelius.howl@gmail.com>
.PP
Shelling       <navyblueshellingford@gmail.com>
.PP
Paul Cochrane  <paul@liekut.de> (current maintainer)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2005\-2006 by Chia-liang Kao <clkao@clkao.org>.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
