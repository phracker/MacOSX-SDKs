.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBI::Const::GetInfo::ANSI 3"
.TH DBI::Const::GetInfo::ANSI 3 "2015-05-26" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DBI::Const::GetInfo::ANSI \- ISO/IEC SQL/CLI Constants for GetInfo
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  The API for this module is private and subject to change.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Information requested by \fBGetInfo()\fR.
.PP
See: A.1 C header file \s-1SQLCLI.H,\s0 Page 316, 317.
.PP
The \s-1API\s0 for this module is private and subject to change.
.SH "REFERENCES"
.IX Header "REFERENCES"
.Vb 2
\&  ISO/IEC FCD 9075\-3:200x Information technology \- Database Languages \-
\&  SQL \- Part 3: Call\-Level Interface (SQL/CLI)
\&
\&  SC32 N00744 = WG3:VIE\-005 = H2\-2002\-007
\&
\&  Date: 2002\-01\-15
.Ve
.ie n .SS "%ReturnTypes"
.el .SS "\f(CW%ReturnTypes\fP"
.IX Subsection "%ReturnTypes"
See: Codes and data types for implementation information (Table 28), Page 85, 86.
.PP
Mapped to \s-1ODBC\s0 datatype names.
.ie n .SS "%ReturnValues"
.el .SS "\f(CW%ReturnValues\fP"
.IX Subsection "%ReturnValues"
See: A.1 C header file \s-1SQLCLI.H,\s0 Page 317, 318.
.SH "TODO"
.IX Header "TODO"
Corrections, e.g.:
.PP
.Vb 1
\&  SQL_TRANSACTION_ISOLATION_OPTION vs. SQL_TRANSACTION_ISOLATION
.Ve
