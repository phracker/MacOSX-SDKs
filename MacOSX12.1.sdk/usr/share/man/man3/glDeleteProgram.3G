'\" t
.\"     Title: glDeleteProgram
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLDELETEPROGRAM" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDeleteProgram \- Deletes a program object
.SH "C SPECIFICATION"
.HP \w'void\ glDeleteProgram('u
.BI "void glDeleteProgram(GLuint\ " "program" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Specifies the program object to be deleted\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglDeleteProgram\fR
frees the memory and invalidates the name associated with the program object specified by
\fIprogram\&.\fR
This command effectively undoes the effects of a call to
\fBglCreateProgram\fR()\&.
.PP
If a program object is in use as part of current rendering state, it will be flagged for deletion, but it will not be deleted until it is no longer part of current state for any rendering context\&. If a program object to be deleted has shader objects attached to it, those shader objects will be automatically detached but not deleted unless they have already been flagged for deletion by a previous call to
\fBglDeleteShader\fR()\&. A value of 0 for
\fIprogram\fR
will be silently ignored\&.
.PP
To determine whether a program object has been flagged for deletion, call
\fBglGetProgram\fR()
with arguments
\fIprogram\fR
and
\fBGL_DELETE_STATUS\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is not a value generated by OpenGL\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_PROGRAM\fR
.PP
\fBglGetProgram\fR()
with arguments
\fIprogram\fR
and
\fBGL_DELETE_STATUS\fR
.PP
\fBglIsProgram\fR()
.SH "SEE ALSO"
.PP
\fBglCreateShader\fR(),
\fBglDetachShader\fR(),
\fBglUseProgram\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2005 3Dlabs Inc\&. Ltd\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
