.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Tools::Exports 3"
.TH Test2::Tools::Exports 3 "2020-10-22" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test2::Tools::Exports \- Tools for validating exporters.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These are tools for checking that symbols have been imported into your
namespace.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Test2::Tools::Exports
\&
\&    use Data::Dumper;
\&    imported_ok qw/Dumper/;
\&    not_imported_ok qw/dumper/;
.Ve
.SH "EXPORTS"
.IX Header "EXPORTS"
All subs are exported by default.
.IP "imported_ok(@SYMBOLS)" 4
.IX Item "imported_ok(@SYMBOLS)"
Check that the specified symbols exist in the current package. This will not
find inherited subs. This will only find symbols in the current package's symbol
table. This \fB\s-1WILL NOT\s0\fR confirm that the symbols were defined outside of the
package itself.
.Sp
.Vb 1
\&    imported_ok( \*(Aq$scalar\*(Aq, \*(Aq@array\*(Aq, \*(Aq%hash\*(Aq, \*(Aq&sub\*(Aq, \*(Aqalso_a_sub\*(Aq );
.Ve
.Sp
\&\f(CW@SYMBOLS\fR can contain any number of symbols. Each item in the array must be a
string. The string should be the name of a symbol. If a sigil is present then
it will search for that specified type, if no sigil is specified it will be
used as a sub name.
.IP "not_imported_ok(@SYMBOLS)" 4
.IX Item "not_imported_ok(@SYMBOLS)"
Check that the specified symbols do not exist in the current package. This will
not find inherited subs. This will only look at symbols in the current package's
symbol table.
.Sp
.Vb 1
\&    not_imported_ok( \*(Aq$scalar\*(Aq, \*(Aq@array\*(Aq, \*(Aq%hash\*(Aq, \*(Aq&sub\*(Aq, \*(Aqalso_a_sub\*(Aq );
.Ve
.Sp
\&\f(CW@SYMBOLS\fR can contain any number of symbols. Each item in the array must be a
string. The string should be the name of a symbol. If a sigil is present, then
it will search for that specified type. If no sigil is specified, it will be
used as a sub name.
.SH "CAVEATS"
.IX Header "CAVEATS"
Before Perl 5.10, it is very difficult to distinguish between a package scalar
that is undeclared vs declared and undefined. Currently \f(CW\*(C`imported_ok\*(C'\fR and
\&\f(CW\*(C`not_imported_ok\*(C'\fR cannot see package scalars declared using \f(CW\*(C`our $var\*(C'\fR unless
the variable has been assigned a defined value.
.PP
This will pass on recent perls, but fail on perls older than 5.10:
.PP
.Vb 1
\&    use Test2::Tools::Exports;
\&
\&    our $foo;
\&
\&    # Fails on perl onlder than 5.10
\&    imported_ok(qw/$foo/);
.Ve
.PP
If \f(CW$foo\fR is imported from another module, or imported using
\&\f(CW\*(C`use vars qw/$foo/;\*(C'\fR then it will work on all supported perl versions.
.PP
.Vb 1
\&    use Test2::Tools::Exports;
\&
\&    use vars qw/$foo/;
\&    use Some::Module qw/$bar/;
\&
\&    # Always works
\&    imported_ok(qw/$foo $bar/);
.Ve
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Suite can be found at
\&\fIhttps://github.com/Test\-More/Test2\-Suite/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2018 Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
