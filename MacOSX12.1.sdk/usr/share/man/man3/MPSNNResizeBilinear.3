.TH "MPSNNResizeBilinear" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSNNResizeBilinear
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNResize\&.h>\fP
.PP
Inherits \fBMPSCNNKernel\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:resizeWidth:resizeHeight:alignCorners:\fP"
.br
.ti -1c
.RI "(nullable instancetype) \- \fBinitWithCoder:device:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "NSUInteger \fBresizeWidth\fP"
.br
.ti -1c
.RI "NSUInteger \fBresizeHeight\fP"
.br
.ti -1c
.RI "BOOL \fBalignCorners\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework  The \fBMPSNNResizeBilinear\fP filter resizes the source image using bilinear interpolation to a destination whose dimensions are given by resizeWidth and resizeHeight
.PP
The number of output feature channels remains the same as the number of input feature channels\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nullable instancetype) \fBinitWithCoder:\fP (NSCoder *__nonnull) aDecoder(nonnull id< MTLDevice >) device"
\fBNSSecureCoding\fP compatability  See \fBMPSKernel::initWithCoder\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIaDecoder\fP The NSCoder subclass with your serialized \fBMPSNNResizeBilinear\fP 
.br
\fIdevice\fP The MTLDevice on which to make the \fBMPSNNResizeBilinear\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP new \fBMPSNNResizeBilinear\fP object, or nil if failure\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSCNNKernel\fP\&.
.SS "\- (nonnull instancetype) initWithDevice: (nonnull id< MTLDevice >) device"
Standard init with default properties per filter type 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device that the filter will be used on\&. May not be NULL\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP pointer to the newly initialized object\&. This will fail, returning nil if the device is not supported\&. Devices must be MTLFeatureSet_iOS_GPUFamily2_v1 or later\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSCNNKernel\fP\&.
.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(NSUInteger) resizeWidth(NSUInteger) resizeHeight(BOOL) alignCorners"
Initialize the resize bilinear filter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device the filter will run on\&. 
.br
\fIresizeWidth\fP The destination resize width in pixels 
.br
\fIresizeHeight\fP The destination resize height in pixels 
.br
\fIalignCorners\fP Specifier whether the centers of the 4 corner pixels of the input and output regions are aligned, preserving the values at the corner pixels\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP valid \fBMPSNNResizeBilinear\fP object or nil, if failure\&. 
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "\- alignCorners\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
If YES, the centers of the 4 corner pixels of the input and output regions are aligned, preserving the values at the corner pixels\&. The default is NO\&. 
.SS "\- resizeHeight\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The resize height\&. 
.SS "\- resizeWidth\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The resize width\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
