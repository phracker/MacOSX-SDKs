.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "ExtUtils::Helpers 3"
.TH ExtUtils::Helpers 3 "2016-09-09" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ExtUtils::Helpers \- Various portability utilities for module builders
.SH "VERSION"
.IX Header "VERSION"
version 0.026
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use ExtUtils::Helpers qw/make_executable split_like_shell/;
\&
\& unshift @ARGV, split_like_shell($ENV{PROGRAM_OPTS});
\& write_script_to(\*(AqBuild\*(Aq);
\& make_executable(\*(AqBuild\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides various portable helper functions for module building modules.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "make_executable($filename)"
.IX Subsection "make_executable($filename)"
This makes a perl script executable.
.SS "split_like_shell($string)"
.IX Subsection "split_like_shell($string)"
This function splits a string the same way as the local platform does.
.SS "detildefy($path)"
.IX Subsection "detildefy($path)"
This function substitutes a tilde at the start of a path with the users homedir in an appropriate manner.
.SS "man1_pagename($filename)"
.IX Subsection "man1_pagename($filename)"
Returns the man page filename for a script.
.ie n .SS "man3_pagename($filename, $basedir)"
.el .SS "man3_pagename($filename, \f(CW$basedir\fP)"
.IX Subsection "man3_pagename($filename, $basedir)"
Returns the man page filename for a Perl library.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Olivier Mengu√© and Christian Walde made \f(CW\*(C`make_executable\*(C'\fR work on Windows.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Ken Williams <kwilliams@cpan.org>
.IP "\(bu" 4
Leon Timmermans <leont@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2004 by Ken Williams, Leon Timmermans.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
