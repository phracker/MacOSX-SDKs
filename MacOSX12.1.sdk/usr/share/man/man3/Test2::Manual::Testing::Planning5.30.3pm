.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Manual::Testing::Planning 3"
.TH Test2::Manual::Testing::Planning 3 "2020-10-22" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test2::Manual::Testing::Planning \- The many ways to set a plan.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This tutorial covers the many ways of setting a plan.
.SH "TEST COUNT"
.IX Header "TEST COUNT"
The \f(CW\*(C`plan()\*(C'\fR function is provided by Test2::Tools::Basic. This function lets
you specify an exact number of tests to run. This can be done at the start of
testing, or at the end. This cannot be done partway through testing.
.PP
.Vb 2
\&    use Test2::Tools::Basic;
\&    plan(10); # 10 tests expected
\&
\&    ...
.Ve
.SH "DONE TESTING"
.IX Header "DONE TESTING"
The \f(CW\*(C`done_testing()\*(C'\fR function is provided by Test2::Tools::Basic. This
function will automatically set the plan to the number of tests that were run.
This must be used at the very end of testing.
.PP
.Vb 1
\&    use Test2::Tools::Basic;
\&
\&    ...
\&
\&    done_testing();
.Ve
.SH "SKIP ALL"
.IX Header "SKIP ALL"
The \f(CW\*(C`skip_all()\*(C'\fR function is provided by Test2::Tools::Basic. This function
will set the plan to \f(CW0\fR, and exit the test immediately. You may provide a skip
reason that explains why the test should be skipped.
.PP
.Vb 2
\&    use Test2::Tools::Basic;
\&    skip_all("This test will not run here") if ...;
\&
\&    ...
.Ve
.SH "CUSTOM PLAN EVENT"
.IX Header "CUSTOM PLAN EVENT"
A plan is simply an Test2::Event::Plan event that gets sent to the current
hub. You could always write your own tool to set the plan.
.PP
.Vb 1
\&    use Test2::API qw/context/;
\&
\&    sub set_plan {
\&        my $count = @_;
\&
\&        my $ctx = context();
\&        $ctx\->send_event(\*(AqPlan\*(Aq, max => $count);
\&        $ctx\->release;
\&
\&        return $count;
\&    }
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Test2::Manual \- Primary index of the manual.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Manual can be found at
\&\fIhttps://github.com/Test\-More/Test2\-Suite/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2018 Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
