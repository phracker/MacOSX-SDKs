.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MooseX::Storage::Engine 3pm"
.TH MooseX::Storage::Engine 3pm "2013-12-21" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooseX::Storage::Engine \- The meta\-engine to handle collapsing and expanding objects
.SH "VERSION"
.IX Header "VERSION"
version 0.45
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
There really aren't any major user serviceable parts here. However the typical
use case is adding new non-Moose classes to the type registry for
serialization. Here is an example of this for DateTime objects. This
assumes a \f(CW\*(C`DateTime\*(C'\fR type has been registered.
.PP
.Vb 6
\&    MooseX::Storage::Engine\->add_custom_type_handler(
\&        \*(AqDateTime\*(Aq => (
\&            expand   => sub { DateTime\->new(shift) },
\&            collapse => sub { (shift)\->iso8601 },
\&        )
\&    );
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "Accessors"
.IX Subsection "Accessors"
.IP "\fBclass\fR" 4
.IX Item "class"
.PD 0
.IP "\fBobject\fR" 4
.IX Item "object"
.IP "\fBstorage\fR" 4
.IX Item "storage"
.IP "\fBseen\fR" 4
.IX Item "seen"
.PD
.SS "\s-1API\s0"
.IX Subsection "API"
.IP "\fBexpand_object\fR" 4
.IX Item "expand_object"
.PD 0
.IP "\fBcollapse_object\fR" 4
.IX Item "collapse_object"
.PD
.SS "..."
.IX Subsection "..."
.IP "\fBcollapse_attribute\fR" 4
.IX Item "collapse_attribute"
.PD 0
.IP "\fBcollapse_attribute_value\fR" 4
.IX Item "collapse_attribute_value"
.IP "\fBexpand_attribute\fR" 4
.IX Item "expand_attribute"
.IP "\fBexpand_attribute_value\fR" 4
.IX Item "expand_attribute_value"
.IP "\fBcheck_for_cycle_in_collapse\fR" 4
.IX Item "check_for_cycle_in_collapse"
.IP "\fBcheck_for_cycle_in_expansion\fR" 4
.IX Item "check_for_cycle_in_expansion"
.IP "\fBmap_attributes\fR" 4
.IX Item "map_attributes"
.PD
.SS "Type Constraint Handlers"
.IX Subsection "Type Constraint Handlers"
.IP "\fBfind_type_handler ($type)\fR" 4
.IX Item "find_type_handler ($type)"
.PD 0
.IP "\fBfind_type_handler_for ($name)\fR" 4
.IX Item "find_type_handler_for ($name)"
.ie n .IP "\fBadd_custom_type_handler ($name, \fB%handlers\fB)\fR" 4
.el .IP "\fBadd_custom_type_handler ($name, \f(CB%handlers\fB)\fR" 4
.IX Item "add_custom_type_handler ($name, %handlers)"
.IP "\fBremove_custom_type_handler ($name)\fR" 4
.IX Item "remove_custom_type_handler ($name)"
.PD
.SS "Introspection"
.IX Subsection "Introspection"
.IP "\fBmeta\fR" 4
.IX Item "meta"
.SH "BUGS"
.IX Header "BUGS"
All complex software has bugs lurking in it, and this module is no
exception. If you find a bug please either email me, or add the bug
to cpan-RT.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Chris Prather <chris.prather@iinteractive.com>
.IP "\(bu" 4
Stevan Little <stevan.little@iinteractive.com>
.IP "\(bu" 4
\&\s-1XXXX XXX\s0'\s-1XX \s0(Yuval Kogman) <nothingmuch@woobling.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2007 by Infinity Interactive, Inc..
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
