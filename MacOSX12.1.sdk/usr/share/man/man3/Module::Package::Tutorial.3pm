.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::Package::Tutorial 3"
.TH Module::Package::Tutorial 3 "2011-06-07" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::Package::Tutorial \- A Hands on Guide
.SH "INTRODUCTION"
.IX Header "INTRODUCTION"
Welcome to Module::Package. This tutorial is for people who want to package
modules for \s-1CPAN,\s0 who want to make sure they are doing it the best they can,
but who also want to spend more time working on their code than on becoming an
expert packager. This tutorial is also for people who want to take their time
and effort spent on packaging, and share new ideas and tricks with others.
.PP
I'll start by taking a typical Makefile.PL written with Module::Install and
show you how to turn this into various Module::Package configurations,
eventually ending up with a single line Makefile.PL. Then I'll show you the
ins and outs of making your own Module::Install plugin module to handle your
common needs.
.SH "Makefile.PL 2.0"
.IX Header "Makefile.PL 2.0"
I won't start with 1.0. Those days are long past. Here's what a typical
Makefile.PL looks like these days.
.PP
.Vb 2
\&    use strict;
\&    use inc::Module::Install;
\&
\&    name            \*(AqFoo\-Bar\*(Aq;
\&    all_from        \*(Aqlib/Foo/Bar.pm\*(Aq;
\&    build_requires  \*(AqTest::More\*(Aq;
\&
\&    auto_include_deps;
\&    sign;
\&
\&    WriteAll;
.Ve
.PP
\&... This doc is a work in progress. Stay tuned ...
.PP
Here's the the final version:
.PP
.Vb 1
\&    use Module::Package \*(AqAll:good\*(Aq;
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Ingy döt Net <ingy@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2011. Ingy döt Net.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See http://www.perl.com/perl/misc/Artistic.html
