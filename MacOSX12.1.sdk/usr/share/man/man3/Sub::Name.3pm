.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Sub::Name 3"
.TH Sub::Name 3 "2019-10-05" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Sub::Name \- (Re)name a sub
.SH "VERSION"
.IX Header "VERSION"
version 0.26
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Sub::Name;
\&
\&    subname $name, $subref;
\&
\&    $subref = subname foo => sub { ... };
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module has only one function, which is also exported by default:
.SS "subname \s-1NAME, CODEREF\s0"
.IX Subsection "subname NAME, CODEREF"
Assigns a new name to referenced sub.  If package specification is omitted in
the name, then the current package is used.  The return value is the sub.
.PP
The name is only used for informative routines (caller, Carp, etc).  You won't
be able to actually invoke the sub by the given name.  To allow that, you need
to do glob-assignment yourself.
.PP
Note that for anonymous closures (subs that reference lexicals declared outside
the sub itself) you can name each instance of the closure differently, which
can be very useful for debugging.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
Sub::Identify \- for getting information about subs
.IP "\(bu" 4
Sub::Util \- set_subname is another implementation of \f(CW\*(C`subname\*(C'\fR
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=Sub-Name>
(or bug\-Sub\-Name@rt.cpan.org <mailto:bug-Sub-Name@rt.cpan.org>).
.PP
There is also an irc channel available for users of this distribution, at
\&\f(CW\*(C`#toolchain\*(C'\fR on \f(CW\*(C`irc.perl.org\*(C'\fR <irc://irc.perl.org/#toolchain>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Matthijs van Duin <xmath@cpan.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Graham Knop <haarg@haarg.org>
.IP "\(bu" 4
Leon Timmermans <fawaka@gmail.com>
.IP "\(bu" 4
Reini Urban <rurban@cpan.org>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Matthijs van Duin <xmath\-no\-spam@nospam.cpan.org>
.IP "\(bu" 4
Dagfinn Ilmari Manns√•ker <ilmari@ilmari.org>
.IP "\(bu" 4
gfx <gfuji@cpan.org>
.IP "\(bu" 4
Aristotle Pagaltzis <pagaltzis@gmx.de>
.IP "\(bu" 4
J.R. Mash <jmash.code@gmail.com>
.IP "\(bu" 4
Alexander Bluhm <alexander.bluhm@gmx.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2004, 2008 by Matthijs van Duin, all rights reserved;
copyright (c) 2014 cPanel Inc., all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
