'\" t
.\"     Title: glDrawElementsBaseVertex
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLDRAWELEMENTSBASEVE" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDrawElementsBaseVertex \- render primitives from array data with a per\-element offset
.SH "C SPECIFICATION"
.HP \w'void\ glDrawElementsBaseVertex('u
.BI "void glDrawElementsBaseVertex(GLenum\ " "mode" ", GLsizei\ " "count" ", GLenum\ " "type" ", GLvoid\ *" "indices" ", GLint\ " "basevertex" ");"
.SH "PARAMETERS"
.PP
\fImode\fR
.RS 4
Specifies what kind of primitives to render\&. Symbolic constants
\fBGL_POINTS\fR,
\fBGL_LINE_STRIP\fR,
\fBGL_LINE_LOOP\fR,
\fBGL_LINES\fR,
\fBGL_TRIANGLE_STRIP\fR,
\fBGL_TRIANGLE_FAN\fR, and
\fBGL_TRIANGLES\fR
are accepted\&.
.RE
.PP
\fIcount\fR
.RS 4
Specifies the number of elements to be rendered\&.
.RE
.PP
\fItype\fR
.RS 4
Specifies the type of the values in indices\&. Must be one of
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_UNSIGNED_SHORT\fR, or
\fBGL_UNSIGNED_INT\fR\&.
.RE
.PP
\fIindices\fR
.RS 4
Specifies a pointer to the location where the indices are stored\&.
.RE
.PP
\fIbasevertex\fR
.RS 4
Specifies a constant that should be added to each element of
\fIindices\fR
when chosing elements from the enabled vertex arrays\&.
.RE
.SH "DESCRIPTION"
.PP

\fBglDrawElementsBaseVertex\fR
behaves identically to
\fBglDrawElements\fR()
except that the
\fIi\fRth element transferred by the corresponding draw call will be taken from element
\fIindices\fR[i] +
\fIbasevertex\fR
of each enabled array\&. If the resulting value is larger than the maximum value representable by
\fItype\fR, it is as if the calculation were upconverted to 32\-bit unsigned integers (with wrapping on overflow conditions)\&. The operation is undefined if the sum would be negative\&.
.SH "NOTES"
\fBglDrawElementsBaseVertex\fR is only supported if the GL version is 3\&.2 or greater, or if
            the ARB_draw_elements_base_vertex extension is supported\&.
    .SH "ERRORS"
.PP

\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is not an accepted value\&.
.PP

\fBGL_INVALID_VALUE\fR
is generated if
\fIcount\fR
is negative\&.
.PP

\fBGL_INVALID_OPERATION\fR
is generated if a geometry shader is active and
\fImode\fR
is incompatible with the input primitive type of the geometry shader in the currently installed program object\&.
.PP

\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound to an enabled array or the element array and the buffer object\*(Aqs data store is currently mapped\&.
.SH "SEE ALSO"
.PP

\fBglDrawElements\fR(),
\fBglDrawRangeElements\fR(),
\fBglDrawRangeElementsBaseVertex\fR(),
\fBglDrawElementsInstanced\fR(),
\fBglDrawElementsInstancedBaseVertex\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
