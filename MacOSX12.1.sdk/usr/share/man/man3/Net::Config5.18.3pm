.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::Config 3pm"
.TH Net::Config 3pm "2014-09-30" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Config \- Local configuration data for libnet
.SH "SYNOPSYS"
.IX Header "SYNOPSYS"
.Vb 1
\&    use Net::Config qw(%NetConfig);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Net::Config\*(C'\fR holds configuration data for the modules in the libnet
distribution. During installation you will be asked for these values.
.PP
The configuration data is held globally in a file in the perl installation
tree, but a user may override any of these values by providing their own. This
can be done by having a \f(CW\*(C`.libnetrc\*(C'\fR file in their home directory. This file
should return a reference to a \s-1HASH\s0 containing the keys described below.
For example
.PP
.Vb 6
\&    # .libnetrc
\&    {
\&        nntp_hosts => [ "my_preferred_host" ],
\&        ph_hosts   => [ "my_ph_server" ],
\&    }
\&    _\|_END_\|_
.Ve
.SH "METHODS"
.IX Header "METHODS"
\&\f(CW\*(C`Net::Config\*(C'\fR defines the following methods. They are methods as they are
invoked as class methods. This is because \f(CW\*(C`Net::Config\*(C'\fR inherits from
\&\f(CW\*(C`Net::LocalCfg\*(C'\fR so you can override these methods if you want.
.IP "requires_firewall \s-1HOST\s0" 4
.IX Item "requires_firewall HOST"
Attempts to determine if a given host is outside your firewall. Possible
return values are.
.Sp
.Vb 3
\&  \-1  Cannot lookup hostname
\&   0  Host is inside firewall (or there is no ftp_firewall entry)
\&   1  Host is outside the firewall
.Ve
.Sp
This is done by using hostname lookup and the \f(CW\*(C`local_netmask\*(C'\fR entry in
the configuration data.
.SH "NetConfig VALUES"
.IX Header "NetConfig VALUES"
.IP "nntp_hosts" 4
.IX Item "nntp_hosts"
.PD 0
.IP "snpp_hosts" 4
.IX Item "snpp_hosts"
.IP "pop3_hosts" 4
.IX Item "pop3_hosts"
.IP "smtp_hosts" 4
.IX Item "smtp_hosts"
.IP "ph_hosts" 4
.IX Item "ph_hosts"
.IP "daytime_hosts" 4
.IX Item "daytime_hosts"
.IP "time_hosts" 4
.IX Item "time_hosts"
.PD
Each is a reference to an array of hostnames (in order of preference),
which should be used for the given protocol
.IP "inet_domain" 4
.IX Item "inet_domain"
Your internet domain name
.IP "ftp_firewall" 4
.IX Item "ftp_firewall"
If you have an \s-1FTP\s0 proxy firewall (\fB\s-1NOT\s0\fR an \s-1HTTP\s0 or \s-1SOCKS\s0 firewall)
then this value should be set to the firewall hostname. If your firewall
does not listen to port 21, then this value should be set to
\&\f(CW"hostname:port"\fR (eg \f(CW"hostname:99"\fR)
.IP "ftp_firewall_type" 4
.IX Item "ftp_firewall_type"
There are many different ftp firewall products available. But unfortunately
there is no standard for how to traverse a firewall.  The list below shows the
sequence of commands that Net::FTP will use
.Sp
.Vb 5
\&  user        Username for remote host
\&  pass        Password for remote host
\&  fwuser      Username for firewall
\&  fwpass      Password for firewall
\&  remote.host The hostname of the remote ftp server
.Ve
.RS 4
.IP "0" 4
There is no firewall
.IP "1" 4
.IX Item "1"
.Vb 2
\&     USER user@remote.host
\&     PASS pass
.Ve
.IP "2" 4
.IX Item "2"
.Vb 4
\&     USER fwuser
\&     PASS fwpass
\&     USER user@remote.host
\&     PASS pass
.Ve
.IP "3" 4
.IX Item "3"
.Vb 5
\&     USER fwuser
\&     PASS fwpass
\&     SITE remote.site
\&     USER user
\&     PASS pass
.Ve
.IP "4" 4
.IX Item "4"
.Vb 5
\&     USER fwuser
\&     PASS fwpass
\&     OPEN remote.site
\&     USER user
\&     PASS pass
.Ve
.IP "5" 4
.IX Item "5"
.Vb 2
\&     USER user@fwuser@remote.site
\&     PASS pass@fwpass
.Ve
.IP "6" 4
.IX Item "6"
.Vb 4
\&     USER fwuser@remote.site
\&     PASS fwpass
\&     USER user
\&     PASS pass
.Ve
.IP "7" 4
.IX Item "7"
.Vb 4
\&     USER user@remote.host
\&     PASS pass
\&     AUTH fwuser
\&     RESP fwpass
.Ve
.RE
.RS 4
.RE
.IP "ftp_ext_passive" 4
.IX Item "ftp_ext_passive"
.PD 0
.IP "ftp_int_passive" 4
.IX Item "ftp_int_passive"
.PD
\&\s-1FTP\s0 servers can work in passive or active mode. Active mode is when
you want to transfer data you have to tell the server the address and
port to connect to.  Passive mode is when the server provide the
address and port and you establish the connection.
.Sp
With some firewalls active mode does not work as the server cannot
connect to your machine (because you are behind a firewall) and the firewall
does not re-write the command. In this case you should set \f(CW\*(C`ftp_ext_passive\*(C'\fR
to a \fItrue\fR value.
.Sp
Some servers are configured to only work in passive mode. If you have
one of these you can force \f(CW\*(C`Net::FTP\*(C'\fR to always transfer in passive
mode; when not going via a firewall, by setting \f(CW\*(C`ftp_int_passive\*(C'\fR to
a \fItrue\fR value.
.IP "local_netmask" 4
.IX Item "local_netmask"
A reference to a list of netmask strings in the form \f(CW"134.99.4.0/24"\fR.
These are used by the \f(CW\*(C`requires_firewall\*(C'\fR function to determine if a given
host is inside or outside your firewall.
.PP
The following entries are used during installation & testing on the
libnet package
.IP "test_hosts" 4
.IX Item "test_hosts"
If true then \f(CW\*(C`make test\*(C'\fR may attempt to connect to hosts given in the
configuration.
.IP "test_exists" 4
.IX Item "test_exists"
If true then \f(CW\*(C`Configure\*(C'\fR will check each hostname given that it exists
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 220:" 4
.IX Item "Around line 220:"
Expected text after =item, not a number
.IP "Around line 225:" 4
.IX Item "Around line 225:"
Expected text after =item, not a number
.IP "Around line 232:" 4
.IX Item "Around line 232:"
Expected text after =item, not a number
.IP "Around line 240:" 4
.IX Item "Around line 240:"
Expected text after =item, not a number
.IP "Around line 248:" 4
.IX Item "Around line 248:"
Expected text after =item, not a number
.IP "Around line 253:" 4
.IX Item "Around line 253:"
Expected text after =item, not a number
.IP "Around line 260:" 4
.IX Item "Around line 260:"
Expected text after =item, not a number
