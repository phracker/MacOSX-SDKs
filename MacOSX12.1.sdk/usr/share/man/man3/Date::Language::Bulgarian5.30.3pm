.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Date::Language::Bulgarian 3"
.TH Date::Language::Bulgarian 3 "2020-01-16" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Language::Bulgarian \- localization for Date::Format
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is Bulgarian localization for Date::Format. 
It is important to note that this module source code is in utf8.
All strings which it outputs are in utf8, so it is safe to use it 
currently only with English. You are left alone to try and convert 
the output when using different Date::Language::* in the same application. 
This should be addresed in the future.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\&    use strict; 
\&    use warnings;
\&    use Date::Language;
\&    local $\e=$/;
\&    my $template =\*(Aq%a %b %e %T %Y (%Y\-%m\-%d %H:%M:%S)\*(Aq;
\&    my $time=1290883821; #or just use time();
\&    my @lt = localtime($time);
\&    my %languages = qw(English GMT German EEST Bulgarian EET);
\&    binmode(select,\*(Aq:utf8\*(Aq);
\&
\&    foreach my $l(keys %languages){
\&        my $lang = Date::Language\->new($l);
\&        my $zone = $languages{$l};
\&        print $/. "$l $zone";
\&        print $lang\->time2str($template, $time);
\&        print $lang\->time2str($template, $time, $zone);
\&
\&        print $lang\->strftime($template, \e@lt);
\&    }
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Krasimir Berov (berov@cpan.org)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2010 Krasimir Berov. This program is free
software; you can redistribute it and/or modify it under the same terms
as Perl itself.
