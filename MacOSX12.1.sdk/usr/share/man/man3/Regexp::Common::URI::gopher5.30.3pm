.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Regexp::Common::URI::gopher 3"
.TH Regexp::Common::URI::gopher 3 "2017-06-02" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Regexp::Common::URI::gopher \-\- Returns a pattern for gopher URIs.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Regexp::Common qw /URI/;
\&
\&    while (<>) {
\&        /$RE{URI}{gopher}/       and  print "Contains a gopher URI.\en";
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.ie n .SS "$RE{\s-1URI\s0}{gopher}{\-notab}"
.el .SS "\f(CW$RE\fP{\s-1URI\s0}{gopher}{\-notab}"
.IX Subsection "$RE{URI}{gopher}{-notab}"
Gopher URIs are poorly defined. Originally, \s-1RFC 1738\s0 defined gopher URIs,
but they were later redefined in an internet draft. One that was expired
in June 1997.
.PP
The internet draft for gopher URIs defines them as follows:
.PP
.Vb 2
\&    "gopher:" "//" host [ ":" port ] "/" gopher\-type selector
\&                        [ "%09" search [ "%09" gopherplus_string ]]
.Ve
.PP
Unfortunally, a \fIselector\fR is defined in such a way that characters
may be escaped using the \s-1URI\s0 escape mechanism. This includes tabs,
which escaped are \f(CW%09\fR. Hence, the syntax cannot distinguish between
a \s-1URI\s0 that has both a \fIselector\fR and a \fIsearch\fR part, and an \s-1URI\s0
where the \fIselector\fR includes an escaped tab. (The text of the draft
forbids tabs to be present in the \fIselector\fR though).
.PP
\&\f(CW$RE{URI}{gopher}\fR follows the defined syntax. To disallow escaped
tabs in the \fIselector\fR and \fIsearch\fR parts, use \f(CW$RE{URI}{gopher}{\-notab}\fR.
.PP
There are other differences between the text and the given syntax.
According to the text, selector strings cannot have tabs, linefeeds
or carriage returns in them. The text also allows the entire \fIgopher-path\fR,
(the part after the slash following the hostport) to be empty; if this
is empty the slash may be omitted as well. However, this isn't reflected
in the syntax.
.PP
Under \f(CW\*(C`{\-keep}\*(C'\fR, the following are returned:
.ie n .IP "$1" 4
.el .IP "\f(CW$1\fR" 4
.IX Item "$1"
The entire \s-1URI.\s0
.ie n .IP "$2" 4
.el .IP "\f(CW$2\fR" 4
.IX Item "$2"
The scheme.
.ie n .IP "$3" 4
.el .IP "\f(CW$3\fR" 4
.IX Item "$3"
The host (name or address).
.ie n .IP "$4" 4
.el .IP "\f(CW$4\fR" 4
.IX Item "$4"
The port (if any).
.ie n .IP "$5" 4
.el .IP "\f(CW$5\fR" 4
.IX Item "$5"
The \*(L"gopher-path\*(R", the part after the / following the host and port.
.ie n .IP "$6" 4
.el .IP "\f(CW$6\fR" 4
.IX Item "$6"
The gopher-type.
.ie n .IP "$7" 4
.el .IP "\f(CW$7\fR" 4
.IX Item "$7"
The selector. (When no \f(CW\*(C`{\-notab}\*(C'\fR is used, this includes the search
and gopherplus_string, including the separating escaped tabs).
.ie n .IP "$8" 4
.el .IP "\f(CW$8\fR" 4
.IX Item "$8"
The search, if given. (Only when \f(CW\*(C`{\-notab}\*(C'\fR is given).
.ie n .IP "$9" 4
.el .IP "\f(CW$9\fR" 4
.IX Item "$9"
The gopherplus_string, if given. (Only when \f(CW\*(C`{\-notab}\*(C'\fR is given).
.PP
head1 \s-1REFERENCES\s0
.IP "\fB[\s-1RFC 1738\s0]\fR" 4
.IX Item "[RFC 1738]"
Berners-Lee, Tim, Masinter, L., McCahill, M.: \fIUniform Resource
Locators (\s-1URL\s0)\fR. December 1994.
.IP "\fB[\s-1RFC 1808\s0]\fR" 4
.IX Item "[RFC 1808]"
Fielding, R.: \fIRelative Uniform Resource Locators (\s-1URL\s0)\fR. June 1995.
.IP "\fB[\s-1GOPHER URL\s0]\fR" 4
.IX Item "[GOPHER URL]"
Krishnan, Murali R., Casey, James: \*(L"A Gopher \s-1URL\s0 Format\*(R". Expired
Internet draft \fIdraft-murali-url-gopher\fR. December 1996.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Regexp::Common::URI for other supported URIs.
.SH "AUTHOR"
.IX Header "AUTHOR"
Damian Conway (damian@conway.org)
.SH "MAINTENANCE"
.IX Header "MAINTENANCE"
This package is maintained by Abigail (\fIregexp\-common@abigail.be\fR).
.SH "BUGS AND IRRITATIONS"
.IX Header "BUGS AND IRRITATIONS"
Bound to be plenty.
.SH "LICENSE and COPYRIGHT"
.IX Header "LICENSE and COPYRIGHT"
This software is Copyright (c) 2001 \- 2017, Damian Conway and Abigail.
.PP
This module is free software, and maybe used under any of the following
licenses:
.PP
.Vb 4
\& 1) The Perl Artistic License.     See the file COPYRIGHT.AL.
\& 2) The Perl Artistic License 2.0. See the file COPYRIGHT.AL2.
\& 3) The BSD License.               See the file COPYRIGHT.BSD.
\& 4) The MIT License.               See the file COPYRIGHT.MIT.
.Ve
