.\"	$OpenBSD: gettimeofday.2,v 1.5 1997/03/16 01:18:49 flipk Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)gettimeofday.2	8.2 (Berkeley) 5/26/95
.\"
.Dd August 5, 2008
.Dt GETTIMEOFDAY 2
.Os BSD 4
.Sh NAME
.Nm gettimeofday ,
.Nm settimeofday
.Nd get/set date and time
.Sh SYNOPSIS
.Fd #include <sys/time.h>
.Ft int
.Fo gettimeofday
.Fa "struct timeval *restrict tp"
.Fa "void *restrict tzp"
.Fc
.Ft int
.Fo settimeofday
.Fa "const struct timeval *tp"
.Fa "const struct timezone *tzp"
.Fc
.Sh DESCRIPTION
.Pp
The system's notion of the current Greenwich time and the current time
zone is obtained with the
.Fn gettimeofday
call, and set with the
.Fn settimeofday
call.  The time is expressed in seconds and microseconds
since midnight (0 hour), January 1, 1970.  The resolution of the system
clock is hardware dependent, and the time may be updated continuously or
in ``ticks.''  If
.Fa tp
is NULL
and
.Fa tzp
is non-NULL,
.Fn gettimeofday
will populate the timezone struct in 
.Fa tzp .
If 
.Fa tp
is non-NULL and
.Fa tzp 
is NULL, then only the timeval struct in
.Fa tp
is populated. If both
.Fa tp
and
.Fa tzp
are NULL, nothing is returned.
.Pp
The structures pointed to by
.Fa tp
and
.Fa tzp
are defined in 
.Ao Pa sys/time.h Ac
as:
.Pp
.Bd -literal

struct timeval {
	time_t       tv_sec;   /* seconds since Jan. 1, 1970 */
	suseconds_t  tv_usec;  /* and microseconds */
};

struct timezone {
	int	tz_minuteswest; /* of Greenwich */
	int	tz_dsttime;	/* type of dst correction to apply */
};

.Ed
.Pp
The 
.Fa timeval
structure specifies a time value in seconds and microseconds.
The values in
.Fa timeval
are opaque types whose length may vary on different machines;
depending on them to have any given length may lead to errors.
.Pp
The 
.Fa timezone
structure indicates the local time zone
(measured in minutes of time westward from Greenwich),
and a flag that, if nonzero, indicates that
Daylight Saving time applies locally during
the appropriate part of the year.
.Pp
Only the super-user may set the time of day or time zone.
If the system securelevel is greater than 1 (see
.Xr launchd 8 ),
the time may only be advanced.
This limitation is imposed to prevent a malicious super-user
from setting arbitrary time stamps on files.
The system time can still be adjusted backwards using the
.Xr adjtime 2
system call even when the system is secure.
.Sh RETURN
A 0 return value indicates that the call succeeded.
A -1 return value indicates an error occurred, and in this
case an error code is stored into the global variable
.Va errno .
.Sh ERRORS
The following error codes may be set in
.Va errno :
.Bl -tag -width [EFAULT]
.It Bq Er EFAULT
An argument address referenced invalid memory.
.It Bq Er EPERM
A user other than the super-user attempted to set the time.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/time.h>
.Pp
.Ft int
.br
.Fo gettimeofday
.Fa "struct timeval *tp"
.Fa "struct timezone *tzp"
.Fc ;
.Pp
The type of
.Fa tzp
has changed.
.Sh SEE ALSO
.Xr date 1 ,
.Xr adjtime 2 ,
.Xr ctime 3 ,
.Xr compat 5 ,
.Xr timed 8
.Sh HISTORY
The
.Fn gettimeofday
function call appeared in
.Bx 4.2 .
