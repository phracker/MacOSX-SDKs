.\"	$NetBSD: bind.2,v 1.8 1995/10/12 15:40:46 jtc Exp $
.\"
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)bind.2	8.1 (Berkeley) 6/4/93
.\"
.Dd March 18, 2015
.Dt BIND 2
.Os BSD 4.2
.Sh NAME
.Nm bind
.Nd bind a name to a socket
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo bind
.Fa "int socket"
.Fa "const struct sockaddr *address"
.Fa "socklen_t address_len"
.Fc
.Sh DESCRIPTION
.Fn bind
assigns a name to an unnamed socket.
When a socket is created 
with
.Xr socket 2
it exists in a name space (address family)
but has no name assigned.
.Fn bind
requests that
.Fa address
be assigned to the socket.
.Sh NOTES
Binding a name in the UNIX domain creates a socket in the file
system that must be deleted by the caller when it is no longer
needed (using
.Xr unlink 2 ) .
.Pp
The rules used in name binding vary between communication domains.
Consult the manual entries in section 4 for detailed information.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn bind
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
The requested address is protected, and the current user
has inadequate permission to access it.
.\" ==========
.It Bq Er EADDRINUSE
The specified address is already in use.
.\" ==========
.It Bq Er EADDRNOTAVAIL
The specified address is not available from the local machine.
.\" ==========
.It Bq Er EAFNOSUPPORT
.Fa address
is not valid for the address family of
.Fa socket .
.\" ==========
.It Bq Er EBADF
.Fa socket
is not a valid file descriptor.
.\" ==========
.It Bq Er EDESTADDRREQ
.Fa socket
is a null pointer.
.\" ==========
.It Bq Er EFAULT
The
.Fa address
parameter is not in a valid part of the user
address space.
.\" ==========
.It Bq Er EINVAL
.Fa socket
is already bound to an address
and the protocol does not support binding to a new address.
Alternatively,
.Fa socket
may have been shut down.
.\" ==========
.It Bq Er ENOTSOCK
.Fa socket
does not refer to a socket.
.\" ==========
.It Bq Er EOPNOTSUPP
.Fa socket
is not of a type that can be bound to an address.
.El
.Pp
The following errors are specific to binding names in the UNIX domain.
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
A component of the path prefix does not allow searching
or the node's parent directory denies write permission.
.\" ==========
.It Bq Er EEXIST
A file already exists at the pathname.
.Xr unlink 2
it first.
.\" ==========
.It Bq Er EIO
An I/O error occurred while making the directory entry
or allocating the inode.
.\" ==========
.It Bq Er EISDIR
An empty pathname was specified.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
A component of the path name does not refer to an existing file.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er EROFS
The name would reside on a read-only file system.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr connect 2 ,
.Xr connectx 2 ,
.Xr getsockname 2 ,
.Xr listen 2 ,
.Xr socket 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn bind
function call appeared in
.Bx 4.2 .
