.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLAMIGA 1"
.TH PERLAMIGA 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlamiga \- Perl under Amiga OS
.SH "NOTE"
.IX Header "NOTE"
\&\fBPerl 5.8.0 cannot be built in AmigaOS.  You can use either the
maintenance release Perl 5.6.1 or the development release Perl 5.7.2
in AmigaOS.  See \*(L"\s-1PERL 5.8.0 BROKEN IN AMIGAOS\*(R"\s0 if you want to help
fixing this problem.\fR
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
One can read this document in the following formats:
.PP
.Vb 2
\&        man perlamiga
\&        multiview perlamiga.guide
.Ve
.PP
to list some (not all may be available simultaneously), or it may
be read \fIas is\fR: either as \fI\s-1README\s0.amiga\fR, or \fIpod/perlamiga.pod\fR.
.PP
A recent version of perl for the Amiga can be found at the Geek Gadgets
section of the Aminet:
.PP
.Vb 1
\&      http://www.aminet.net/~aminet/dev/gg
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Prerequisites for Compiling Perl on AmigaOS"
.IX Subsection "Prerequisites for Compiling Perl on AmigaOS"
.IP "\fBUnix emulation for AmigaOS: ixemul.library\fR" 6
.IX Item "Unix emulation for AmigaOS: ixemul.library"
You need the Unix emulation for AmigaOS, whose most important part is
\&\fBixemul.library\fR. For a minimum setup, get the latest versions
of the following packages from the Aminet archives
( <http://www.aminet.net/~aminet/> ):
.Sp
.Vb 3
\&        ixemul\-bin
\&        ixemul\-env\-bin
\&        pdksh\-bin
.Ve
.Sp
Note also that this is a minimum setup; you might want to add other
packages of \fB\s-1ADE\s0\fR (the \fIAmiga Developers Environment\fR).
.IP "\fBVersion of Amiga \s-1OS\s0\fR" 6
.IX Item "Version of Amiga OS"
You need at the very least AmigaOS version 2.0. Recommended is version 3.1.
.SS "Starting Perl programs under AmigaOS"
.IX Subsection "Starting Perl programs under AmigaOS"
Start your Perl program \fIfoo\fR with arguments \f(CW\*(C`arg1 arg2 arg3\*(C'\fR the
same way as on any other platform, by
.PP
.Vb 1
\&        perl foo arg1 arg2 arg3
.Ve
.PP
If you want to specify perl options \f(CW\*(C`\-my_opts\*(C'\fR to the perl itself (as
opposed to your program), use
.PP
.Vb 1
\&        perl \-my_opts foo arg1 arg2 arg3
.Ve
.PP
Alternately, you can try to get a replacement for the system's \fBExecute\fR
command that honors the #!/usr/bin/perl syntax in scripts and set the s\-Bit
of your scripts. Then you can invoke your scripts like under \s-1UNIX\s0 with
.PP
.Vb 1
\&        foo arg1 arg2 arg3
.Ve
.PP
(Note that having *nixish full path to perl \fI/usr/bin/perl\fR is not
necessary, \fIperl\fR would be enough, but having full path would make it
easier to use your script under *nix.)
.SS "Shortcomings of Perl under AmigaOS"
.IX Subsection "Shortcomings of Perl under AmigaOS"
Perl under AmigaOS lacks some features of perl under \s-1UNIX\s0 because of
deficiencies in the UNIX-emulation, most notably:
.IP "\(bu" 6
\&\fIfork()\fR
.IP "\(bu" 6
some features of the \s-1UNIX\s0 filesystem regarding link count and file dates
.IP "\(bu" 6
inplace operation (the \-i switch) without backup file
.IP "\(bu" 6
\&\fIumask()\fR works, but the correct permissions are only set when the file is
finally \fIclose()\fRd
.SH "INSTALLATION"
.IX Header "INSTALLATION"
Change to the installation directory (most probably \s-1ADE:\s0), and
extract the binary distribution:
.PP
lha \-mraxe x perl\-$VERSION\-bin.lha
.PP
or
.PP
tar xvzpf perl\-$VERSION\-bin.tgz
.PP
(Of course you need lha or tar and gunzip for this.)
.PP
For installation of the Unix emulation, read the appropriate docs.
.SH "Accessing documentation"
.IX Header "Accessing documentation"
.SS "Manpages for Perl on AmigaOS"
.IX Subsection "Manpages for Perl on AmigaOS"
If you have \f(CW\*(C`man\*(C'\fR installed on your system, and you installed perl
manpages, use something like this:
.PP
.Vb 3
\&        man perlfunc
\&        man less
\&        man ExtUtils.MakeMaker
.Ve
.PP
to access documentation for different components of Perl. Start with
.PP
.Vb 1
\&        man perl
.Ve
.PP
Note: You have to modify your man.conf file to search for manpages
in the /ade/lib/perl5/man/man3 directory, or the man pages for the
perl library will not be found.
.PP
Note that dot (\fI.\fR) is used as a package separator for documentation
for packages, and as usual, sometimes you need to give the section \- \f(CW3\fR
above \- to avoid shadowing by the \fI\fIless\fI\|(1) manpage\fR.
.SS "Perl \s-1HTML\s0 Documentation on AmigaOS"
.IX Subsection "Perl HTML Documentation on AmigaOS"
If you have some \s-1WWW\s0 browser available, you can build \fB\s-1HTML\s0\fR docs.
Cd to directory with \fI.pod\fR files, and do like this
.PP
.Vb 2
\&        cd /ade/lib/perl5/pod
\&        pod2html
.Ve
.PP
After this you can direct your browser the file \fIperl.html\fR in this
directory, and go ahead with reading docs.
.PP
Alternatively you may be able to get these docs prebuilt from \f(CW\*(C`CPAN\*(C'\fR.
.SS "Perl \s-1GNU\s0 Info Files on AmigaOS"
.IX Subsection "Perl GNU Info Files on AmigaOS"
Users of \f(CW\*(C`Emacs\*(C'\fR would appreciate it very much, especially with
\&\f(CW\*(C`CPerl\*(C'\fR mode loaded. You need to get latest \f(CW\*(C`pod2info\*(C'\fR from \f(CW\*(C`CPAN\*(C'\fR,
or, alternately, prebuilt info pages.
.SS "Perl LaTeX Documentation on AmigaOS"
.IX Subsection "Perl LaTeX Documentation on AmigaOS"
Can be constructed using \f(CW\*(C`pod2latex\*(C'\fR.
.SH "BUILDING PERL ON AMIGAOS"
.IX Header "BUILDING PERL ON AMIGAOS"
Here we discuss how to build Perl under AmigaOS.
.SS "Build Prerequisites for Perl on AmigaOS"
.IX Subsection "Build Prerequisites for Perl on AmigaOS"
You need to have the latest \fBixemul\fR (Unix emulation for Amiga)
from Aminet.
.SS "Getting the Perl Source for AmigaOS"
.IX Subsection "Getting the Perl Source for AmigaOS"
You can either get the latest perl-for-amiga source from Ninemoons
and extract it with:
.PP
.Vb 1
\&  tar xvzpf perl\-$VERSION\-src.tgz
.Ve
.PP
or get the official source from \s-1CPAN:\s0
.PP
.Vb 1
\&  http://www.cpan.org/src/5.0
.Ve
.PP
Extract it like this
.PP
.Vb 1
\&  tar xvzpf perl\-$VERSION.tar.gz
.Ve
.PP
You will see a message about errors while extracting \fIConfigure\fR. This
is normal and expected. (There is a conflict with a similarly-named file
\&\fIconfigure\fR, but it causes no harm.)
.SS "Making Perl on AmigaOS"
.IX Subsection "Making Perl on AmigaOS"
Remember to use a hefty wad of stack (I use 2000000)
.PP
.Vb 1
\&  sh configure.gnu \-\-prefix=/gg
.Ve
.PP
Now type
.PP
.Vb 1
\&  make depend
.Ve
.PP
Now!
.PP
.Vb 1
\&  make
.Ve
.SS "Testing Perl on AmigaOS"
.IX Subsection "Testing Perl on AmigaOS"
Now run
.PP
.Vb 1
\&  make test
.Ve
.PP
Some tests will be skipped because they need the \fIfork()\fR function:
.PP
\&\fIio/pipe.t\fR, \fIop/fork.t\fR, \fIlib/filehand.t\fR, \fIlib/open2.t\fR, \fIlib/open3.t\fR, 
\&\fIlib/io_pipe.t\fR, \fIlib/io_sock.t\fR
.SS "Installing the built Perl on AmigaOS"
.IX Subsection "Installing the built Perl on AmigaOS"
Run
.PP
.Vb 1
\&  make install
.Ve
.SH "PERL 5.8.0 BROKEN IN AMIGAOS"
.IX Header "PERL 5.8.0 BROKEN IN AMIGAOS"
As told above, Perl 5.6.1 was still good in AmigaOS, as was 5.7.2.
After Perl 5.7.2 (change #11423, see the Changes file, and the file
pod/perlhack.pod for how to get the individual changes) Perl dropped
its internal support for \fIvfork()\fR, and that was very probably the step
that broke AmigaOS (since the ixemul library has only vfork).  
The build finally fails when the ext/DynaLoader is being built, and
\&\s-1PERL\s0 ends up as \*(L"0\*(R" in the produced Makefile, trying to run \*(L"0\*(R" does
not quite work.  Also, executing miniperl in backticks seems to
generate nothing: very probably related to the (v)fork problems.
\&\fBFixing the breakage requires someone quite familiar with the ixemul
library, and how one is supposed to run external commands in AmigaOS
without \f(BIfork()\fB.\fR
.SH "AUTHORS"
.IX Header "AUTHORS"
Norbert Pueschel, pueschel@imsdd.meb.uni\-bonn.de
Jan-Erik Karlsson, trg@privat.utfors.se
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1).
