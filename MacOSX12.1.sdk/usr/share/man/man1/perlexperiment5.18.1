.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLEXPERIMENT 1"
.TH PERLEXPERIMENT 1 "2014-09-30" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlexperiment \- A listing of experimental features in Perl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document lists the current and past experimental features in the perl
core. Although all of these are documented with their appropriate topics,
this succinct listing gives you an overview and basic facts about their
status.
.PP
So far we've merely tried to find and list the experimental features and infer
their inception, versions, etc. There's a lot of speculation here.
.SS "Current experiments"
.IX Subsection "Current experiments"
.IP "\-Dusemultiplicity \-Duseithreads" 8
.IX Item "-Dusemultiplicity -Duseithreads"
Introduced in Perl 5.6.0
.IP "Long Doubles Still Don't Work In Solaris" 8
.IX Item "Long Doubles Still Don't Work In Solaris"
Introduced in Perl 5.7.0
.ie n .IP """our"" can now have an experimental optional attribute ""unique""" 8
.el .IP "\f(CWour\fR can now have an experimental optional attribute \f(CWunique\fR" 8
.IX Item "our can now have an experimental optional attribute unique"
Introduced in Perl 5.8.0
.Sp
Deprecated in Perl 5.10.0
.IP "Linux abstract Unix domain sockets" 8
.IX Item "Linux abstract Unix domain sockets"
Introduced in Perl 5.9.2
.Sp
See also Socket
.IP "Pod::HTML2Pod" 8
.IX Item "Pod::HTML2Pod"
.PD 0
.IP "Pod::PXML" 8
.IX Item "Pod::PXML"
.IP "The <:pop> \s-1IO\s0 pseudolayer" 8
.IX Item "The <:pop> IO pseudolayer"
.PD
See also perlrun
.IP "The <:win32> \s-1IO\s0 pseudolayer" 8
.IX Item "The <:win32> IO pseudolayer"
See also perlrun
.IP "\s-1MLDBM\s0" 8
.IX Item "MLDBM"
See also perldsc
.IP "internal functions with M flag" 8
.IX Item "internal functions with M flag"
See also perlguts
.IP "lex_start \s-1API\s0" 8
.IX Item "lex_start API"
Introduced in Perl 5.13.7
.ie n .IP "internal \s-1API\s0 for ""%^H""" 8
.el .IP "internal \s-1API\s0 for \f(CW%^H\fR" 8
.IX Item "internal API for %^H"
Introduced in Perl 5.13.7
.Sp
See also \f(CW\*(C`cophh_\*(C'\fR in perlapi.
.IP "alloccopstash" 8
.IX Item "alloccopstash"
Introduced in Perl 5.18.0
.IP "av_create_and_push" 8
.IX Item "av_create_and_push"
.PD 0
.IP "av_create_and_unshift_one" 8
.IX Item "av_create_and_unshift_one"
.IP "av_create_and_unshift_one" 8
.IX Item "av_create_and_unshift_one"
.IP "cop_store_label" 8
.IX Item "cop_store_label"
.PD
Introduced in Perl 5.16.0
.IP "PL_keyword_plugin" 8
.IX Item "PL_keyword_plugin"
.PD 0
.IP "gv_fetchmethod_*_flags" 8
.IX Item "gv_fetchmethod_*_flags"
.PD
Introduced in Perl 5.16.0
.IP "hv_iternext_flags" 8
.IX Item "hv_iternext_flags"
.PD 0
.IP "lex_bufutf8" 8
.IX Item "lex_bufutf8"
.IP "lex_discard_to" 8
.IX Item "lex_discard_to"
.IP "lex_grow_linestr" 8
.IX Item "lex_grow_linestr"
.IP "lex_next_chunk" 8
.IX Item "lex_next_chunk"
.IP "lex_peek_unichar" 8
.IX Item "lex_peek_unichar"
.IP "lex_read_space" 8
.IX Item "lex_read_space"
.IP "lex_read_to" 8
.IX Item "lex_read_to"
.IP "lex_read_unichar" 8
.IX Item "lex_read_unichar"
.IP "lex_stuff_pv" 8
.IX Item "lex_stuff_pv"
.IP "lex_stuff_pvn" 8
.IX Item "lex_stuff_pvn"
.IP "lex_stuff_pvs" 8
.IX Item "lex_stuff_pvs"
.IP "lex_stuff_sv" 8
.IX Item "lex_stuff_sv"
.IP "lex_unstuff" 8
.IX Item "lex_unstuff"
.IP "op_scope" 8
.IX Item "op_scope"
.IP "op_lvalue" 8
.IX Item "op_lvalue"
.IP "parse_fullstmt" 8
.IX Item "parse_fullstmt"
.IP "parse_stmtseq" 8
.IX Item "parse_stmtseq"
.IP "PL_parser\->bufend" 8
.IX Item "PL_parser->bufend"
.IP "PL_parser\->bufptr" 8
.IX Item "PL_parser->bufptr"
.IP "PL_parser\->linestart" 8
.IX Item "PL_parser->linestart"
.IP "PL_parser\->linestr" 8
.IX Item "PL_parser->linestr"
.IP "Perl_signbit" 8
.IX Item "Perl_signbit"
.IP "pad_findmy" 8
.IX Item "pad_findmy"
.IP "sv_utf8_decode" 8
.IX Item "sv_utf8_decode"
.IP "sv_utf8_downgrade" 8
.IX Item "sv_utf8_downgrade"
.IP "bytes_from_utf8" 8
.IX Item "bytes_from_utf8"
.IP "bytes_to_utf8" 8
.IX Item "bytes_to_utf8"
.IP "utf8_to_bytes" 8
.IX Item "utf8_to_bytes"
.IP "Lvalue subroutines" 8
.IX Item "Lvalue subroutines"
.PD
Introduced in Perl 5.6.0
.Sp
See also perlsub
.ie n .IP "There is an ""installhtml"" target in the Makefile." 8
.el .IP "There is an \f(CWinstallhtml\fR target in the Makefile." 8
.IX Item "There is an installhtml target in the Makefile."
.PD 0
.IP "Unicode in Perl on \s-1EBCDIC\s0" 8
.IX Item "Unicode in Perl on EBCDIC"
.ie n .IP """(?{code})""" 8
.el .IP "\f(CW(?{code})\fR" 8
.IX Item "(?{code})"
.PD
See also perlre
.ie n .IP """(??{ code })""" 8
.el .IP "\f(CW(??{ code })\fR" 8
.IX Item "(??{ code })"
See also perlre
.ie n .IP "Smart match (""~~"")" 8
.el .IP "Smart match (\f(CW~~\fR)" 8
.IX Item "Smart match (~~)"
Introduced in Perl 5.10.0
.Sp
Modified in Perl 5.10.1, 5.12.0
.ie n .IP "Lexical $_" 8
.el .IP "Lexical \f(CW$_\fR" 8
.IX Item "Lexical $_"
Introduced in Perl 5.10.0
.IP "Backtracking control verbs" 8
.IX Item "Backtracking control verbs"
\&\f(CW\*(C`(*ACCEPT)\*(C'\fR
.Sp
Introduced in: Perl 5.10
.Sp
See also: \*(L"Special Backtracking Control Verbs\*(R" in perlre
.IP "Code expressions, conditional expressions, and independent expressions in regexes" 8
.IX Item "Code expressions, conditional expressions, and independent expressions in regexes"
.PD 0
.IP "gv_try_downgrade" 8
.IX Item "gv_try_downgrade"
.PD
See also perlintern
.IP "Experimental Support for Sun Studio Compilers for Linux \s-1OS\s0" 8
.IX Item "Experimental Support for Sun Studio Compilers for Linux OS"
See also perllinux
.IP "Pluggable keywords" 8
.IX Item "Pluggable keywords"
See \*(L"PL_keyword_plugin\*(R" in perlapi for the mechanism.
.Sp
Introduced in: Perl 5.11.2
.IP "Array and hash container functions accept references" 8
.IX Item "Array and hash container functions accept references"
Introduced in Perl 5.14.0
.IP "Lexical subroutines" 8
.IX Item "Lexical subroutines"
Introduced in: Perl 5.18
.Sp
See also: \*(L"Lexical Subroutines\*(R" in perlsub
.IP "Regular Expression Set Operations" 8
.IX Item "Regular Expression Set Operations"
Introduced in: Perl 5.18
.Sp
See also: \*(L"Extended Bracketed Character Classes\*(R" in perlrecharclass
.SS "Accepted features"
.IX Subsection "Accepted features"
These features were so wildly successful and played so well with others that
we decided to remove their experimental status and admit them as full, stable
features in the world of Perl, lavishing all the benefits and luxuries thereof. 
They are also awarded +5 Stability and +3 Charisma.
.ie n .IP "The ""\eN"" regex character class" 8
.el .IP "The \f(CW\eN\fR regex character class" 8
.IX Item "The N regex character class"
The \f(CW\*(C`\eN\*(C'\fR character class, not to be confused with the named character
sequence \f(CW\*(C`\eN{NAME}\*(C'\fR, denotes any non-newline character in a regular
expression.
.Sp
Introduced in: Perl 5.12
.IP "\fIfork()\fR emulation" 8
.IX Item "fork() emulation"
Introduced in Perl 5.6.1
.Sp
See also perlfork
.IP "\s-1DB\s0 module" 8
.IX Item "DB module"
Introduced in Perl 5.6.0
.Sp
See also perldebug, perldebtut
.IP "Weak references" 8
.IX Item "Weak references"
Introduced in Perl 5.6.0
.IP "Internal file glob" 8
.IX Item "Internal file glob"
Introduced in Perl 5.6.0
.IP "die accepts a reference" 8
.IX Item "die accepts a reference"
Introduced in Perl 5.005
.IP "64\-bit support" 8
.IX Item "64-bit support"
Introduced in Perl 5.005
.SS "Removed features"
.IX Subsection "Removed features"
These features are no longer considered experimental and their functionality
has disappeared. It's your own fault if you wrote production programs using
these features after we explicitly told you not to (see perlpolicy).
.ie n .IP """legacy""" 8
.el .IP "\f(CWlegacy\fR" 8
.IX Item "legacy"
The experimental \f(CW\*(C`legacy\*(C'\fR pragma was swallowed by the \f(CW\*(C`feature\*(C'\fR pragma.
.Sp
Introduced in: 5.11.2
.Sp
Removed in: 5.11.3
.IP "Assertions" 8
.IX Item "Assertions"
The \f(CW\*(C`\-A\*(C'\fR command line switch
.Sp
Introduced in Perl 5.9.0
.Sp
Removed in Perl 5.9.5
.IP "Test::Harness::Straps" 8
.IX Item "Test::Harness::Straps"
Moved from Perl 5.10.1 to \s-1CPAN\s0
.IP "GetOpt::Long Options can now take multiple values at once (experimental)" 8
.IX Item "GetOpt::Long Options can now take multiple values at once (experimental)"
\&\f(CW\*(C`Getopt::Long\*(C'\fR upgraded to version 2.35
.Sp
Removed in Perl 5.8.8
.IP "The pseudo-hash data type" 8
.IX Item "The pseudo-hash data type"
Introduced in Perl 5.6.0
.Sp
Removed in Perl 5.9.0
.IP "5.005\-style threading" 8
.IX Item "5.005-style threading"
Introduced in Perl 5.005
.Sp
Removed in Perl 5.10
.IP "perlcc" 8
.IX Item "perlcc"
Introduced in Perl 5.005
.Sp
Moved from Perl 5.9.0 to \s-1CPAN\s0
.SH "AUTHORS"
.IX Header "AUTHORS"
brian d foy \f(CW\*(C`<brian.d.foy@gmail.com>\*(C'\fR
.PP
Se\*'bastien Aperghis-Tramoni \f(CW\*(C`<saper@cpan.org>\*(C'\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010, brian d foy \f(CW\*(C`<brian.d.foy@gmail.com>\*(C'\fR
.SH "LICENSE"
.IX Header "LICENSE"
You can use and redistribute this document under the same terms as Perl
itself.
