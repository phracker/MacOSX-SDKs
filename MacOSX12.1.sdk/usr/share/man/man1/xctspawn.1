.\" man page for xctspawn
.\" Copyright (c) 2021 Apple Inc.  All rights reserved.
.TH xctspawn 1 2021 "Apple Inc."

.SH NAME
.B xctspawn
\- Command line utility to execute XCTest unit and UI tests locally on device.

.SH SYNOPSIS
\fBxctspawn\fR \fI/path/to/test_run_file.xctestrun\fR [options]

.SH DESCRIPTION
To run your tests, point the tool at the xctestrun file sitting alongside your built tests. The tool will execute the tests and generate an Xcode result bundle containing the test results (pass/fail/skipped/xfail status, activities, attachments, crash reports, etc.). Note that the tests must be built for the platform you are running them on.
.PP
If this tool is interrupted via SIGINT while tests are still executing, it will still generate a result bundle containing the test results that have been produced so far.

.SH OPTIONS
.TP
\fB\-\-result\-bundle\-path\fR \fI/path/to/generated_result_bundle.xcresult\fR
Location that the generated result bundle should be placed. By default, the result bundle is emitted to the current working directory.
.TP
\fB\-\-only\-test\-configuration\fR \fIconfiguration\fR
Constrains testing by specifying test configurations to include, and excluding other test configurations.
.TP
\fB\-\-skip\-test\-configuration\fR \fIconfiguration\fR
Constrains testing by specifying test configurations to exclude, but including other test configurations.
.TP
\fB\-\-only\-testing\fR \fItest identifier\fR
Constrains testing by specifying tests to include, and excluding other tests. The test identifier takes the form `TestTargetName[/TestClassName][/TestMethodName]`, e.g. `MyTestTarget/MyTestClass/testFoo` (ObjC) or `MyTestTarget/MyTestClass/testFoo()` (Swift).
.TP
\fB\-\-skip\-testing\fR \fItest identifier\fR
Constrains testing by specifying tests to exclude, but including other tests. The test identifier takes the form `TestTargetName[/TestClassName][/TestMethodName]`, e.g. `MyTestTarget/MyTestClass/testFoo` (ObjC) or `MyTestTarget/MyTestClass/testFoo()` (Swift).
.TP
\fB\-\-parallel\-testing\-enabled\fR \fIYES|NO\fR
Overrides the per-target setting in the scheme/test plan.
.TP
\fB\-\-parallel\-testing\-worker\-count\fR \fInumber\fR
The exact number of test runners that will be spawned during parallel testing.
.TP
\fB\-\-parallel\-testing\-maximum\-worker\-count\fR \fInumber\fR
The maximum number of test runners that will be spawned during parallel testing.
.TP
\fB\-\-test\-timeouts\-enabled\fR \fIYES|NO\fR
Enable or disable test timeout behavior.
.TP
\fB\-\-default\-test\-execution\-time\-allowance\fR \fIseconds\fR
The default execution time an individual test is given to execute, if test timeouts are enabled.
.TP
\fB\-\-maximum\-test\-execution\-time\-allowance\fR \fIseconds\fR
The maximum execution time an individual test is given to execute, regardless of the test's preferred allowance.
.TP
\fB\-\-trace\-collection\-enabled\fR \fIYES|NO\fR
Whether to collect a ktrace/artrace file during the execution of performance tests.
.TP
\fB\-\-enable\-performance\-tests\-diagnostics\fR \fIYES|NO\fR
Whether to collect a memgraphset file during the execution of performance tests.
.TP
\fB\-\-performance\-test\-configuration\fR \fI/path/to/performance_test_configuration\fR
The path to a performance test configuration file that controls how performance tests are executed.
.TP
\fB\-\-test\-iterations\fR \fInumber\fR
The number of times to execute each test, or, if either \fB-\-run\-tests\-until\-failure\fR or \fB\-\-retry\-tests\-on\-failure\fR are specified, the maximum number of times each test will be executed.
.TP
\fB\-\-run\-tests\-until\-failure\fR
Run each test until it fails, up until a maximum number of iterations. The maximum defaults to 100, but can be customized via the \fB\-\-test\-iterations\fR option.
.TP
\fB\-\-retry\-tests\-on\-failure\fR
Re-run a failing test until it succeeds, up until a maximum number of iterations. The maximum defaults to 3, but can be customized via the \fB\-\-test\-iterations\fR option.
.TP
\fB\-\-test\-repetition\-relaunch\-enabled\fR \fIYES|NO\fR
Enable or disable tests repeating in a new process for each repetition. Must be used in conjunction with \fB\-\-test\-iterations\fR, \fB\-\-retry\-tests\-on\-failure\fR, or \fB\-\-run\-tests\-until\-failure\fR. If not specified, tests will repeat in the same process.
.TP
\fB\-\-arg\fR \fIvalue\fR
A command-line argument to supply to any test runner process that is launched during test execution. Can be specified multiple times.
.TP
\fB\-\-env\fR \fIvalue\fR
A key-value pair of the form EnvVar=Value to supply as an environment variable to any test runner process that is launched during test execution.
