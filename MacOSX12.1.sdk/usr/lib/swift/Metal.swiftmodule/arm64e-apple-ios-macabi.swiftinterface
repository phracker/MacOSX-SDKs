// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.46.202 clang-1300.0.29.30)
// swift-module-flags: -target arm64e-apple-ios15.2-macabi -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftMetal -swift-version 5 -enforce-exclusivity=checked -O -module-name Metal
@_exported import Metal
import Swift
import _Concurrency
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLBlitCommandEncoder {
  public func fill(buffer: Metal.MTLBuffer, range: Swift.Range<Swift.Int>, value: Swift.UInt8)
  @available(macOS 10.14, iOS 12.0, tvOS 12.0, *)
  public func resetCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, range: Swift.Range<Swift.Int>)
  @available(macOS 10.14, iOS 12.0, tvOS 12.0, *)
  public func copyIndirectCommandBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, sourceRange: Swift.Range<Swift.Int>, destination: Metal.MTLIndirectCommandBuffer, destinationIndex: Swift.Int)
  @available(macOS 10.14, iOS 12.0, tvOS 12.0, *)
  public func optimizeIndirectCommandBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, range: Swift.Range<Swift.Int>)
  @available(macOS 11.0, iOS 14.0, tvOS 14.0, *)
  public func resolveCounters(_ sampleBuffer: Metal.MTLCounterSampleBuffer, range: Swift.Range<Swift.Int>, destinationBuffer: Metal.MTLBuffer, destinationOffset: Swift.Int)
}
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLBuffer {
  @available(macOS 10.11, macCatalyst 14.0, *)
  @available(iOS, unavailable)
  @available(tvOS, unavailable)
  public func didModifyRange(_ range: Swift.Range<Swift.Int>)
  @available(macOS 10.12, iOS 10.0, tvOS 10.0, *)
  public func addDebugMarker(_ marker: Swift.String, range: Swift.Range<Swift.Int>)
}
@available(macOS 11.0, iOS 14.0, tvOS 14.0, *)
public struct MTLLogContainer : Swift.Sequence {
  public typealias Element = Metal.MTLFunctionLog
  public struct Iterator : Swift.IteratorProtocol {
    public mutating func next() -> Metal.MTLLogContainer.Element?
    public typealias Element = Metal.MTLFunctionLog
  }
  public func makeIterator() -> Metal.MTLLogContainer.Iterator
}
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLCommandBuffer {
  @available(macOS 11.0, iOS 14.0, tvOS 14.0, *)
  public var logs: Metal.MTLLogContainer {
    get
  }
}
@available(macOS 11.0, iOS 14.0, *)
@available(tvOS, unavailable)
extension Metal.MTLAccelerationStructureCommandEncoder {
  public func useResources(_ resources: [Metal.MTLResource], usage: Metal.MTLResourceUsage)
  public func useHeaps(_ heaps: [Metal.MTLHeap])
}
@available(macOS 11.0, iOS 14.0, *)
@available(tvOS, unavailable)
extension Metal.MTLVisibleFunctionTable {
  public func setFunctions(_ functions: [Metal.MTLFunctionHandle?], range: Swift.Range<Swift.Int>)
}
@available(macOS 11.0, iOS 14.0, *)
@available(tvOS, unavailable)
extension Metal.MTLIntersectionFunctionTable {
  public func setBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setFunctions(_ functions: [Metal.MTLFunctionHandle?], range: Swift.Range<Swift.Int>)
  public func setVisibleFunctionTables(_ functionTables: [Metal.MTLVisibleFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
}
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLComputeCommandEncoder {
  @available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
  public func useResources(_ resources: [Metal.MTLResource], usage: Metal.MTLResourceUsage)
  @available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
  public func useHeaps(_ heaps: [Metal.MTLHeap])
  public func setBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  public func setSamplerStates(_ samplers: [Metal.MTLSamplerState?], lodMinClamps: [Swift.Float], lodMaxClamps: [Swift.Float], range: Swift.Range<Swift.Int>)
  @available(macOS 10.14, iOS 12.0, tvOS 12.0, *)
  public func memoryBarrier(resources: [Metal.MTLResource])
  @available(iOS 13.0, tvOS 13.0, macOS 11.0, macCatalyst 14.0, *)
  @_alwaysEmitIntoClient public func executeCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, range: Swift.Range<Swift.Int>) {
        __executeCommands(in: buffer, with: NSRange(location: range.lowerBound, length: range.count))
    }
  @available(iOS 13.0, tvOS 13.0, macOS 11.0, macCatalyst 14.0, *)
  @_alwaysEmitIntoClient public func executeCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, indirectBuffer indirectRangeBuffer: Metal.MTLBuffer, offset: Swift.Int) {
        __executeCommands(in: buffer, indirectBuffer: indirectRangeBuffer, indirectBufferOffset: offset)
    }
  @available(macOS 11.0, iOS 14.0, *)
  @available(tvOS, unavailable)
  public func setVisibleFunctionTables(_ visibleFunctionTables: [Metal.MTLVisibleFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
  @available(macOS 11.0, iOS 14.0, *)
  @available(tvOS, unavailable)
  public func setIntersectionFunctionTables(_ intersectionFunctionTables: [Metal.MTLIntersectionFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
}
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLDevice {
  @available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
  public func getDefaultSamplePositions(sampleCount: Swift.Int) -> [Metal.MTLSamplePosition]
  @available(macOS 11.0, iOS 14.0, tvOS 14.0, *)
  public func sampleTimestamps() -> (cpu: Metal.MTLTimestamp, gpu: Metal.MTLTimestamp)
  @_alwaysEmitIntoClient public func makeLibrary(data: Dispatch.DispatchData) throws -> Metal.MTLLibrary {
        return try makeLibrary(data: data as __DispatchData)
    }
}
@available(macOS 11.0, iOS 14.0, tvOS 14.0, *)
extension Metal.MTLCounterSampleBuffer {
  @available(macOS 11.0, iOS 14.0, tvOS 14.0, *)
  public func resolveCounterRange(_ range: Swift.Range<Swift.Int>) throws -> Foundation.Data?
}
@available(macOS 10.12, iOS 10.0, tvOS 10.0, *)
extension Metal.MTLFunctionConstantValues {
  public func setConstantValues(_ values: Swift.UnsafeRawPointer, type: Metal.MTLDataType, range: Swift.Range<Swift.Int>)
}
@available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
extension Metal.MTLArgumentEncoder {
  public func setBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  @available(macOS 10.14, iOS 13.0, tvOS 13.0, *)
  public func setRenderPipelineStates(_ pipelines: [Metal.MTLRenderPipelineState?], range: Swift.Range<Swift.Int>)
  @available(iOS 13.0, tvOS 13.0, macOS 11.0, macCatalyst 14.0, *)
  @_alwaysEmitIntoClient public func setComputePipelineStates(_ pipelines: [Metal.MTLComputePipelineState?], range: Swift.Range<Swift.Int>) {
        __setComputePipelineStates(pipelines, with: NSRange(location: range.lowerBound, length: range.count))
    }
  @available(macOS 10.14, iOS 12.0, tvOS 12.0, *)
  public func setIndirectCommandBuffers(_ buffers: [Metal.MTLIndirectCommandBuffer?], range: Swift.Range<Swift.Int>)
  @available(macOS 11.0, iOS 14.0, *)
  @available(tvOS, unavailable)
  public func setVisibleFunctionTables(_ visibleFunctionTables: [Metal.MTLVisibleFunctionTable?], range: Swift.Range<Swift.Int>)
  @available(macOS 11.0, iOS 14.0, *)
  @available(tvOS, unavailable)
  public func setIntersectionFunctionTables(_ intersectionFunctionTables: [Metal.MTLIntersectionFunctionTable?], range: Swift.Range<Swift.Int>)
}
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLRenderCommandEncoder {
  @available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
  public func useResources(_ resources: [Metal.MTLResource], usage: Metal.MTLResourceUsage)
  @available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
  public func useHeaps(_ heaps: [Metal.MTLHeap])
  @available(macOS 10.13, iOS 12.0, tvOS 14.5, *)
  public func setViewports(_ viewports: [Metal.MTLViewport])
  @available(macOS 10.13, iOS 12.0, tvOS 14.5, *)
  public func setScissorRects(_ scissorRects: [Metal.MTLScissorRect])
  public func setVertexBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setVertexTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setVertexSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  public func setVertexSamplerStates(_ samplers: [Metal.MTLSamplerState?], lodMinClamps: [Swift.Float], lodMaxClamps: [Swift.Float], range: Swift.Range<Swift.Int>)
  public func setFragmentBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setFragmentTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setFragmentSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  public func setFragmentSamplerStates(_ samplers: [Metal.MTLSamplerState?], lodMinClamps: [Swift.Float], lodMaxClamps: [Swift.Float], range: Swift.Range<Swift.Int>)
  @available(iOS 11.0, macOS 11.0, tvOS 14.5, macCatalyst 14.0, *)
  @_alwaysEmitIntoClient public func setTileBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>) {
        __setTileBuffers(buffers, offsets: offsets, with: NSRange(location: range.lowerBound, length: range.count))
    }
  @available(iOS 11.0, macOS 11.0, tvOS 14.5, macCatalyst 14.0, *)
  @_alwaysEmitIntoClient public func setTileTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>) {
        __setTileTextures(textures, with: NSRange(location: range.lowerBound, length: range.count))
    }
  @available(iOS 11.0, macOS 11.0, tvOS 14.5, macCatalyst 14.0, *)
  @_alwaysEmitIntoClient public func setTileSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>) {
        __setTileSamplerStates(samplers, with: NSRange(location: range.lowerBound, length: range.count))
    }
  @available(iOS 11.0, macOS 11.0, tvOS 14.5, macCatalyst 14.0, *)
  @_alwaysEmitIntoClient public func setTileSamplerStates(_ samplers: [Metal.MTLSamplerState?], lodMinClamps: [Swift.Float], lodMaxClamps: [Swift.Float], range: Swift.Range<Swift.Int>) {
        __setTileSamplerStates(samplers, lodMinClamps: lodMinClamps, lodMaxClamps: lodMaxClamps, with: NSRange(location: range.lowerBound, length: range.count))
    }
  @available(macOS 10.14, macCatalyst 14.0, *)
  @available(iOS, unavailable)
  @available(tvOS, unavailable)
  public func memoryBarrier(resources: [Metal.MTLResource], after: Metal.MTLRenderStages, before: Metal.MTLRenderStages)
  @available(macOS 10.14, iOS 12.0, tvOS 12.0, *)
  public func executeCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, range: Swift.Range<Swift.Int>)
  @available(macOS 10.14, iOS 13.0, tvOS 13.0, *)
  @_alwaysEmitIntoClient public func executeCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, indirectBuffer indirectRangeBuffer: Metal.MTLBuffer, offset: Swift.Int) {
        __executeCommands(in: buffer, indirectBuffer: indirectRangeBuffer, indirectBufferOffset: offset)
    }
  @available(macOS 12.0, iOS 15.0, *)
  @available(tvOS, unavailable)
  public func setVertexVisibleFunctionTables(_ functionTables: [Metal.MTLVisibleFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
  @available(macOS 12.0, iOS 15.0, *)
  @available(tvOS, unavailable)
  public func setFragmentVisibleFunctionTables(_ functionTables: [Metal.MTLVisibleFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
  @available(macOS 12.0, iOS 15.0, *)
  @available(tvOS, unavailable)
  public func setTileVisibleFunctionTables(_ functionTables: [Metal.MTLVisibleFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
  @available(macOS 12.0, iOS 15.0, *)
  @available(tvOS, unavailable)
  public func setVertexIntersectionFunctionTables(_ functionTables: [Metal.MTLIntersectionFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
  @available(macOS 12.0, iOS 15.0, *)
  @available(tvOS, unavailable)
  public func setFragmentIntersectionFunctionTables(_ functionTables: [Metal.MTLIntersectionFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
  @available(macOS 12.0, iOS 15.0, *)
  @available(tvOS, unavailable)
  public func setTileIntersectionFunctionTables(_ functionTables: [Metal.MTLIntersectionFunctionTable?], bufferRange: Swift.Range<Swift.Int>)
}
@available(macOS 10.14, iOS 12.0, tvOS 12.0, *)
extension Metal.MTLIndirectCommandBuffer {
  public func reset(_ range: Swift.Range<Swift.Int>)
  @available(macOS, unavailable)
  @available(iOS, introduced: 13.0, deprecated: 14.0, renamed: "indirectComputeCommandAt")
  @available(tvOS, introduced: 13.0, deprecated: 14.0, renamed: "indirectComputeCommandAt")
  @_alwaysEmitIntoClient public func indirectComputeCommand(at Index: Swift.Int) -> Metal.MTLIndirectComputeCommand {
        indirectComputeCommandAt(Index)
    }
}
@available(macOS 11.0, iOS 13.0, tvOS 13.0, *)
extension Metal.MTLIndirectComputeCommand {
  @available(macOS, unavailable)
  @available(iOS, introduced: 13.0, deprecated: 14.0, renamed: "setStageInRegion(_:)")
  @available(tvOS, introduced: 13.0, deprecated: 14.0, renamed: "setStageInRegion(_:)")
  @_alwaysEmitIntoClient public func setStageIn(_ region: Metal.MTLRegion) {
        setStageInRegion(region)
    }
  @available(macOS, unavailable)
  @available(iOS, introduced: 13.0, deprecated: 14.0, renamed: "setThreadgroupMemoryLength(_:index:)")
  @available(tvOS, introduced: 13.0, deprecated: 14.0, renamed: "setThreadgroupMemoryLength(_:index:)")
  @_alwaysEmitIntoClient public func setThreadgroupMemoryLength(_ length: Swift.Int, at index: Swift.Int) {
        setThreadgroupMemoryLength(length, index: index)
    }
}
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLRenderPassDescriptor {
  @available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
  public func setSamplePositions(_ positions: [Metal.MTLSamplePosition])
  @available(macOS 10.13, iOS 11.0, tvOS 11.0, *)
  public func getSamplePositions() -> [Metal.MTLSamplePosition]
}
@available(macOS 10.11, iOS 8.0, tvOS 8.0, *)
extension Metal.MTLTexture {
  @available(macOS 10.11, iOS 9.0, tvOS 9.0, *)
  public func makeTextureView(pixelFormat: Metal.MTLPixelFormat, textureType: Metal.MTLTextureType, levels levelRange: Swift.Range<Swift.Int>, slices sliceRange: Swift.Range<Swift.Int>) -> Metal.MTLTexture?
  @available(macOS 10.15, iOS 13.0, tvOS 13.0, *)
  public func makeTextureView(pixelFormat: Metal.MTLPixelFormat, textureType: Metal.MTLTextureType, levels levelRange: Swift.Range<Swift.Int>, slices sliceRange: Swift.Range<Swift.Int>, swizzle: Metal.MTLTextureSwizzleChannels) -> Metal.MTLTexture?
}
@available(macOS 10.15.4, macCatalyst 13.4, iOS 13.0, *)
extension Metal.MTLRasterizationRateSampleArray {
  public subscript(index: Swift.Int) -> Swift.Float {
    get
    set
  }
}
@available(macOS 10.15.4, macCatalyst 13.4, iOS 13.0, *)
extension Metal.MTLRasterizationRateLayerDescriptor {
  convenience public init(horizontal: [Swift.Float], vertical: [Swift.Float])
}
@available(macOS 10.15.4, macCatalyst 13.4, iOS 13.0, *)
extension Metal.MTLRasterizationRateMapDescriptor {
  convenience public init(screenSize: Metal.MTLSize, label: Swift.String? = nil)
  convenience public init(screenSize: Metal.MTLSize, layer: Metal.MTLRasterizationRateLayerDescriptor, label: Swift.String? = nil)
  convenience public init(screenSize: Metal.MTLSize, layers: [Metal.MTLRasterizationRateLayerDescriptor], label: Swift.String? = nil)
}
