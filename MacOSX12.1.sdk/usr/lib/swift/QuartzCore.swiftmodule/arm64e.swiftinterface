// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.46.202 clang-1300.0.29.30)
// swift-module-flags: -target arm64e-apple-macos12.1 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftQuartzCore -swift-version 5 -enforce-exclusivity=checked -O -module-name QuartzCore
import Foundation
@_exported import QuartzCore
import Swift
import _Concurrency
@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
extension QuartzCore.CAFrameRateRange {
  public init(minimum: Swift.Float, maximum: Swift.Float, preferred: Swift.Float? = nil)
  public var preferred: Swift.Float? {
    get
    set(rate)
  }
}
@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
extension QuartzCore.CAFrameRateRange : Swift.Equatable {
  public static func == (lhs: QuartzCore.CAFrameRateRange, rhs: QuartzCore.CAFrameRateRange) -> Swift.Bool
}
extension QuartzCore.CATransform3D : Swift._ObjectiveCBridgeable {
  public func _bridgeToObjectiveC() -> Foundation.NSValue
  public static func _forceBridgeFromObjectiveC(_ source: Foundation.NSValue, result: inout QuartzCore.CATransform3D?)
  public static func _conditionallyBridgeFromObjectiveC(_ source: Foundation.NSValue, result: inout QuartzCore.CATransform3D?) -> Swift.Bool
  public static func _unconditionallyBridgeFromObjectiveC(_ source: Foundation.NSValue?) -> QuartzCore.CATransform3D
  public typealias _ObjectiveCType = Foundation.NSValue
}
