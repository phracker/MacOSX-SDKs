'\" t
.\"     Title: glDeleteRenderbuffers
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLDELETERENDERBUFFER" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDeleteRenderbuffers \- delete renderbuffer objects
.SH "C SPECIFICATION"
.HP \w'void\ glDeleteRenderbuffers('u
.BI "void glDeleteRenderbuffers(GLsizei\ " "n" ", GLuint\ *" "renderbuffers" ");"
.SH "PARAMETERS"
.PP
\fIn\fR
.RS 4
Specifies the number of renderbuffer objects to be deleted\&.
.RE
.PP
\fIrenderbuffers\fR
.RS 4
A pointer to an array containing
\fIn\fR
renderbuffer objects to be deleted\&.
.RE
.SH "DESCRIPTION"
.PP

\fBglDeleteRenderbuffers\fR
deletes the
\fIn\fR
renderbuffer objects whose names are stored in the array addressed by
\fIrenderbuffers\fR\&. The name zero is reserved by the GL and is silently ignored, should it occur in
\fIrenderbuffers\fR, as are other unused names\&. Once a renderbuffer object is deleted, its name is again unused and it has no contents\&. If a renderbuffer that is currently bound to the target
\fBGL_RENDERBUFFER\fR
is deleted, it is as though
\fBglBindRenderbuffer\fR()
had been executed with a
\fItarget\fR
of
\fBGL_RENDERBUFFER\fR
and a
\fIname\fR
of zero\&.
.PP
If a renderbuffer object is attached to one or more attachment points in the currently bound framebuffer, then it as if
\fBglFramebufferRenderbuffer\fR()
had been called, with a
\fIrenderbuffer\fR
of zero for each attachment point to which this image was attached in the currently bound framebuffer\&. In other words, this renderbuffer object is first detached from all attachment ponits in the currently bound framebuffer\&. Note that the renderbuffer image is specifically
\fInot\fR
detached from any non\-bound framebuffers\&.
.SH "ERRORS"
.PP

\fBGL_INVALID_VALUE\fR
is generated if
\fIn\fR
is negative\&.
.SH "SEE ALSO"
.PP

\fBglGenRenderbuffers\fR(),
\fBglFramebufferRenderbuffer\fR(),
\fBglRenderbufferStorage\fR(),
\fBglRenderbufferStorageMultisample\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
