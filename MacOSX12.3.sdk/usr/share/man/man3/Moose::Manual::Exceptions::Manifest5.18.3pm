.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Moose::Manual::Exceptions::Manifest 3"
.TH Moose::Manual::Exceptions::Manifest 3 "2014-01-19" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Moose::Manual::Exceptions::Manifest \- Moose's Exception Types
.SH "VERSION"
.IX Header "VERSION"
version 2.1202
.SH "Moose::Exception::AccessorMustReadWrite"
.IX Header "Moose::Exception::AccessorMustReadWrite"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Cannot define an accessor name on a read\-only attribute, accessors are read/
\&write
.Ve
.SH "Moose::Exception::AddParameterizableTypeTakesParameterizableType"
.IX Header "Moose::Exception::AddParameterizableTypeTakesParameterizableType"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Type must be a Moose::Meta::TypeConstraint::Parameterizable not Foo
.Ve
.SH "Moose::Exception::AddRoleTakesAMooseMetaRoleInstance"
.IX Header "Moose::Exception::AddRoleTakesAMooseMetaRoleInstance"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role_to_be_added\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_to_be_added\fR" 4
.IX Item "$exception->role_to_be_added"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Roles must be instances of Moose::Meta::Role
.Ve
.SH "Moose::Exception::AddRoleToARoleTakesAMooseMetaRole"
.IX Header "Moose::Exception::AddRoleToARoleTakesAMooseMetaRole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->role_to_be_added\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_to_be_added\fR" 4
.IX Item "$exception->role_to_be_added"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Roles must be instances of Moose::Meta::Role
.Ve
.SH "Moose::Exception::ApplyTakesABlessedInstance"
.IX Header "Moose::Exception::ApplyTakesABlessedInstance"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->param\fR" 4
.el .IP "\fB\f(CB$exception\fB\->param\fR" 4
.IX Item "$exception->param"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass in an blessed instance
.Ve
.SH "Moose::Exception::AttachToClassNeedsAClassMOPClassInstanceOrASubclass"
.IX Header "Moose::Exception::AttachToClassNeedsAClassMOPClassInstanceOrASubclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a Class::MOP::Class instance (or a subclass)
.Ve
.SH "Moose::Exception::AttributeConflictInRoles"
.IX Header "Moose::Exception::AttributeConflictInRoles"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->second_role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->second_role\fR" 4
.IX Item "$exception->second_role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 3
\&    Role \*(AqFoo4\*(Aq has encountered an attribute conflict while being composed into
\&\*(AqBar4\*(Aq. This is a fatal error and cannot be disambiguated. The conflicting
\&attribute is named \*(Aqfoo\*(Aq.
.Ve
.SH "Moose::Exception::AttributeConflictInSummation"
.IX Header "Moose::Exception::AttributeConflictInSummation"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::AttributeName, Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->second_role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->second_role\fR" 4
.IX Item "$exception->second_role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 3
\&    We have encountered an attribute conflict with \*(Aqfoo\*(Aq during role composition
\&.  This attribute is defined in both Foo2 and Bar2. This is a fatal error and
\&cannot be disambiguated.
.Ve
.SH "Moose::Exception::AttributeExtensionIsNotSupportedInRoles"
.IX Header "Moose::Exception::AttributeExtensionIsNotSupportedInRoles"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    has \*(Aq+attr\*(Aq is not supported in roles
.Ve
.SH "Moose::Exception::AttributeIsRequired"
.IX Header "Moose::Exception::AttributeIsRequired"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`has_attribute\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`has_attribute_name\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef, has a predicate \f(CW\*(C`has_params\*(C'\fR and is
optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 5
\&    Attribute (baz) is required
\&    Attribute (bar) is required
\&    Attribute (foo_required) is required
\&    Attribute (baz) is required
\&    Attribute (foo) is required
.Ve
.SH "Moose::Exception::AttributeMustBeAnClassMOPMixinAttributeCoreOrSubclass"
.IX Header "Moose::Exception::AttributeMustBeAnClassMOPMixinAttributeCoreOrSubclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Your attribute must be an instance of Class::MOP::Mixin::AttributeCore (or a
\& subclass)
.Ve
.SH "Moose::Exception::AttributeNamesDoNotMatch"
.IX Header "Moose::Exception::AttributeNamesDoNotMatch"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute and is required.
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 2
\&    attribute_name (foo1) does not match attribute\->name (foo)
\&    attribute_name (foo) does not match attribute\->name (bar)
.Ve
.SH "Moose::Exception::AttributeValueIsNotAnObject"
.IX Header "Moose::Exception::AttributeValueIsNotAnObject"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Attribute, Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->given_value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->given_value\fR" 4
.IX Item "$exception->given_value"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method\fR" 4
.IX Item "$exception->method"
This attribute is read-only, isa Moose::Meta::Method::Delegation and is
required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Cannot delegate get_count to count because the value of foo is not an object
\& (got \*(AqARRAY(0x223f578)\*(Aq)
.Ve
.SH "Moose::Exception::AttributeValueIsNotDefined"
.IX Header "Moose::Exception::AttributeValueIsNotDefined"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Attribute, Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method\fR" 4
.IX Item "$exception->method"
This attribute is read-only, isa Moose::Meta::Method::Delegation and is
required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot delegate get_count to count because the value of foo is not defined
.Ve
.SH "Moose::Exception::AutoDeRefNeedsArrayRefOrHashRef"
.IX Header "Moose::Exception::AutoDeRefNeedsArrayRefOrHashRef"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    You cannot auto\-dereference anything other than a ArrayRef or HashRef on
\&attribute (bar)
.Ve
.SH "Moose::Exception::BadOptionFormat"
.IX Header "Moose::Exception::BadOptionFormat"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->option_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->option_name\fR" 4
.IX Item "$exception->option_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->option_value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->option_value\fR" 4
.IX Item "$exception->option_value"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    bad accessor/reader/writer/predicate/clearer format, must be a HASH ref
.Ve
.SH "Moose::Exception::BothBuilderAndDefaultAreNotAllowed"
.IX Header "Moose::Exception::BothBuilderAndDefaultAreNotAllowed"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Setting both default and builder is not allowed.
.Ve
.SH "Moose::Exception::BuilderDoesNotExist"
.IX Header "Moose::Exception::BuilderDoesNotExist"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Attribute and Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Foo does not support builder method \*(Aq_build_baz\*(Aq for attribute \*(Aqbaz\*(Aq
.Ve
.SH "Moose::Exception::BuilderMethodNotSupportedForAttribute"
.IX Header "Moose::Exception::BuilderMethodNotSupportedForAttribute"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Attribute and Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Class::MOP::Attribute does not support builder method \*(Aqfoo\*(Aq for attribute
\&\*(Aqbar\*(Aq
.Ve
.SH "Moose::Exception::BuilderMethodNotSupportedForInlineAttribute"
.IX Header "Moose::Exception::BuilderMethodNotSupportedForInlineAttribute"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class, Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->builder\fR" 4
.el .IP "\fB\f(CB$exception\fB\->builder\fR" 4
.IX Item "$exception->builder"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Test::LazyBuild::Attribute does not support builder method \*(Aq_build_fool\*(Aq for
\& attribute \*(Aqfool\*(Aq
.Ve
.SH "Moose::Exception::BuilderMustBeAMethodName"
.IX Header "Moose::Exception::BuilderMustBeAMethodName"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    builder must be a defined scalar value which is a method name
.Ve
.SH "Moose::Exception::CallingMethodOnAnImmutableInstance"
.IX Header "Moose::Exception::CallingMethodOnAnImmutableInstance"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The \*(Aqadd_method\*(Aq method cannot be called on an immutable instance
.Ve
.SH "Moose::Exception::CallingReadOnlyMethodOnAnImmutableInstance"
.IX Header "Moose::Exception::CallingReadOnlyMethodOnAnImmutableInstance"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The \*(Aqsuperclasses\*(Aq method is read\-only when called on an immutable instance
.Ve
.SH "Moose::Exception::CanExtendOnlyClasses"
.IX Header "Moose::Exception::CanExtendOnlyClasses"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You cannot inherit from a Moose Role (Bar)
.Ve
.SH "Moose::Exception::CannotAddAdditionalTypeCoercionsToUnion"
.IX Header "Moose::Exception::CannotAddAdditionalTypeCoercionsToUnion"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type_coercion_union_object\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_coercion_union_object\fR" 4
.IX Item "$exception->type_coercion_union_object"
This attribute is read-only, isa Moose::Meta::TypeCoercion::Union and is
required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot add additional type coercions to Union types
.Ve
.SH "Moose::Exception::CannotAddAsAnAttributeToARole"
.IX Header "Moose::Exception::CannotAddAsAnAttributeToARole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_class\fR" 4
.IX Item "$exception->attribute_class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot add a Moose::Meta::Class as an attribute to a role
.Ve
.SH "Moose::Exception::CannotApplyBaseClassRolesToRole"
.IX Header "Moose::Exception::CannotApplyBaseClassRolesToRole"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash and Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You can only apply base class roles to a Moose class, not a role.
.Ve
.SH "Moose::Exception::CannotAssignValueToReadOnlyAccessor"
.IX Header "Moose::Exception::CannotAssignValueToReadOnlyAccessor"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and
Moose::Exception::Role::EitherAttributeOrAttributeName.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`has_attribute\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`has_attribute_name\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef, has a predicate \f(CW\*(C`has_params\*(C'\fR and is
optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->value\fR" 4
.IX Item "$exception->value"
This attribute is read-only, isa Any and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot assign a value to a read\-only accessor
.Ve
.SH "Moose::Exception::CannotAugmentIfLocalMethodPresent"
.IX Header "Moose::Exception::CannotAugmentIfLocalMethodPresent"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::Method.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method\fR" 4
.IX Item "$exception->method"
This attribute is read-only, isa Moose::Meta::Method and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot add an augment method if a local method is already present
.Ve
.SH "Moose::Exception::CannotAugmentNoSuperMethod"
.IX Header "Moose::Exception::CannotAugmentNoSuperMethod"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You cannot augment \*(Aqfoo\*(Aq because it has no super method
.Ve
.SH "Moose::Exception::CannotAutoDereferenceTypeConstraint"
.IX Header "Moose::Exception::CannotAutoDereferenceTypeConstraint"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Attribute, Moose::Exception::Role::Instance and
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Can not auto de\-reference the type constraint \*(AqInt\*(Aq
.Ve
.SH "Moose::Exception::CannotAutoDerefWithoutIsa"
.IX Header "Moose::Exception::CannotAutoDerefWithoutIsa"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    You cannot auto\-dereference without specifying a type constraint on
\&attribute (bar)
.Ve
.SH "Moose::Exception::CannotCalculateNativeType"
.IX Header "Moose::Exception::CannotCalculateNativeType"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot calculate native type for Moose::Meta::Class::_\|_ANON_\|_::SERIAL::
.Ve
.SH "Moose::Exception::CannotCallAnAbstractBaseMethod"
.IX Header "Moose::Exception::CannotCallAnAbstractBaseMethod"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->package_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->package_name\fR" 4
.IX Item "$exception->package_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Class::MOP::Method::Generated is an abstract base class, you must provide a
\&constructor.
.Ve
.SH "Moose::Exception::CannotCallAnAbstractMethod"
.IX Header "Moose::Exception::CannotCallAnAbstractMethod"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Abstract method
.Ve
.SH "Moose::Exception::CannotCoerceAttributeWhichHasNoCoercion"
.IX Header "Moose::Exception::CannotCoerceAttributeWhichHasNoCoercion"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions,
Moose::Exception::Role::ParamsHash and
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You cannot coerce an attribute (foo) unless its type (Str) has a coercion
.Ve
.SH "Moose::Exception::CannotCoerceAWeakRef"
.IX Header "Moose::Exception::CannotCoerceAWeakRef"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You cannot have a weak reference to a coerced value on attribute (bar)
.Ve
.SH "Moose::Exception::CannotCreateHigherOrderTypeWithoutATypeParameter"
.IX Header "Moose::Exception::CannotCreateHigherOrderTypeWithoutATypeParameter"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You cannot create a Higher Order type without a type parameter
.Ve
.SH "Moose::Exception::CannotCreateMethodAliasLocalMethodIsPresent"
.IX Header "Moose::Exception::CannotCreateMethodAliasLocalMethodIsPresent"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Method, Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->aliased_method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->aliased_method_name\fR" 4
.IX Item "$exception->aliased_method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method\fR" 4
.IX Item "$exception->method"
This attribute is read-only, isa Moose::Meta::Method and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_being_applied\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_being_applied\fR" 4
.IX Item "$exception->role_being_applied"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot create a method alias if a local method of the same name exists
.Ve
.SH "Moose::Exception::CannotCreateMethodAliasLocalMethodIsPresentInClass"
.IX Header "Moose::Exception::CannotCreateMethodAliasLocalMethodIsPresentInClass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class, Moose::Exception::Role::Method,
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->aliased_method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->aliased_method_name\fR" 4
.IX Item "$exception->aliased_method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method\fR" 4
.IX Item "$exception->method"
This attribute is read-only, isa Moose::Meta::Method and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot create a method alias if a local method of the same name exists
.Ve
.SH "Moose::Exception::CannotDelegateLocalMethodIsPresent"
.IX Header "Moose::Exception::CannotDelegateLocalMethodIsPresent"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Attribute and Moose::Exception::Role::Method.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method\fR" 4
.IX Item "$exception->method"
This attribute is read-only, isa Moose::Meta::Method and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You cannot overwrite a locally defined method (full) with a delegation
.Ve
.SH "Moose::Exception::CannotDelegateWithoutIsa"
.IX Header "Moose::Exception::CannotDelegateWithoutIsa"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot delegate methods based on a Regexp without a type constraint (isa)
.Ve
.SH "Moose::Exception::CannotFindDelegateMetaclass"
.IX Header "Moose::Exception::CannotFindDelegateMetaclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot find delegate metaclass for attribute bar
.Ve
.SH "Moose::Exception::CannotFindType"
.IX Header "Moose::Exception::CannotFindType"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot find type \*(AqFoo\*(Aq, perhaps you forgot to load it
.Ve
.SH "Moose::Exception::CannotFindTypeGivenToMatchOnType"
.IX Header "Moose::Exception::CannotFindTypeGivenToMatchOnType"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->action\fR" 4
.el .IP "\fB\f(CB$exception\fB\->action\fR" 4
.IX Item "$exception->action"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->to_match\fR" 4
.el .IP "\fB\f(CB$exception\fB\->to_match\fR" 4
.IX Item "$exception->to_match"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Any and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot find or parse the type \*(AqdoesNotExist\*(Aq
.Ve
.SH "Moose::Exception::CannotFixMetaclassCompatibility"
.IX Header "Moose::Exception::CannotFixMetaclassCompatibility"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->metaclass_type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->metaclass_type\fR" 4
.IX Item "$exception->metaclass_type"
This attribute is read-only, isa Str and is optional.
.ie n .IP "\fB\fB$exception\fB\->superclass\fR" 4
.el .IP "\fB\f(CB$exception\fB\->superclass\fR" 4
.IX Item "$exception->superclass"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 3
\&    Can\*(Aqt fix metaclass incompatibility for Foo9 because it is not pristine.
\&    Can\*(Aqt fix metaclass incompatibility for Foo::Unsafe::Sub because it is not
\&pristine.
.Ve
.SH "Moose::Exception::CannotGenerateInlineConstraint"
.IX Header "Moose::Exception::CannotGenerateInlineConstraint"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->parameterizable_type_object\fR" 4
.el .IP "\fB\f(CB$exception\fB\->parameterizable_type_object\fR" 4
.IX Item "$exception->parameterizable_type_object"
This attribute is read-only, isa Moose::Meta::TypeConstraint::Parameterizable
 and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->value\fR" 4
.IX Item "$exception->value"
This attribute is read-only, isa Str and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Can\*(Aqt generate an inline constraint for Int, since none was defined
.Ve
.SH "Moose::Exception::CannotInitializeMooseMetaRoleComposite"
.IX Header "Moose::Exception::CannotInitializeMooseMetaRoleComposite"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->args\fR" 4
.el .IP "\fB\f(CB$exception\fB\->args\fR" 4
.IX Item "$exception->args"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->old_meta\fR" 4
.el .IP "\fB\f(CB$exception\fB\->old_meta\fR" 4
.IX Item "$exception->old_meta"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->role_composite\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_composite\fR" 4
.IX Item "$exception->role_composite"
This attribute is read-only, isa Moose::Meta::Role::Composite and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Moose::Meta::Role::Composite instances can only be reinitialized from an
\&existing metaclass instance
.Ve
.SH "Moose::Exception::CannotInlineTypeConstraintCheck"
.IX Header "Moose::Exception::CannotInlineTypeConstraintCheck"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot inline a type constraint check for NotInlinable
.Ve
.SH "Moose::Exception::CannotLocatePackageInINC"
.IX Header "Moose::Exception::CannotLocatePackageInINC"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash, Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->\s-1INC\s0\fR" 4
.el .IP "\fB\f(CB$exception\fB\->\s-1INC\s0\fR" 4
.IX Item "$exception->INC"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->metaclass_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->metaclass_name\fR" 4
.IX Item "$exception->metaclass_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->possible_packages\fR" 4
.el .IP "\fB\f(CB$exception\fB\->possible_packages\fR" 4
.IX Item "$exception->possible_packages"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Can\*(Aqt locate Moose::Meta::Int::Custom::Xyz or Xyz in \e@INC \e(\e@INC contains:
.Ve
.SH "Moose::Exception::CannotMakeMetaclassCompatible"
.IX Header "Moose::Exception::CannotMakeMetaclassCompatible"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->superclass_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->superclass_name\fR" 4
.IX Item "$exception->superclass_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.SH "Moose::Exception::CannotOverrideALocalMethod"
.IX Header "Moose::Exception::CannotOverrideALocalMethod"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Cannot add an override of method \*(Aqbar\*(Aq because there is a local version of
\&\*(Aqbar\*(Aq
.Ve
.SH "Moose::Exception::CannotOverrideBodyOfMetaMethods"
.IX Header "Moose::Exception::CannotOverrideBodyOfMetaMethods"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Overriding the body of meta methods is not allowed
.Ve
.SH "Moose::Exception::CannotOverrideLocalMethodIsPresent"
.IX Header "Moose::Exception::CannotOverrideLocalMethodIsPresent"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::Method.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method\fR" 4
.IX Item "$exception->method"
This attribute is read-only, isa Moose::Meta::Method and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot add an override method if a local method is already present
.Ve
.SH "Moose::Exception::CannotOverrideNoSuperMethod"
.IX Header "Moose::Exception::CannotOverrideNoSuperMethod"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You cannot override \*(Aqfoo\*(Aq because it has no super method
.Ve
.SH "Moose::Exception::CannotRegisterUnnamedTypeConstraint"
.IX Header "Moose::Exception::CannotRegisterUnnamedTypeConstraint"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    can\*(Aqt register an unnamed type constraint
.Ve
.SH "Moose::Exception::CannotUseLazyBuildAndDefaultSimultaneously"
.IX Header "Moose::Exception::CannotUseLazyBuildAndDefaultSimultaneously"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You can not use lazy_build and default for the same attribute (bar)
.Ve
.SH "Moose::Exception::CanOnlyConsumeRole"
.IX Header "Moose::Exception::CanOnlyConsumeRole"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You can only consume roles, Module::Runtime is not a Moose role
.Ve
.SH "Moose::Exception::CanOnlyWrapBlessedCode"
.IX Header "Moose::Exception::CanOnlyWrapBlessedCode"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->code\fR" 4
.el .IP "\fB\f(CB$exception\fB\->code\fR" 4
.IX Item "$exception->code"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Can only wrap blessed CODE
.Ve
.SH "Moose::Exception::CanReblessOnlyIntoASubclass"
.IX Header "Moose::Exception::CanReblessOnlyIntoASubclass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class, Moose::Exception::Role::Instance,
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You may rebless only into a subclass of (Foo2), of which (Foo) isn\*(Aqt.
.Ve
.SH "Moose::Exception::CanReblessOnlyIntoASuperclass"
.IX Header "Moose::Exception::CanReblessOnlyIntoASuperclass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You may rebless only into a superclass of (Foo), of which (Foo2) isn\*(Aqt.
.Ve
.SH "Moose::Exception::CircularReferenceInAlso"
.IX Header "Moose::Exception::CircularReferenceInAlso"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->also_parameter\fR" 4
.el .IP "\fB\f(CB$exception\fB\->also_parameter\fR" 4
.IX Item "$exception->also_parameter"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->stack\fR" 4
.el .IP "\fB\f(CB$exception\fB\->stack\fR" 4
.IX Item "$exception->stack"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Circular reference in \*(Aqalso\*(Aq parameter to Moose::Exporter between
\&MooseX::CircularAlso and MooseX::CircularAlso
.Ve
.SH "Moose::Exception::ClassDoesNotHaveInitMeta"
.IX Header "Moose::Exception::ClassDoesNotHaveInitMeta"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->traits\fR" 4
.el .IP "\fB\f(CB$exception\fB\->traits\fR" 4
.IX Item "$exception->traits"
This attribute is read-only, isa ArrayRef and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Cannot provide traits when Moose::Util::TypeConstraints does not have an
\&init_meta() method
.Ve
.SH "Moose::Exception::ClassDoesTheExcludedRole"
.IX Header "Moose::Exception::ClassDoesTheExcludedRole"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class, Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->excluded_role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->excluded_role\fR" 4
.IX Item "$exception->excluded_role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The class FooClass2 does the excluded role \*(AqExcludedRole2\*(Aq
.Ve
.SH "Moose::Exception::ClassNamesDoNotMatch"
.IX Header "Moose::Exception::ClassNamesDoNotMatch"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class and is required.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 2
\&    class_name (TestClass1) does not match class\->name (TestClass)
\&    class_name (Foo) does not match class\->name (DoesClassRole)
.Ve
.SH "Moose::Exception::CloneObjectExpectsAnInstanceOfMetaclass"
.IX Header "Moose::Exception::CloneObjectExpectsAnInstanceOfMetaclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an instance of the metaclass (Foo), not (foo)
.Ve
.SH "Moose::Exception::CodeBlockMustBeACodeRef"
.IX Header "Moose::Exception::CodeBlockMustBeACodeRef"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Instance, Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Your code block must be a CODE reference
.Ve
.SH "Moose::Exception::CoercingWithoutCoercions"
.IX Header "Moose::Exception::CoercingWithoutCoercions"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot coerce without a type coercion
.Ve
.SH "Moose::Exception::CoercionAlreadyExists"
.IX Header "Moose::Exception::CoercionAlreadyExists"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->constraint_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->constraint_name\fR" 4
.IX Item "$exception->constraint_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    A coercion action already exists for \*(AqInt\*(Aq
.Ve
.SH "Moose::Exception::CoercionNeedsTypeConstraint"
.IX Header "Moose::Exception::CoercionNeedsTypeConstraint"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    You cannot have coercion without specifying a type constraint on attribute
\&(bar)
.Ve
.SH "Moose::Exception::ConflictDetectedInCheckRoleExclusions"
.IX Header "Moose::Exception::ConflictDetectedInCheckRoleExclusions"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->excluded_role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->excluded_role\fR" 4
.IX Item "$exception->excluded_role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Conflict detected: Foo excludes role \*(AqBar\*(Aq
.Ve
.SH "Moose::Exception::ConflictDetectedInCheckRoleExclusionsInToClass"
.IX Header "Moose::Exception::ConflictDetectedInCheckRoleExclusionsInToClass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Conflict detected: FooClass excludes role \*(AqBarRole\*(Aq
.Ve
.SH "Moose::Exception::ConstructClassInstanceTakesPackageName"
.IX Header "Moose::Exception::ConstructClassInstanceTakesPackageName"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a package name
.Ve
.SH "Moose::Exception::CouldNotCreateMethod"
.IX Header "Moose::Exception::CouldNotCreateMethod"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->error\fR" 4
.el .IP "\fB\f(CB$exception\fB\->error\fR" 4
.IX Item "$exception->error"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->option_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->option_name\fR" 4
.IX Item "$exception->option_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->option_value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->option_value\fR" 4
.IX Item "$exception->option_value"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Could not create the \*(Aqpredicate\*(Aq method for bar because : Can\*(Aqt call method
\&"name" on an undefined value
.Ve
.SH "Moose::Exception::CouldNotCreateWriter"
.IX Header "Moose::Exception::CouldNotCreateWriter"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::EitherAttributeOrAttributeName and
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`has_attribute\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`has_attribute_name\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->error\fR" 4
.el .IP "\fB\f(CB$exception\fB\->error\fR" 4
.IX Item "$exception->error"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef, has a predicate \f(CW\*(C`has_params\*(C'\fR and is
optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 3
\&    Could not generate inline writer because : Could not create writer for \*(Aqbar\*(Aq
\& because Can\*(Aqt locate object method "_eval_environment" via package
\&"Class::MOP::Attribute"
.Ve
.SH "Moose::Exception::CouldNotEvalConstructor"
.IX Header "Moose::Exception::CouldNotEvalConstructor"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->constructor_method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->constructor_method\fR" 4
.IX Item "$exception->constructor_method"
This attribute is read-only, isa Class::MOP::Method::Constructor and is
required.
.ie n .IP "\fB\fB$exception\fB\->error\fR" 4
.el .IP "\fB\f(CB$exception\fB\->error\fR" 4
.IX Item "$exception->error"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->source\fR" 4
.el .IP "\fB\f(CB$exception\fB\->source\fR" 4
.IX Item "$exception->source"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Could not eval the constructor :
.Ve
.SH "Moose::Exception::CouldNotEvalDestructor"
.IX Header "Moose::Exception::CouldNotEvalDestructor"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->error\fR" 4
.el .IP "\fB\f(CB$exception\fB\->error\fR" 4
.IX Item "$exception->error"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_destructor_object\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_destructor_object\fR" 4
.IX Item "$exception->method_destructor_object"
This attribute is read-only, isa Moose::Meta::Method::Destructor and is
required.
.ie n .IP "\fB\fB$exception\fB\->source\fR" 4
.el .IP "\fB\f(CB$exception\fB\->source\fR" 4
.IX Item "$exception->source"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Could not eval the destructor
.Ve
.SH "Moose::Exception::CouldNotFindTypeConstraintToCoerceFrom"
.IX Header "Moose::Exception::CouldNotFindTypeConstraintToCoerceFrom"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->constraint_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->constraint_name\fR" 4
.IX Item "$exception->constraint_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Could not find the type constraint (xyz) to coerce from
.Ve
.SH "Moose::Exception::CouldNotGenerateInlineAttributeMethod"
.IX Header "Moose::Exception::CouldNotGenerateInlineAttributeMethod"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->error\fR" 4
.el .IP "\fB\f(CB$exception\fB\->error\fR" 4
.IX Item "$exception->error"
This attribute is read-only, isa Moose::Exception and is required.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->option\fR" 4
.el .IP "\fB\f(CB$exception\fB\->option\fR" 4
.IX Item "$exception->option"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 10
\&    Could not generate inline accessor because : Can\*(Aqt call method
\&"get_meta_instance" on an undefined value
\&    Could not generate inline reader because : Can\*(Aqt call method
\&"get_meta_instance" on an undefined value
\&    Could not generate inline writer because : Can\*(Aqt call method
\&"get_meta_instance" on an undefined value
\&    Could not generate inline predicate because : Can\*(Aqt call method
\&"get_meta_instance" on an undefined value
\&    Could not generate inline clearer because : Can\*(Aqt call method
\&"get_meta_instance" on an undefined value
.Ve
.SH "Moose::Exception::CouldNotLocateTypeConstraintForUnion"
.IX Header "Moose::Exception::CouldNotLocateTypeConstraintForUnion"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Could not locate type constraint (foo) for the union
.Ve
.SH "Moose::Exception::CouldNotParseType"
.IX Header "Moose::Exception::CouldNotParseType"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->position\fR" 4
.el .IP "\fB\f(CB$exception\fB\->position\fR" 4
.IX Item "$exception->position"
This attribute is read-only, isa Int and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Str and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    \*(AqStr | Undef |\*(Aq didn\*(Aqt parse (parse\-pos=11 and str\-length=13)
.Ve
.SH "Moose::Exception::CreateMOPClassTakesArrayRefOfAttributes"
.IX Header "Moose::Exception::CreateMOPClassTakesArrayRefOfAttributes"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash and
Moose::Exception::Role::RoleForCreateMOPClass.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an ARRAY ref of attributes
.Ve
.SH "Moose::Exception::CreateMOPClassTakesArrayRefOfSuperclasses"
.IX Header "Moose::Exception::CreateMOPClassTakesArrayRefOfSuperclasses"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash and
Moose::Exception::Role::RoleForCreateMOPClass.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an ARRAY ref of superclasses
.Ve
.SH "Moose::Exception::CreateMOPClassTakesHashRefOfMethods"
.IX Header "Moose::Exception::CreateMOPClassTakesHashRefOfMethods"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash and
Moose::Exception::Role::RoleForCreateMOPClass.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an HASH ref of methods
.Ve
.SH "Moose::Exception::CreateTakesArrayRefOfRoles"
.IX Header "Moose::Exception::CreateTakesArrayRefOfRoles"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash and
Moose::Exception::Role::RoleForCreate.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_class\fR" 4
.IX Item "$exception->attribute_class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an ARRAY ref of roles
.Ve
.SH "Moose::Exception::CreateTakesHashRefOfAttributes"
.IX Header "Moose::Exception::CreateTakesHashRefOfAttributes"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash and
Moose::Exception::Role::RoleForCreate.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_class\fR" 4
.IX Item "$exception->attribute_class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a HASH ref of attributes
.Ve
.SH "Moose::Exception::CreateTakesHashRefOfMethods"
.IX Header "Moose::Exception::CreateTakesHashRefOfMethods"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::ParamsHash and
Moose::Exception::Role::RoleForCreate.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_class\fR" 4
.IX Item "$exception->attribute_class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a HASH ref of methods
.Ve
.SH "Moose::Exception::DefaultToMatchOnTypeMustBeCodeRef"
.IX Header "Moose::Exception::DefaultToMatchOnTypeMustBeCodeRef"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->cases_to_be_matched\fR" 4
.el .IP "\fB\f(CB$exception\fB\->cases_to_be_matched\fR" 4
.IX Item "$exception->cases_to_be_matched"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->default_action\fR" 4
.el .IP "\fB\f(CB$exception\fB\->default_action\fR" 4
.IX Item "$exception->default_action"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->to_match\fR" 4
.el .IP "\fB\f(CB$exception\fB\->to_match\fR" 4
.IX Item "$exception->to_match"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Default case must be a CODE ref, not ARRAY(0x14f6fc8)
.Ve
.SH "Moose::Exception::DelegationToAClassWhichIsNotLoaded"
.IX Header "Moose::Exception::DelegationToAClassWhichIsNotLoaded"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    The bar attribute is trying to delegate to a class which has not been loaded
\& \- Not::Loaded
.Ve
.SH "Moose::Exception::DelegationToARoleWhichIsNotLoaded"
.IX Header "Moose::Exception::DelegationToARoleWhichIsNotLoaded"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    The bar attribute is trying to delegate to a role which has not been loaded
\&\- Role
.Ve
.SH "Moose::Exception::DelegationToATypeWhichIsNotAClass"
.IX Header "Moose::Exception::DelegationToATypeWhichIsNotAClass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 4
\&    The bar attribute is trying to delegate to a type (Int) that is not backed
\&by a class
\&    The bar attribute is trying to delegate to a type (PositiveInt) that is not
\&backed by a class
.Ve
.SH "Moose::Exception::DoesRequiresRoleName"
.IX Header "Moose::Exception::DoesRequiresRoleName"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Moose::Meta::Class and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply a role name to does()
.Ve
.SH "Moose::Exception::EnumCalledWithAnArrayRefAndAdditionalArgs"
.IX Header "Moose::Exception::EnumCalledWithAnArrayRefAndAdditionalArgs"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->args\fR" 4
.el .IP "\fB\f(CB$exception\fB\->args\fR" 4
.IX Item "$exception->args"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->array\fR" 4
.el .IP "\fB\f(CB$exception\fB\->array\fR" 4
.IX Item "$exception->array"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    enum called with an array reference and additional arguments. Did you mean
\&to parenthesize the enum call\*(Aqs parameters?
.Ve
.SH "Moose::Exception::EnumValuesMustBeString"
.IX Header "Moose::Exception::EnumValuesMustBeString"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->value\fR" 4
.IX Item "$exception->value"
This attribute is read-only, isa Any and is required.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 2
\&    Enum values must be strings, not undef
\&    Enum values must be strings, not \*(AqARRAY(0x191d1b8)\*(Aq
.Ve
.SH "Moose::Exception::ExtendsMissingArgs"
.IX Header "Moose::Exception::ExtendsMissingArgs"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Must derive at least one class
.Ve
.SH "Moose::Exception::HandlesMustBeAHashRef"
.IX Header "Moose::Exception::HandlesMustBeAHashRef"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->given_handles\fR" 4
.el .IP "\fB\f(CB$exception\fB\->given_handles\fR" 4
.IX Item "$exception->given_handles"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The \*(Aqhandles\*(Aq option must be a HASH reference, not bar
.Ve
.SH "Moose::Exception::IllegalInheritedOptions"
.IX Header "Moose::Exception::IllegalInheritedOptions"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->illegal_options\fR" 4
.el .IP "\fB\f(CB$exception\fB\->illegal_options\fR" 4
.IX Item "$exception->illegal_options"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Illegal inherited options => (clearer)
.Ve
.SH "Moose::Exception::IllegalMethodTypeToAddMethodModifier"
.IX Header "Moose::Exception::IllegalMethodTypeToAddMethodModifier"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class_or_object\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_or_object\fR" 4
.IX Item "$exception->class_or_object"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->modifier_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->modifier_name\fR" 4
.IX Item "$exception->modifier_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Methods passed to before must be provided as a list, arrayref or regex, not
\&HASH
.Ve
.SH "Moose::Exception::IncompatibleMetaclassOfSuperclass"
.IX Header "Moose::Exception::IncompatibleMetaclassOfSuperclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->superclass_meta_type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->superclass_meta_type\fR" 4
.IX Item "$exception->superclass_meta_type"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->superclass_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->superclass_name\fR" 4
.IX Item "$exception->superclass_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    The metaclass of My::Class (Class::MOP::Class) is not compatible with the
\&metaclass of its superclass, My::Role (Moose::Meta::Role)
.Ve
.SH "Moose::Exception::InitializeTakesUnBlessedPackageName"
.IX Header "Moose::Exception::InitializeTakesUnBlessedPackageName"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->package_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->package_name\fR" 4
.IX Item "$exception->package_name"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a package name and it cannot be blessed
.Ve
.SH "Moose::Exception::InitMetaRequiresClass"
.IX Header "Moose::Exception::InitMetaRequiresClass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot call init_meta without specifying a for_class
.Ve
.SH "Moose::Exception::InstanceBlessedIntoWrongClass"
.IX Header "Moose::Exception::InstanceBlessedIntoWrongClass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class, Moose::Exception::Role::Instance,
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Objects passed as the _\|_INSTANCE_\|_ parameter must already be blessed into
\&the correct class, but Bar=HASH(0x2d77528) is not a Foo
.Ve
.SH "Moose::Exception::InstanceMustBeABlessedReference"
.IX Header "Moose::Exception::InstanceMustBeABlessedReference"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class, Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The _\|_INSTANCE_\|_ parameter must be a blessed reference, not ARRAY(0x1d75d40)
.Ve
.SH "Moose::Exception::InvalidArgPassedToMooseUtilMetaRole"
.IX Header "Moose::Exception::InvalidArgPassedToMooseUtilMetaRole"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->argument\fR" 4
.el .IP "\fB\f(CB$exception\fB\->argument\fR" 4
.IX Item "$exception->argument"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 11
\&    When using Moose::Util::MetaRole, you must pass a Moose class name, role
\&name, metaclass object, or metarole object. You passed Foo=HASH(0x16adb58), and
\&we resolved this to a Foo object.
\&    When using Moose::Util::MetaRole, you must pass a Moose class name, role
\&name, metaclass object, or metarole object. You passed ARRAY(0x21eb868), and
\&this did not resolve to a metaclass or metarole. Maybe you need to call Moose\->i
\&nit_meta to initialize the metaclass first?
\&    When using Moose::Util::MetaRole, you must pass a Moose class name, role
\&name, metaclass object, or metarole object. You passed undef, and this did not
\&resolve to a metaclass or metarole. Maybe you need to call Moose\->init_meta to
\&initialize the metaclass first?
.Ve
.SH "Moose::Exception::InvalidArgumentsToTraitAliases"
.IX Header "Moose::Exception::InvalidArgumentsToTraitAliases"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->alias\fR" 4
.el .IP "\fB\f(CB$exception\fB\->alias\fR" 4
.IX Item "$exception->alias"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->package_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->package_name\fR" 4
.IX Item "$exception->package_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    HASH references are not valid arguments to the \*(Aqtrait_aliases\*(Aq option
.Ve
.SH "Moose::Exception::InvalidArgumentToMethod"
.IX Header "Moose::Exception::InvalidArgumentToMethod"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->argument\fR" 4
.el .IP "\fB\f(CB$exception\fB\->argument\fR" 4
.IX Item "$exception->argument"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->argument_noun\fR" 4
.el .IP "\fB\f(CB$exception\fB\->argument_noun\fR" 4
.IX Item "$exception->argument_noun"
This attribute is read-only, isa Str, has a default value \*(L"argument\*(R" and is
optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->ordinal\fR" 4
.el .IP "\fB\f(CB$exception\fB\->ordinal\fR" 4
.IX Item "$exception->ordinal"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_ordinal_set\*(C'\fR and is
optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->type_of_argument\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_of_argument\fR" 4
.IX Item "$exception->type_of_argument"
This attribute is read-only, isa Str and is required.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 10
\&    The index passed to get must be an integer
\&    The argument passed to first must be a code reference
\&    The argument passed to first_index must be a code reference
\&    The argument passed to grep must be a code reference
\&    The argument passed to join must be a string
\&    The argument passed to map must be a code reference
\&    The n value passed to natatime must be an integer
\&    The second argument passed to natatime must be a code reference
\&    The argument passed to reduce must be a code reference
\&    The argument passed to sort must be a code reference
\&    The argument passed to sort_in_place must be a code reference
\&    The length argument passed to splice must be an integer
\&    The argument passed to grep must be a code reference
\&    The key passed to exists must be a defined value
\&    The argument passed to match must be a string or regexp reference
\&    The first argument passed to replace must be a string or regexp reference
\&    The second argument passed to replace must be a string or code reference
\&    The first argument passed to substr must be an integer
\&    The second argument passed to substr must be an integer
\&    The third argument passed to substr must be a string
.Ve
.SH "Moose::Exception::InvalidBaseTypeGivenToCreateParameterizedTypeConstraint"
.IX Header "Moose::Exception::InvalidBaseTypeGivenToCreateParameterizedTypeConstraint"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Could not locate the base type (Foo)
.Ve
.SH "Moose::Exception::InvalidHandleValue"
.IX Header "Moose::Exception::InvalidHandleValue"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->handle_value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->handle_value\fR" 4
.IX Item "$exception->handle_value"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    All values passed to handles must be strings or ARRAY references, not (?^:ba
\&r)
.Ve
.SH "Moose::Exception::InvalidHasProvidedInARole"
.IX Header "Moose::Exception::InvalidHasProvidedInARole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Usage: has \*(Aqname\*(Aq => ( key => value, ... )
.Ve
.SH "Moose::Exception::InvalidNameForType"
.IX Header "Moose::Exception::InvalidNameForType"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->name\fR" 4
.IX Item "$exception->name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    contains invalid characters
.Ve
.SH "Moose::Exception::InvalidRoleApplication"
.IX Header "Moose::Exception::InvalidRoleApplication"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->application\fR" 4
.el .IP "\fB\f(CB$exception\fB\->application\fR" 4
.IX Item "$exception->application"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Role applications must be instances of
\&Moose::Meta::Role::Application::ToClass
.Ve
.SH "Moose::Exception::InvalidTypeConstraint"
.IX Header "Moose::Exception::InvalidTypeConstraint"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->registry_object\fR" 4
.el .IP "\fB\f(CB$exception\fB\->registry_object\fR" 4
.IX Item "$exception->registry_object"
This attribute is read-only, isa Moose::Meta::TypeConstraint::Registry and is
 required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Any and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    No type supplied / type is not a valid type constraint
.Ve
.SH "Moose::Exception::InvalidTypeGivenToCreateParameterizedTypeConstraint"
.IX Header "Moose::Exception::InvalidTypeGivenToCreateParameterizedTypeConstraint"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Could not parse type name (Foo) correctly
.Ve
.SH "Moose::Exception::InvalidValueForIs"
.IX Header "Moose::Exception::InvalidValueForIs"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    I do not understand this option (is => bar) on attribute (foo)
.Ve
.SH "Moose::Exception::IsaDoesNotDoTheRole"
.IX Header "Moose::Exception::IsaDoesNotDoTheRole"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Cannot have an isa option and a does option if the isa does not do the does
\&on attribute (bar)
.Ve
.SH "Moose::Exception::IsaLacksDoesMethod"
.IX Header "Moose::Exception::IsaLacksDoesMethod"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot have an isa option which cannot \->does() on attribute (bar)
.Ve
.SH "Moose::Exception::LazyAttributeNeedsADefault"
.IX Header "Moose::Exception::LazyAttributeNeedsADefault"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::EitherAttributeOrAttributeName.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`has_attribute\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`has_attribute_name\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef, has a predicate \f(CW\*(C`has_params\*(C'\fR and is
optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    You cannot have a lazy attribute (bar) without specifying a default value
\&for it
.Ve
.SH "Moose::Exception::Legacy"
.IX Header "Moose::Exception::Legacy"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 2
\&    Hello, I am an exception object
\&    An inline error
.Ve
.SH "Moose::Exception::MatchActionMustBeACodeRef"
.IX Header "Moose::Exception::MatchActionMustBeACodeRef"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->action\fR" 4
.el .IP "\fB\f(CB$exception\fB\->action\fR" 4
.IX Item "$exception->action"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->to_match\fR" 4
.el .IP "\fB\f(CB$exception\fB\->to_match\fR" 4
.IX Item "$exception->to_match"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Match action must be a CODE ref, not ARRAY(0x27a0748)
.Ve
.SH "Moose::Exception::MessageParameterMustBeCodeRef"
.IX Header "Moose::Exception::MessageParameterMustBeCodeRef"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The \*(Aqmessage\*(Aq parameter must be a coderef
.Ve
.SH "Moose::Exception::MetaclassIsAClassNotASubclassOfGivenMetaclass"
.IX Header "Moose::Exception::MetaclassIsAClassNotASubclassOfGivenMetaclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->metaclass\fR" 4
.el .IP "\fB\f(CB$exception\fB\->metaclass\fR" 4
.IX Item "$exception->metaclass"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 3
\&    Foo3 already has a metaclass, but it does not inherit Moose::Meta::Role
\&(Moose::Meta::Class=HASH(0x2d5d160)). You cannot make the same thing a role and
\&a class. Remove either Moose or Moose::Role.
.Ve
.SH "Moose::Exception::MetaclassIsARoleNotASubclassOfGivenMetaclass"
.IX Header "Moose::Exception::MetaclassIsARoleNotASubclassOfGivenMetaclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->metaclass\fR" 4
.el .IP "\fB\f(CB$exception\fB\->metaclass\fR" 4
.IX Item "$exception->metaclass"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 3
\&    Foo3 already has a metaclass, but it does not inherit Moose::Meta::Class
\&(Moose::Meta::Role=HASH(0x29d3c78)). You cannot make the same thing a role and a
\& class. Remove either Moose or Moose::Role.
.Ve
.SH "Moose::Exception::MetaclassIsNotASubclassOfGivenMetaclass"
.IX Header "Moose::Exception::MetaclassIsNotASubclassOfGivenMetaclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->metaclass\fR" 4
.el .IP "\fB\f(CB$exception\fB\->metaclass\fR" 4
.IX Item "$exception->metaclass"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 4
\&    Foo4 already has a metaclass, but it does not inherit Moose::Meta::Role
\&(Class::MOP::Class=HASH(0x2c385a8)).
\&    Foo4 already has a metaclass, but it does not inherit Moose::Meta::Class
\&(Class::MOP::Class=HASH(0x278a4a0)).
.Ve
.SH "Moose::Exception::MetaclassMustBeASubclassOfMooseMetaClass"
.IX Header "Moose::Exception::MetaclassMustBeASubclassOfMooseMetaClass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The Metaclass Foo3 must be a subclass of Moose::Meta::Class.
.Ve
.SH "Moose::Exception::MetaclassMustBeASubclassOfMooseMetaRole"
.IX Header "Moose::Exception::MetaclassMustBeASubclassOfMooseMetaRole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The Metaclass Foo3 must be a subclass of Moose::Meta::Role.
.Ve
.SH "Moose::Exception::MetaclassMustBeDerivedFromClassMOPClass"
.IX Header "Moose::Exception::MetaclassMustBeDerivedFromClassMOPClass"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The metaclass (Foo) must be derived from Class::MOP::Class
.Ve
.SH "Moose::Exception::MetaclassNotLoaded"
.IX Header "Moose::Exception::MetaclassNotLoaded"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The Metaclass Foo2 must be loaded. (Perhaps you forgot to \*(Aquse Foo2\*(Aq?)
.Ve
.SH "Moose::Exception::MetaclassTypeIncompatible"
.IX Header "Moose::Exception::MetaclassTypeIncompatible"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->metaclass_type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->metaclass_type\fR" 4
.IX Item "$exception->metaclass_type"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->superclass_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->superclass_name\fR" 4
.IX Item "$exception->superclass_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 3
\&    The attribute_metaclass metaclass for Foo::All::Sub::Attribute
\&(Bar::Meta::Attribute) is not compatible with the attribute metaclass of its
\&superclass, Foo::All (Foo::Meta::Attribute)
.Ve
.SH "Moose::Exception::MethodExpectedAMetaclassObject"
.IX Header "Moose::Exception::MethodExpectedAMetaclassObject"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->metaclass\fR" 4
.el .IP "\fB\f(CB$exception\fB\->metaclass\fR" 4
.IX Item "$exception->metaclass"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The is_needed method expected a metaclass object as its arugment
.Ve
.SH "Moose::Exception::MethodExpectsFewerArgs"
.IX Header "Moose::Exception::MethodExpectsFewerArgs"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->maximum_args\fR" 4
.el .IP "\fB\f(CB$exception\fB\->maximum_args\fR" 4
.IX Item "$exception->maximum_args"
This attribute is read-only, isa Int and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot call substr with more than 3 arguments
.Ve
.SH "Moose::Exception::MethodExpectsMoreArgs"
.IX Header "Moose::Exception::MethodExpectsMoreArgs"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->minimum_args\fR" 4
.el .IP "\fB\f(CB$exception\fB\->minimum_args\fR" 4
.IX Item "$exception->minimum_args"
This attribute is read-only, isa Int and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Cannot call substr without at least 1 argument
.Ve
.SH "Moose::Exception::MethodModifierNeedsMethodName"
.IX Header "Moose::Exception::MethodModifierNeedsMethodName"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass in a method name
.Ve
.SH "Moose::Exception::MethodNameConflictInRoles"
.IX Header "Moose::Exception::MethodNameConflictInRoles"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->conflict\fR" 4
.el .IP "\fB\f(CB$exception\fB\->conflict\fR" 4
.IX Item "$exception->conflict"
This attribute is read-only, isa
ArrayRef[Moose::Meta::Role::Method::Conflicting] and is required.
.Sp
This attribute has handles as follows:
    conflict_methods_count   => count
    get_all_methods          => elements
    get_method_at            => get
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 5
\&    Due to a method name conflict in roles \*(AqBar::Role\*(Aq and \*(AqFoo::Role\*(Aq, the
\&method \*(Aqfoo\*(Aq must be implemented or excluded by \*(AqMy::Foo::Class::Broken\*(Aq
\&    Due to method name conflicts in roles \*(AqBar2::Role\*(Aq and \*(AqFoo2::Role\*(Aq, the
\&methods \*(Aqbar\*(Aq and \*(Aqfoo\*(Aq must be implemented or excluded by
\&\*(AqMy::Foo::Class::Broken2\*(Aq
.Ve
.SH "Moose::Exception::MethodNameNotFoundInInheritanceHierarchy"
.IX Header "Moose::Exception::MethodNameNotFoundInInheritanceHierarchy"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The method \*(Aqfoo\*(Aq was not found in the inheritance hierarchy for Foo
.Ve
.SH "Moose::Exception::MethodNameNotGiven"
.IX Header "Moose::Exception::MethodNameNotGiven"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must define a method name to find
.Ve
.SH "Moose::Exception::MOPAttributeNewNeedsAttributeName"
.IX Header "Moose::Exception::MOPAttributeNewNeedsAttributeName"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must provide a name for the attribute
.Ve
.SH "Moose::Exception::MustDefineAMethodName"
.IX Header "Moose::Exception::MustDefineAMethodName"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Instance.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Object and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must define a method name
.Ve
.SH "Moose::Exception::MustDefineAnAttributeName"
.IX Header "Moose::Exception::MustDefineAnAttributeName"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must define an attribute name
.Ve
.SH "Moose::Exception::MustHaveAtLeastOneValueToEnumerate"
.IX Header "Moose::Exception::MustHaveAtLeastOneValueToEnumerate"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must have at least one value to enumerate through
.Ve
.SH "Moose::Exception::MustPassAHashOfOptions"
.IX Header "Moose::Exception::MustPassAHashOfOptions"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a hash of options
.Ve
.SH "Moose::Exception::MustPassAMooseMetaRoleInstanceOrSubclass"
.IX Header "Moose::Exception::MustPassAMooseMetaRoleInstanceOrSubclass"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a Moose::Meta::Role instance (or a subclass)
.Ve
.SH "Moose::Exception::MustPassAPackageNameOrAnExistingClassMOPPackageInstance"
.IX Header "Moose::Exception::MustPassAPackageNameOrAnExistingClassMOPPackageInstance"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a package name or an existing Class::MOP::Package instance
.Ve
.SH "Moose::Exception::MustPassEvenNumberOfArguments"
.IX Header "Moose::Exception::MustPassEvenNumberOfArguments"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->args\fR" 4
.el .IP "\fB\f(CB$exception\fB\->args\fR" 4
.IX Item "$exception->args"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an even number of arguments to set
.Ve
.SH "Moose::Exception::MustPassEvenNumberOfAttributeOptions"
.IX Header "Moose::Exception::MustPassEvenNumberOfAttributeOptions"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->options\fR" 4
.el .IP "\fB\f(CB$exception\fB\->options\fR" 4
.IX Item "$exception->options"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an even number of attribute options
.Ve
.SH "Moose::Exception::MustProvideANameForTheAttribute"
.IX Header "Moose::Exception::MustProvideANameForTheAttribute"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must provide a name for the attribute
.Ve
.SH "Moose::Exception::MustSpecifyAtleastOneMethod"
.IX Header "Moose::Exception::MustSpecifyAtleastOneMethod"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Must specify at least one method
.Ve
.SH "Moose::Exception::MustSpecifyAtleastOneRole"
.IX Header "Moose::Exception::MustSpecifyAtleastOneRole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Must specify at least one role
.Ve
.SH "Moose::Exception::MustSpecifyAtleastOneRoleToApplicant"
.IX Header "Moose::Exception::MustSpecifyAtleastOneRoleToApplicant"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->applicant\fR" 4
.el .IP "\fB\f(CB$exception\fB\->applicant\fR" 4
.IX Item "$exception->applicant"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 3
\&    Must specify at least one role to apply to TestClass=HASH(0x2bee290)
\&    Must specify at least one role to apply to Moose::Meta::Class=HASH(0x1a1f818)
\&    Must specify at least one role to apply to Moose::Meta::Role=HASH(0x1f22d40)
.Ve
.SH "Moose::Exception::MustSupplyAClassMOPAttributeInstance"
.IX Header "Moose::Exception::MustSupplyAClassMOPAttributeInstance"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply an attribute which is a \*(AqClass::MOP::Attribute\*(Aq instance
.Ve
.SH "Moose::Exception::MustSupplyADelegateToMethod"
.IX Header "Moose::Exception::MustSupplyADelegateToMethod"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    You must supply a delegate_to_method which is a method name or a CODE
\&reference
.Ve
.SH "Moose::Exception::MustSupplyAMetaclass"
.IX Header "Moose::Exception::MustSupplyAMetaclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass a metaclass instance if you want to inline
.Ve
.SH "Moose::Exception::MustSupplyAMooseMetaAttributeInstance"
.IX Header "Moose::Exception::MustSupplyAMooseMetaAttributeInstance"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply an attribute which is a \*(AqMoose::Meta::Attribute\*(Aq instance
.Ve
.SH "Moose::Exception::MustSupplyAnAccessorTypeToConstructWith"
.IX Header "Moose::Exception::MustSupplyAnAccessorTypeToConstructWith"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply an accessor_type to construct with
.Ve
.SH "Moose::Exception::MustSupplyAnAttributeToConstructWith"
.IX Header "Moose::Exception::MustSupplyAnAttributeToConstructWith"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply an attribute to construct with
.Ve
.SH "Moose::Exception::MustSupplyArrayRefAsCurriedArguments"
.IX Header "Moose::Exception::MustSupplyArrayRefAsCurriedArguments"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class, Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply a curried_arguments which is an ARRAY reference
.Ve
.SH "Moose::Exception::MustSupplyPackageNameAndName"
.IX Header "Moose::Exception::MustSupplyPackageNameAndName"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply the package_name and name parameters
.Ve
.SH "Moose::Exception::NeedsTypeConstraintUnionForTypeCoercionUnion"
.IX Header "Moose::Exception::NeedsTypeConstraintUnionForTypeCoercionUnion"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_coercion_union_object\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_coercion_union_object\fR" 4
.IX Item "$exception->type_coercion_union_object"
This attribute is read-only, isa Moose::Meta::TypeCoercion::Union and is
required.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    You can only create a Moose::Meta::TypeCoercion::Union for a
\&Moose::Meta::TypeConstraint::Union, not a Str
.Ve
.SH "Moose::Exception::NeitherAttributeNorAttributeNameIsGiven"
.IX Header "Moose::Exception::NeitherAttributeNorAttributeNameIsGiven"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You need to give attribute or attribute_name or both
.Ve
.SH "Moose::Exception::NeitherClassNorClassNameIsGiven"
.IX Header "Moose::Exception::NeitherClassNorClassNameIsGiven"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You need to give class or class_name or both
.Ve
.SH "Moose::Exception::NeitherRoleNorRoleNameIsGiven"
.IX Header "Moose::Exception::NeitherRoleNorRoleNameIsGiven"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You need to give role or role_name or both
.Ve
.SH "Moose::Exception::NeitherTypeNorTypeNameIsGiven"
.IX Header "Moose::Exception::NeitherTypeNorTypeNameIsGiven"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You need to give type or type_name or both
.Ve
.SH "Moose::Exception::NoAttributeFoundInSuperClass"
.IX Header "Moose::Exception::NoAttributeFoundInSuperClass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class,
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Could not find an attribute by the name of \*(Aqbar\*(Aq to inherit from in Test2
.Ve
.SH "Moose::Exception::NoBodyToInitializeInAnAbstractBaseClass"
.IX Header "Moose::Exception::NoBodyToInitializeInAnAbstractBaseClass"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->package_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->package_name\fR" 4
.IX Item "$exception->package_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    No body to initialize, Class::MOP::Method::Generated is an abstract base
\&class
.Ve
.SH "Moose::Exception::NoCasesMatched"
.IX Header "Moose::Exception::NoCasesMatched"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->cases_to_be_matched\fR" 4
.el .IP "\fB\f(CB$exception\fB\->cases_to_be_matched\fR" 4
.IX Item "$exception->cases_to_be_matched"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->to_match\fR" 4
.el .IP "\fB\f(CB$exception\fB\->to_match\fR" 4
.IX Item "$exception->to_match"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    No cases matched for 123
.Ve
.SH "Moose::Exception::NoConstraintCheckForTypeConstraint"
.IX Header "Moose::Exception::NoConstraintCheckForTypeConstraint"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Could not compile type constraint \*(AqFooTypeConstraint\*(Aq because no constraint
\&check
.Ve
.SH "Moose::Exception::NoDestructorClassSpecified"
.IX Header "Moose::Exception::NoDestructorClassSpecified"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    The \*(Aqinline_destructor\*(Aq option is present, but no destructor class was
\&specified
.Ve
.SH "Moose::Exception::NoImmutableTraitSpecifiedForClass"
.IX Header "Moose::Exception::NoImmutableTraitSpecifiedForClass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    no immutable trait specified for Moose::Meta::Class=HASH(0x19a2280)
.Ve
.SH "Moose::Exception::NoParentGivenToSubtype"
.IX Header "Moose::Exception::NoParentGivenToSubtype"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->name\fR" 4
.IX Item "$exception->name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    A subtype cannot consist solely of a name, it must have a parent
.Ve
.SH "Moose::Exception::OnlyInstancesCanBeCloned"
.IX Header "Moose::Exception::OnlyInstancesCanBeCloned"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->instance\fR" 4
.el .IP "\fB\f(CB$exception\fB\->instance\fR" 4
.IX Item "$exception->instance"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You can only clone instances, (ARRAY(0x2162350)) is not a blessed instance
.Ve
.SH "Moose::Exception::OperatorIsRequired"
.IX Header "Moose::Exception::OperatorIsRequired"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    operator is required
.Ve
.SH "Moose::Exception::OverrideConflictInComposition"
.IX Header "Moose::Exception::OverrideConflictInComposition"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_being_applied\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_being_applied\fR" 4
.IX Item "$exception->role_being_applied"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->two_overrides_found\fR" 4
.el .IP "\fB\f(CB$exception\fB\->two_overrides_found\fR" 4
.IX Item "$exception->two_overrides_found"
This attribute is read-only, isa Bool, has a default value 0 and is required.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 4
\&    Role \*(AqFoo6\*(Aq has encountered an \*(Aqoverride\*(Aq method conflict during composition
\& (A local method of the same name as been found). This is a fatal error.
\&    Role \*(AqFoo7\*(Aq has encountered an \*(Aqoverride\*(Aq method conflict during composition
\& (Two \*(Aqoverride\*(Aq methods of the same name encountered). This is fatal error.
.Ve
.SH "Moose::Exception::OverrideConflictInSummation"
.IX Header "Moose::Exception::OverrideConflictInSummation"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->role_application\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_application\fR" 4
.IX Item "$exception->role_application"
This attribute is read-only, isa
Moose::Meta::Role::Application::RoleSummation and is required.
.ie n .IP "\fB\fB$exception\fB\->roles\fR" 4
.el .IP "\fB\f(CB$exception\fB\->roles\fR" 4
.IX Item "$exception->roles"
This attribute is read-only, isa ArrayRef[Moose::Meta::Role] and is required.
.Sp
This attribute has handles as follows:
    roles                    => elements
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->two_overrides_found\fR" 4
.el .IP "\fB\f(CB$exception\fB\->two_overrides_found\fR" 4
.IX Item "$exception->two_overrides_found"
This attribute is read-only, isa Bool, has a default value 0 and is required.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 5
\&    Role \*(AqFoo3|Bar3\*(Aq has encountered an \*(Aqoverride\*(Aq method conflict during
\&composition (A local method of the same name has been found). This is a fatal
\&error.
\&    We have encountered an \*(Aqoverride\*(Aq method conflict during composition (Two
\&\*(Aqoverride\*(Aq methods of the same name encountered). This is fatal error.
.Ve
.SH "Moose::Exception::PackageDoesNotUseMooseExporter"
.IX Header "Moose::Exception::PackageDoesNotUseMooseExporter"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->is_loaded\fR" 4
.el .IP "\fB\f(CB$exception\fB\->is_loaded\fR" 4
.IX Item "$exception->is_loaded"
This attribute is read-only, isa Bool and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->package\fR" 4
.el .IP "\fB\f(CB$exception\fB\->package\fR" 4
.IX Item "$exception->package"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Package in also (NoSuchThing) does not seem to use Moose::Exporter (is it
\&loaded?)
.Ve
.SH "Moose::Exception::PackageNameAndNameParamsNotGivenToWrap"
.IX Header "Moose::Exception::PackageNameAndNameParamsNotGivenToWrap"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->code\fR" 4
.el .IP "\fB\f(CB$exception\fB\->code\fR" 4
.IX Item "$exception->code"
This attribute is read-only, isa CodeRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply the package_name and name parameters
.Ve
.SH "Moose::Exception::PackagesAndModulesAreNotCachable"
.IX Header "Moose::Exception::PackagesAndModulesAreNotCachable"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->is_module\fR" 4
.el .IP "\fB\f(CB$exception\fB\->is_module\fR" 4
.IX Item "$exception->is_module"
This attribute is read-only, isa Bool and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 2
\&    Modules are not cacheable
\&    Packages are not cacheable
.Ve
.SH "Moose::Exception::ParameterIsNotSubtypeOfParent"
.IX Header "Moose::Exception::ParameterIsNotSubtypeOfParent"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->type_parameter\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_parameter\fR" 4
.IX Item "$exception->type_parameter"
This attribute is read-only, isa Str and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Int is not a subtype of Float
.Ve
.SH "Moose::Exception::ReferencesAreNotAllowedAsDefault"
.IX Header "Moose::Exception::ReferencesAreNotAllowedAsDefault"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    References are not allowed as default values, you must wrap the default of
\&\*(Aqfoo\*(Aq in a CODE reference (ex: sub { [] } and not [])
.Ve
.SH "Moose::Exception::RequiredAttributeLacksInitialization"
.IX Header "Moose::Exception::RequiredAttributeLacksInitialization"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    A required attribute must have either \*(Aqinit_arg\*(Aq, \*(Aqbuilder\*(Aq, or \*(Aqdefault\*(Aq
.Ve
.SH "Moose::Exception::RequiredAttributeNeedsADefault"
.IX Header "Moose::Exception::RequiredAttributeNeedsADefault"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    You cannot have a required attribute (bar) without a default, builder, or an
\& init_arg
.Ve
.SH "Moose::Exception::RequiredMethodsImportedByClass"
.IX Header "Moose::Exception::RequiredMethodsImportedByClass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->imported_method\fR" 4
.el .IP "\fB\f(CB$exception\fB\->imported_method\fR" 4
.IX Item "$exception->imported_method"
This attribute is read-only, isa Moose::Meta::Role::Method::Required and is
required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->missing_methods\fR" 4
.el .IP "\fB\f(CB$exception\fB\->missing_methods\fR" 4
.IX Item "$exception->missing_methods"
This attribute is read-only, isa ArrayRef[Moose::Meta::Role::Method::Required]
and is required.
.Sp
This attribute has handles as follows:
    get_all_methods          => elements
    get_method_at            => get
    method_count             => count
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.SH "Moose::Exception::RequiredMethodsNotImplementedByClass"
.IX Header "Moose::Exception::RequiredMethodsNotImplementedByClass"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::Class and Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->missing_methods\fR" 4
.el .IP "\fB\f(CB$exception\fB\->missing_methods\fR" 4
.IX Item "$exception->missing_methods"
This attribute is read-only, isa ArrayRef[Moose::Meta::Role::Method::Required]
and is required.
.Sp
This attribute has handles as follows:
    get_all_methods          => elements
    get_method_at            => get
    method_count             => count
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    \*(AqFoo3::Role|Bar3::Role|Baz3::Role\*(Aq requires the method \*(Aqfoo\*(Aq to be
\&implemented by \*(AqMy::Foo::Class::Broken3\*(Aq
.Ve
.SH "Moose::Exception::RoleDoesTheExcludedRole"
.IX Header "Moose::Exception::RoleDoesTheExcludedRole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->excluded_role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->excluded_role\fR" 4
.IX Item "$exception->excluded_role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->second_role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->second_role\fR" 4
.IX Item "$exception->second_role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The role Bar2 does the excluded role \*(AqBar3\*(Aq
.Ve
.SH "Moose::Exception::RoleExclusionConflict"
.IX Header "Moose::Exception::RoleExclusionConflict"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->roles\fR" 4
.el .IP "\fB\f(CB$exception\fB\->roles\fR" 4
.IX Item "$exception->roles"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 2
\&    Conflict detected: Role Foo1 excludes role \*(AqBar1\*(Aq
\&    Conflict detected: Roles Foo1, Baz1 exclude role \*(AqBar1\*(Aq
.Ve
.SH "Moose::Exception::RoleNameRequired"
.IX Header "Moose::Exception::RoleNameRequired"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply a role name to look for
.Ve
.SH "Moose::Exception::RoleNameRequiredForMooseMetaRole"
.IX Header "Moose::Exception::RoleNameRequiredForMooseMetaRole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply a role name to look for
.Ve
.SH "Moose::Exception::RoleNamesDoNotMatch"
.IX Header "Moose::Exception::RoleNamesDoNotMatch"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role and is required.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    role_name (Foo) does not match role\->name (JustATestRole)
.Ve
.SH "Moose::Exception::RolesDoNotSupportAugment"
.IX Header "Moose::Exception::RolesDoNotSupportAugment"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Roles cannot support \*(Aqaugment\*(Aq
.Ve
.SH "Moose::Exception::RolesDoNotSupportExtends"
.IX Header "Moose::Exception::RolesDoNotSupportExtends"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Roles do not support \*(Aqextends\*(Aq (you can use \*(Aqwith\*(Aq to specialize a role)
.Ve
.SH "Moose::Exception::RolesDoNotSupportInner"
.IX Header "Moose::Exception::RolesDoNotSupportInner"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Roles cannot support \*(Aqinner\*(Aq
.Ve
.SH "Moose::Exception::RolesDoNotSupportRegexReferencesForMethodModifiers"
.IX Header "Moose::Exception::RolesDoNotSupportRegexReferencesForMethodModifiers"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Role.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->modifier_type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->modifier_type\fR" 4
.IX Item "$exception->modifier_type"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Moose::Meta::Role, has a predicate
\&\f(CW\*(C`is_role_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->role_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role_name\fR" 4
.IX Item "$exception->role_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_role_name_set\*(C'\fR and is
 optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Roles do not currently support regex references for before method modifiers
.Ve
.SH "Moose::Exception::RolesInCreateTakesAnArrayRef"
.IX Header "Moose::Exception::RolesInCreateTakesAnArrayRef"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass an ARRAY ref of roles
.Ve
.SH "Moose::Exception::RolesListMustBeInstancesOfMooseMetaRole"
.IX Header "Moose::Exception::RolesListMustBeInstancesOfMooseMetaRole"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->role\fR" 4
.el .IP "\fB\f(CB$exception\fB\->role\fR" 4
.IX Item "$exception->role"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The list of roles must be instances of Moose::Meta::Role, not foo
.Ve
.SH "Moose::Exception::SingleParamsToNewMustBeHashRef"
.IX Header "Moose::Exception::SingleParamsToNewMustBeHashRef"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Single parameters to new() must be a HASH ref
.Ve
.SH "Moose::Exception::TriggerMustBeACodeRef"
.IX Header "Moose::Exception::TriggerMustBeACodeRef"
This class is a subclass of Moose::Exception and consume roles
Moose::Exception::Role::InvalidAttributeOptions and
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Trigger must be a CODE ref on attribute (bar)
.Ve
.SH "Moose::Exception::TypeConstraintCannotBeUsedForAParameterizableType"
.IX Header "Moose::Exception::TypeConstraintCannotBeUsedForAParameterizableType"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    The Int[Xyz] constraint cannot be used, because Int doesn\*(Aqt subtype or
\&coerce from a parameterizable type.
.Ve
.SH "Moose::Exception::TypeConstraintIsAlreadyCreated"
.IX Header "Moose::Exception::TypeConstraintIsAlreadyCreated"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->package_defined_in\fR" 4
.el .IP "\fB\f(CB$exception\fB\->package_defined_in\fR" 4
.IX Item "$exception->package_defined_in"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 6
\&    The type constraint \*(AqFoo1\*(Aq has already been created in Moose::Role and
\&cannot be created again in main
\&    The type constraint \*(AqFoo2\*(Aq has already been created in Moose and cannot be
\&created again in main
\&    The type constraint \*(AqFoo3\*(Aq has already been created in Moose and cannot be
\&created again in main
.Ve
.SH "Moose::Exception::TypeNamesDoNotMatch"
.IX Header "Moose::Exception::TypeNamesDoNotMatch"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint and is required.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str and is required.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    type_name (foo) does not match type\->name (bar)
.Ve
.SH "Moose::Exception::TypeParameterMustBeMooseMetaType"
.IX Header "Moose::Exception::TypeParameterMustBeMooseMetaType"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::TypeConstraint.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Meta::TypeConstraint, has a predicate
 \f(CW\*(C`is_type_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->type_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_name\fR" 4
.IX Item "$exception->type_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_type_name_set\*(C'\fR and is
 optional.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The type parameter must be a Moose meta type
.Ve
.SH "Moose::Exception::UnableToCanonicalizeHandles"
.IX Header "Moose::Exception::UnableToCanonicalizeHandles"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->handles\fR" 4
.el .IP "\fB\f(CB$exception\fB\->handles\fR" 4
.IX Item "$exception->handles"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Unable to canonicalize the \*(Aqhandles\*(Aq option with GLOB(0x109d0b0)
.Ve
.SH "Moose::Exception::UnableToCanonicalizeNonRolePackage"
.IX Header "Moose::Exception::UnableToCanonicalizeNonRolePackage"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->handles\fR" 4
.el .IP "\fB\f(CB$exception\fB\->handles\fR" 4
.IX Item "$exception->handles"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 2
\&    Unable to canonicalize the \*(Aqhandles\*(Aq option with Foo1 because its metaclass
\&is not a Moose::Meta::Role
.Ve
.SH "Moose::Exception::UnableToRecognizeDelegateMetaclass"
.IX Header "Moose::Exception::UnableToRecognizeDelegateMetaclass"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->delegate_metaclass\fR" 4
.el .IP "\fB\f(CB$exception\fB\->delegate_metaclass\fR" 4
.IX Item "$exception->delegate_metaclass"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Unable to recognize the delegate metaclass \*(AqClass::MOP::Package
.Ve
.SH "Moose::Exception::UndefinedHashKeysPassedToMethod"
.IX Header "Moose::Exception::UndefinedHashKeysPassedToMethod"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->hash_keys\fR" 4
.el .IP "\fB\f(CB$exception\fB\->hash_keys\fR" 4
.IX Item "$exception->hash_keys"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->method_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->method_name\fR" 4
.IX Item "$exception->method_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    Hash keys passed to set must be defined
.Ve
.SH "Moose::Exception::UnionCalledWithAnArrayRefAndAdditionalArgs"
.IX Header "Moose::Exception::UnionCalledWithAnArrayRefAndAdditionalArgs"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->args\fR" 4
.el .IP "\fB\f(CB$exception\fB\->args\fR" 4
.IX Item "$exception->args"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->array\fR" 4
.el .IP "\fB\f(CB$exception\fB\->array\fR" 4
.IX Item "$exception->array"
This attribute is read-only, isa ArrayRef and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    union called with an array reference and additional arguments
.Ve
.SH "Moose::Exception::UnionTakesAtleastTwoTypeNames"
.IX Header "Moose::Exception::UnionTakesAtleastTwoTypeNames"
This class is a subclass of Moose::Exception.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must pass in at least 2 type names to make a union
.Ve
.SH "Moose::Exception::ValidationFailedForInlineTypeConstraint"
.IX Header "Moose::Exception::ValidationFailedForInlineTypeConstraint"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Class.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Class::MOP::Class, has a predicate
\&\f(CW\*(C`is_class_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->class_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class_name\fR" 4
.IX Item "$exception->class_name"
This attribute is read-only, isa Str, has a predicate \f(CW\*(C`is_class_name_set\*(C'\fR and
is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->new_member\fR" 4
.el .IP "\fB\f(CB$exception\fB\->new_member\fR" 4
.IX Item "$exception->new_member"
This attribute is read-only, isa Bool, has a predicate \f(CW\*(C`is_a_new_member\*(C'\fR, has a
 default value 0 and is optional.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type_constraint_message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type_constraint_message\fR" 4
.IX Item "$exception->type_constraint_message"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->value\fR" 4
.IX Item "$exception->value"
This attribute is read-only, isa Any and is required.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 10
\&    Attribute (foo) does not pass the type constraint because: Validation failed
\& for \*(AqInt\*(Aq with value 10.5
\&    Attribute (a4) does not pass the type constraint because: Validation failed
\&for \*(AqArrayRef\*(Aq with value "invalid"
\&    Attribute (a4) does not pass the type constraint because: Validation failed
\&for \*(AqArrayRef\*(Aq with value "invalid"
\&    Attribute (a4) does not pass the type constraint because: Validation failed
\&for \*(AqArrayRef\*(Aq with value "invalid"
\&    Attribute (a4) does not pass the type constraint because: Validation failed
\&for \*(AqArrayRef\*(Aq with value "invalid"
\&    Attribute (from_parameterizable) does not pass the type constraint because:
\&Validation failed for \*(AqParameterizableArrayRef[Int]\*(Aq\eE with value "?Hello"?
\&    A new member value for foo does not pass its type constraint because:
\&Validation failed for \*(AqInt\*(Aq with value 1.2
.Ve
.SH "Moose::Exception::ValidationFailedForTypeConstraint"
.IX Header "Moose::Exception::ValidationFailedForTypeConstraint"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::Attribute.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute\fR" 4
.IX Item "$exception->attribute"
This attribute is read-only, isa Class::MOP::Attribute, has a predicate
\&\f(CW\*(C`is_attribute_set\*(C'\fR and is optional.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.ie n .IP "\fB\fB$exception\fB\->type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->type\fR" 4
.IX Item "$exception->type"
This attribute is read-only, isa Moose::Util::TypeConstraints and is required.
.ie n .IP "\fB\fB$exception\fB\->value\fR" 4
.el .IP "\fB\f(CB$exception\fB\->value\fR" 4
.IX Item "$exception->value"
This attribute is read-only, isa Any and is required.
.PP
Sample Error Messages:
.IX Subsection "Sample Error Messages:"
.PP
.Vb 3
\&    Attribute (bar) does not pass the type constraint because: Validation failed
\& for \*(AqInt\*(Aq with value "test"
\&    Validation failed for \*(AqOnlyPositiveInts\*(Aq with value \-123
.Ve
.SH "Moose::Exception::WrapTakesACodeRefToBless"
.IX Header "Moose::Exception::WrapTakesACodeRefToBless"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->class\fR" 4
.el .IP "\fB\f(CB$exception\fB\->class\fR" 4
.IX Item "$exception->class"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->code\fR" 4
.el .IP "\fB\f(CB$exception\fB\->code\fR" 4
.IX Item "$exception->code"
This attribute is read-only, isa Any and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    You must supply a CODE reference to bless, not (foo)
.Ve
.SH "Moose::Exception::WrongTypeConstraintGiven"
.IX Header "Moose::Exception::WrongTypeConstraintGiven"
This class is a subclass of Moose::Exception and consumes role
Moose::Exception::Role::ParamsHash.
.SS "\s-1ATTRIBUTES\s0"
.IX Subsection "ATTRIBUTES"
.ie n .IP "\fB\fB$exception\fB\->attribute_name\fR" 4
.el .IP "\fB\f(CB$exception\fB\->attribute_name\fR" 4
.IX Item "$exception->attribute_name"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->given_type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->given_type\fR" 4
.IX Item "$exception->given_type"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->message\fR" 4
.el .IP "\fB\f(CB$exception\fB\->message\fR" 4
.IX Item "$exception->message"
This attribute is read-only and isa Str. It is lazy and has a default value
\&'Error'.
.ie n .IP "\fB\fB$exception\fB\->params\fR" 4
.el .IP "\fB\f(CB$exception\fB\->params\fR" 4
.IX Item "$exception->params"
This attribute is read-only, isa HashRef and is required.
.ie n .IP "\fB\fB$exception\fB\->required_type\fR" 4
.el .IP "\fB\f(CB$exception\fB\->required_type\fR" 4
.IX Item "$exception->required_type"
This attribute is read-only, isa Str and is required.
.ie n .IP "\fB\fB$exception\fB\->trace\fR" 4
.el .IP "\fB\f(CB$exception\fB\->trace\fR" 4
.IX Item "$exception->trace"
This attribute is read-only and isa Devel::StackTrace. It is lazy & dependent
 on \f(CW$exception\fR\->message.
.PP
Sample Error Message:
.IX Subsection "Sample Error Message:"
.PP
.Vb 1
\&    The type constraint for foo must be a subtype of ArrayRef but it\*(Aqs a Int
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Stevan Little <stevan.little@iinteractive.com>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.IP "\(bu" 4
Jesse Luehrs <doy@tozt.net>
.IP "\(bu" 4
Shawn M Moore <code@sartak.org>
.IP "\(bu" 4
\&\s-1XXXX XXX\s0'\s-1XX \s0(Yuval Kogman) <nothingmuch@woobling.org>
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Hans Dieter Pearcey <hdp@weftsoar.net>
.IP "\(bu" 4
Chris Prather <chris@prather.org>
.IP "\(bu" 4
Matt S Trout <mst@shadowcat.co.uk>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc..
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
