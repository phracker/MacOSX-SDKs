.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Server::Proto::UNIX 3"
.TH Net::Server::Proto::UNIX 3 "2017-08-10" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Server::Proto::UNIX \- Net::Server UNIX protocol.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
See Net::Server::Proto.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Protocol module for Net::Server.  This module implements the \s-1UNIX
SOCK_STREAM\s0 socket type.  See Net::Server::Proto.
.PP
Any sockets created during startup will be chown'ed to the user and
group specified in the starup arguments.
.SH "PARAMETERS"
.IX Header "PARAMETERS"
The following paramaters may be specified in addition to normal
command line parameters for a Net::Server.  See Net::Server for
more information on reading arguments.
.IP "unix_type" 4
.IX Item "unix_type"
Can be either \s-1SOCK_STREAM\s0 or \s-1SOCK_DGRAM\s0 (default is \s-1SOCK_STREAM\s0).
This can also be passed on the port line (see Net::Server::Proto).
.Sp
However, this method is deprecated.  If you want \s-1SOCK_STREAM\s0 \- just
use proto \s-1UNIX\s0 without any other arguments.  If you'd like \s-1SOCK_DGRAM,\s0
use the new proto \s-1UNIXDGRAM.\s0
.SH "METHODS"
.IX Header "METHODS"
.IP "NS_unix_path/NS_unix_type" 4
.IX Item "NS_unix_path/NS_unix_type"
In addition to the standard \s-1NS_\s0 methods of Net::Server::Proto classes,
the \s-1UNIX\s0 types also have legacy calls to NS_unix_path and
NS_unix_type.
.Sp
Since version 2.000, NS_unix_path is simply an alias to NS_port.
NS_unix_type is now redundant with NS_proto.
.Sp
These methods were missing between version 2.000 and 2.003 but have
been returned as legacy bridges.
.SH "QUICK PARAMETER LIST"
.IX Header "QUICK PARAMETER LIST"
.Vb 1
\&  Key               Value                    Default
\&
\&  # deprecated UNIX socket parameters
\&  unix_type         (SOCK_STREAM|SOCK_DGRAM) SOCK_STREAM
\&  port              "filename"               undef
\&
\&  # more recent usage
\&  port              "filename / UNIX"
\&  port              "filename / UNIXDGRAM"
.Ve
.SH "LICENCE"
.IX Header "LICENCE"
Distributed under the same terms as Net::Server
