.TH "MPSCNNMultiplyGradient" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNMultiplyGradient
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSCNNMath\&.h>\fP
.PP
Inherits \fBMPSCNNArithmeticGradient\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:isSecondarySourceFilter:\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework\&.  Specifies the multiplication gradient operator\&. This arithmetic gradient filter requires the following inputs: gradient image from the previous layer (going backwards) and either the primary or the secondary source image from the forward pass\&. You will need a separate filter for the primary and secondary source images\&.
.PP
Without broadcasting, the arithmetic multiply gradient operation is an element-wise multiplication operation between the gradient image from the previous layer (going backwards) and:
.IP "\(bu" 2
The secondary source image from the forward pass for the primary source filter (for x * y, d/dx(x * y) = y)\&.
.IP "\(bu" 2
The primary source image from the forward pass for the secondary source filter (for x * y, d/dy(x * y) = x)\&.
.PP
.PP
Setting the broadcasting parameters results in a reduction operation (sum) across all of the applicable broadcasting dimensions (rows, columns, feature channels, or any combination thereof) to produce the destination image of the size that matches the primary/secondary input images used in the forward pass\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(BOOL) isSecondarySourceFilter"
Initialize the multiplication gradient operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device the filter will run on\&. 
.br
\fIisSecondarySourceFilter\fP \fBA\fP boolean indicating whether the arithmetic gradient filter is operating on the primary or secondary source image from the forward pass\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP valid \fBMPSCNNMultiplyGradient\fP object or nil, if failure\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSCNNArithmeticGradient\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
