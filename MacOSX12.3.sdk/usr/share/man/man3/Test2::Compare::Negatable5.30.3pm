.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Compare::Negatable 3"
.TH Test2::Compare::Negatable 3 "2020-10-22" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test2::Compare::Negatable \- Poor mans 'role' for compare objects that can be negated.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Using this package inside an Test2::Compare::Base subclass will overload
\&\f(CW\*(C`!$obj\*(C'\fR and import \f(CW\*(C`clone_negate()\*(C'\fR and \f(CW\*(C`toggle_negate()\*(C'\fR.
.SH "WHY?"
.IX Header "WHY?"
Until perl 5.18 the 'fallback' parameter to overload would not be inherited,
so we cannot use inheritance for the behavior we actually want. This module
works around the problem by emulating the \f(CW\*(C`use overload\*(C'\fR call we want for each
consumer class.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.ie n .IP "$bool = $obj\->negate" 4
.el .IP "\f(CW$bool\fR = \f(CW$obj\fR\->negate" 4
.IX Item "$bool = $obj->negate"
.PD 0
.ie n .IP "$obj\->set_negate($bool)" 4
.el .IP "\f(CW$obj\fR\->set_negate($bool)" 4
.IX Item "$obj->set_negate($bool)"
.ie n .IP "$attr = \s-1\fBNEGATE\s0()\fR" 4
.el .IP "\f(CW$attr\fR = \s-1\fBNEGATE\s0()\fR" 4
.IX Item "$attr = NEGATE()"
.PD
The \s-1NEGATE\s0 attribute will be added via Test2::Util::HashBase.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP "$clone = $obj\->\fBclone_negate()\fR" 4
.el .IP "\f(CW$clone\fR = \f(CW$obj\fR\->\fBclone_negate()\fR" 4
.IX Item "$clone = $obj->clone_negate()"
Create a shallow copy of the object, and call \f(CW\*(C`toggle_negate\*(C'\fR on it.
.ie n .IP "$obj\->\fBtoggle_negate()\fR" 4
.el .IP "\f(CW$obj\fR\->\fBtoggle_negate()\fR" 4
.IX Item "$obj->toggle_negate()"
Toggle the negate attribute. If the attribute was on it will now be off, if it
was off it will now be on.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Suite can be found at
\&\fIhttps://github.com/Test\-More/Test2\-Suite/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2018 Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
