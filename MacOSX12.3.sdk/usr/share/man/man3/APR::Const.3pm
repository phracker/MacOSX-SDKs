.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "install::TempContent::Objects::mod_perl-2.0.9::docs::api::APR::Const 3"
.TH install::TempContent::Objects::mod_perl-2.0.9::docs::api::APR::Const 3 "2015-06-18" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
APR::Const \- Perl Interface for APR Constants
.SH "Synopsis"
.IX Header "Synopsis"
.Vb 2
\&  # make the constants available but don\*(Aqt import them
\&  use APR::Const \-compile => qw(constant names ...);
\&  
\&  # w/o the => syntax sugar
\&  use APR::Const ("\-compile", qw(constant names ...));
\&  
\&  # compile and import the constants
\&  use APR::Const qw(constant names ...);
.Ve
.SH "Description"
.IX Header "Description"
This package contains constants specific to \f(CW\*(C`APR\*(C'\fR features.
.PP
Refer to \f(CW\*(C`the Apache2::Const description
section\*(C'\fR for more
information.
.SH "Constants"
.IX Header "Constants"
.ie n .SS """:common"""
.el .SS "\f(CW:common\fP"
.IX Subsection ":common"
.Vb 1
\&  use APR::Const \-compile => qw(:common);
.Ve
.PP
The \f(CW\*(C`:common\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::SUCCESS\*(C'\fI\fR
.IX Subsection "APR::Const::SUCCESS"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:error"""
.el .SS "\f(CW:error\fP"
.IX Subsection ":error"
.Vb 1
\&  use APR::Const \-compile => qw(:error);
.Ve
.PP
The \f(CW\*(C`:error\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::EABOVEROOT\*(C'\fI\fR
.IX Subsection "APR::Const::EABOVEROOT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EABSOLUTE\*(C'\fI\fR
.IX Subsection "APR::Const::EABSOLUTE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EACCES\*(C'\fI\fR
.IX Subsection "APR::Const::EACCES"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Due to possible variants in conditions matching \f(CW\*(C`EACCES\*(C'\fR, 
for checking error codes against this you most likely want to use the
\&\f(CW\*(C`APR::Status::is_EACCES\*(C'\fR
function instead.
.PP
\fI\f(CI\*(C`APR::Const::EAGAIN\*(C'\fI\fR
.IX Subsection "APR::Const::EAGAIN"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
The error \fIResource temporarily unavailable\fR, may be returned by many
different system calls, especially \s-1IO\s0 calls. Most likely you want to
use the
\&\f(CW\*(C`APR::Status::is_EAGAIN\*(C'\fR
function instead.
.PP
\fI\f(CI\*(C`APR::Const::EBADDATE\*(C'\fI\fR
.IX Subsection "APR::Const::EBADDATE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EBADF\*(C'\fI\fR
.IX Subsection "APR::Const::EBADF"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EBADIP\*(C'\fI\fR
.IX Subsection "APR::Const::EBADIP"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EBADMASK\*(C'\fI\fR
.IX Subsection "APR::Const::EBADMASK"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EBADPATH\*(C'\fI\fR
.IX Subsection "APR::Const::EBADPATH"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EBUSY\*(C'\fI\fR
.IX Subsection "APR::Const::EBUSY"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ECONNABORTED\*(C'\fI\fR
.IX Subsection "APR::Const::ECONNABORTED"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Due to possible variants in conditions matching \f(CW\*(C`ECONNABORTED\*(C'\fR, 
for checking error codes against this you most likely want to use the
\&\f(CW\*(C`APR::Status::is_ECONNABORTED\*(C'\fR
function instead.
.PP
\fI\f(CI\*(C`APR::Const::ECONNREFUSED\*(C'\fI\fR
.IX Subsection "APR::Const::ECONNREFUSED"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ECONNRESET\*(C'\fI\fR
.IX Subsection "APR::Const::ECONNRESET"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Due to possible variants in conditions matching \f(CW\*(C`ECONNRESET\*(C'\fR, for
checking error codes against this you most likely want to use the
\&\f(CW\*(C`APR::Status::is_ECONNRESET\*(C'\fR
function instead.
.PP
\fI\f(CI\*(C`APR::Const::EDSOOPEN\*(C'\fI\fR
.IX Subsection "APR::Const::EDSOOPEN"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EEXIST\*(C'\fI\fR
.IX Subsection "APR::Const::EEXIST"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EFTYPE\*(C'\fI\fR
.IX Subsection "APR::Const::EFTYPE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EGENERAL\*(C'\fI\fR
.IX Subsection "APR::Const::EGENERAL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EHOSTUNREACH\*(C'\fI\fR
.IX Subsection "APR::Const::EHOSTUNREACH"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EINCOMPLETE\*(C'\fI\fR
.IX Subsection "APR::Const::EINCOMPLETE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EINIT\*(C'\fI\fR
.IX Subsection "APR::Const::EINIT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EINPROGRESS\*(C'\fI\fR
.IX Subsection "APR::Const::EINPROGRESS"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EINTR\*(C'\fI\fR
.IX Subsection "APR::Const::EINTR"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EINVAL\*(C'\fI\fR
.IX Subsection "APR::Const::EINVAL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EINVALSOCK\*(C'\fI\fR
.IX Subsection "APR::Const::EINVALSOCK"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EMFILE\*(C'\fI\fR
.IX Subsection "APR::Const::EMFILE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EMISMATCH\*(C'\fI\fR
.IX Subsection "APR::Const::EMISMATCH"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENAMETOOLONG\*(C'\fI\fR
.IX Subsection "APR::Const::ENAMETOOLONG"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::END\*(C'\fI\fR
.IX Subsection "APR::Const::END"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENETUNREACH\*(C'\fI\fR
.IX Subsection "APR::Const::ENETUNREACH"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENFILE\*(C'\fI\fR
.IX Subsection "APR::Const::ENFILE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENODIR\*(C'\fI\fR
.IX Subsection "APR::Const::ENODIR"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOENT\*(C'\fI\fR
.IX Subsection "APR::Const::ENOENT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Due to possible variants in conditions matching \f(CW\*(C`ENOENT\*(C'\fR, 
for checking error codes against this you most likely want to use the
\&\f(CW\*(C`APR::Status::is_ENOENT\*(C'\fR
function instead.
.PP
\fI\f(CI\*(C`APR::Const::ENOLOCK\*(C'\fI\fR
.IX Subsection "APR::Const::ENOLOCK"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOMEM\*(C'\fI\fR
.IX Subsection "APR::Const::ENOMEM"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOPOLL\*(C'\fI\fR
.IX Subsection "APR::Const::ENOPOLL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOPOOL\*(C'\fI\fR
.IX Subsection "APR::Const::ENOPOOL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOPROC\*(C'\fI\fR
.IX Subsection "APR::Const::ENOPROC"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOSHMAVAIL\*(C'\fI\fR
.IX Subsection "APR::Const::ENOSHMAVAIL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOSOCKET\*(C'\fI\fR
.IX Subsection "APR::Const::ENOSOCKET"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOSPC\*(C'\fI\fR
.IX Subsection "APR::Const::ENOSPC"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOSTAT\*(C'\fI\fR
.IX Subsection "APR::Const::ENOSTAT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOTDIR\*(C'\fI\fR
.IX Subsection "APR::Const::ENOTDIR"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOTEMPTY\*(C'\fI\fR
.IX Subsection "APR::Const::ENOTEMPTY"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOTHDKEY\*(C'\fI\fR
.IX Subsection "APR::Const::ENOTHDKEY"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOTHREAD\*(C'\fI\fR
.IX Subsection "APR::Const::ENOTHREAD"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOTIME\*(C'\fI\fR
.IX Subsection "APR::Const::ENOTIME"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOTIMPL\*(C'\fI\fR
.IX Subsection "APR::Const::ENOTIMPL"
.PP
Something is not implemented
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ENOTSOCK\*(C'\fI\fR
.IX Subsection "APR::Const::ENOTSOCK"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EOF\*(C'\fI\fR
.IX Subsection "APR::Const::EOF"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Due to possible variants in conditions matching \f(CW\*(C`EOF\*(C'\fR, 
for checking error codes against this you most likely want to use the
\&\f(CW\*(C`APR::Status::is_EOF\*(C'\fR
function instead.
.PP
\fI\f(CI\*(C`APR::Const::EPATHWILD\*(C'\fI\fR
.IX Subsection "APR::Const::EPATHWILD"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EPIPE\*(C'\fI\fR
.IX Subsection "APR::Const::EPIPE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EPROC_UNKNOWN\*(C'\fI\fR
.IX Subsection "APR::Const::EPROC_UNKNOWN"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ERELATIVE\*(C'\fI\fR
.IX Subsection "APR::Const::ERELATIVE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ESPIPE\*(C'\fI\fR
.IX Subsection "APR::Const::ESPIPE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ESYMNOTFOUND\*(C'\fI\fR
.IX Subsection "APR::Const::ESYMNOTFOUND"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::ETIMEDOUT\*(C'\fI\fR
.IX Subsection "APR::Const::ETIMEDOUT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::EXDEV\*(C'\fI\fR
.IX Subsection "APR::Const::EXDEV"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:fopen"""
.el .SS "\f(CW:fopen\fP"
.IX Subsection ":fopen"
.Vb 1
\&  use APR::Const \-compile => qw(:fopen);
.Ve
.PP
The \f(CW\*(C`:fopen\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_BINARY\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_BINARY"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_BUFFERED\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_BUFFERED"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_CREATE\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_CREATE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_DELONCLOSE\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_DELONCLOSE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_EXCL\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_EXCL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_PEND\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_PEND"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_READ\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_READ"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_TRUNCATE\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_TRUNCATE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FOPEN_WRITE\*(C'\fI\fR
.IX Subsection "APR::Const::FOPEN_WRITE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:filepath"""
.el .SS "\f(CW:filepath\fP"
.IX Subsection ":filepath"
.Vb 1
\&  use APR::Const \-compile => qw(:filepath);
.Ve
.PP
The \f(CW\*(C`:filepath\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_ENCODING_LOCALE\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_ENCODING_LOCALE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_ENCODING_UNKNOWN\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_ENCODING_UNKNOWN"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_ENCODING_UTF8\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_ENCODING_UTF8"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_NATIVE\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_NATIVE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_NOTABOVEROOT\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_NOTABOVEROOT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_NOTABSOLUTE\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_NOTABSOLUTE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_NOTRELATIVE\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_NOTRELATIVE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_SECUREROOT\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_SECUREROOT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_SECUREROOTTEST\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_SECUREROOTTEST"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILEPATH_TRUENAME\*(C'\fI\fR
.IX Subsection "APR::Const::FILEPATH_TRUENAME"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:fprot"""
.el .SS "\f(CW:fprot\fP"
.IX Subsection ":fprot"
.Vb 1
\&  use APR::Const \-compile => qw(:fprot);
.Ve
.PP
The \f(CW\*(C`:fprot\*(C'\fR group is used by
\&\f(CW\*(C`$finfo\->protection\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::FPROT_GEXECUTE\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_GEXECUTE"
.PP
Execute by group
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_GREAD\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_GREAD"
.PP
Read by group
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_GSETID\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_GSETID"
.PP
Set group id
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_GWRITE\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_GWRITE"
.PP
Write by group
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_OS_DEFAULT\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_OS_DEFAULT"
.PP
use \s-1OS\s0's default permissions
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_UEXECUTE\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_UEXECUTE"
.PP
Execute by user
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_UREAD\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_UREAD"
.PP
Read by user
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_USETID\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_USETID"
.PP
Set user id
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_UWRITE\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_UWRITE"
.PP
Write by user
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_WEXECUTE\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_WEXECUTE"
.PP
Execute by others
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_WREAD\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_WREAD"
.PP
Read by others
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_WSTICKY\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_WSTICKY"
.PP
Sticky bit
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FPROT_WWRITE\*(C'\fI\fR
.IX Subsection "APR::Const::FPROT_WWRITE"
.PP
Write by others
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:filetype"""
.el .SS "\f(CW:filetype\fP"
.IX Subsection ":filetype"
.Vb 1
\&  use APR::Const \-compile => qw(:filetype);
.Ve
.PP
The \f(CW\*(C`:filetype\*(C'\fR group is used by
\&\f(CW\*(C`$finfo\->filetype\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_BLK\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_BLK"
.PP
a file is a block device
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_CHR\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_CHR"
.PP
a file is a character device
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_DIR\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_DIR"
.PP
a file is a directory
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_LNK\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_LNK"
.PP
a file is a symbolic link
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_NOFILE\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_NOFILE"
.PP
the file type is undedetermined.
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_PIPE\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_PIPE"
.PP
a file is a \s-1FIFO\s0 or a pipe.
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_REG\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_REG"
.PP
a file is a regular file.
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_SOCK\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_SOCK"
.PP
a file is a [unix domain] socket.
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FILETYPE_UNKFILE\*(C'\fI\fR
.IX Subsection "APR::Const::FILETYPE_UNKFILE"
.PP
a file is of some other unknown type or the type cannot be determined.
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:finfo"""
.el .SS "\f(CW:finfo\fP"
.IX Subsection ":finfo"
.Vb 1
\&  use APR::Const \-compile => qw(:finfo);
.Ve
.PP
The \f(CW\*(C`:finfo\*(C'\fR group is used by
\&\f(CW\*(C`stat()\*(C'\fR and
\&\f(CW\*(C`$finfo\->valid\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::FINFO_ATIME\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_ATIME"
.PP
Access Time
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_CSIZE\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_CSIZE"
.PP
Storage size consumed by the file
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_CTIME\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_CTIME"
.PP
Creation Time
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_DEV\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_DEV"
.PP
Device
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_DIRENT\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_DIRENT"
.PP
an atomic unix \fBapr_dir_read()\fR
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_GPROT\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_GPROT"
.PP
Group protection bits
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_GROUP\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_GROUP"
.PP
Group id
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_ICASE\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_ICASE"
.PP
whether device is case insensitive
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_IDENT\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_IDENT"
.PP
device and inode
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_INODE\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_INODE"
.PP
Inode
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_LINK\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_LINK"
.PP
Stat the link not the file itself if it is a link
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_MIN\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_MIN"
.PP
type, mtime, ctime, atime, size
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_MTIME\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_MTIME"
.PP
Modification Time
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_NAME\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_NAME"
.PP
name in proper case
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_NLINK\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_NLINK"
.PP
Number of links
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_NORM\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_NORM"
.PP
All fields provided by an atomic unix \fBapr_stat()\fR
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_OWNER\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_OWNER"
.PP
user and group
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_PROT\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_PROT"
.PP
all protections
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_SIZE\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_SIZE"
.PP
Size of the file
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_TYPE\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_TYPE"
.PP
Type
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_UPROT\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_UPROT"
.PP
User protection bits
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_USER\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_USER"
.PP
User id
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FINFO_WPROT\*(C'\fI\fR
.IX Subsection "APR::Const::FINFO_WPROT"
.PP
World protection bits
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:flock"""
.el .SS "\f(CW:flock\fP"
.IX Subsection ":flock"
.Vb 1
\&  use APR::Const \-compile => qw(:flock);
.Ve
.PP
The \f(CW\*(C`:flock\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::FLOCK_EXCLUSIVE\*(C'\fI\fR
.IX Subsection "APR::Const::FLOCK_EXCLUSIVE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FLOCK_NONBLOCK\*(C'\fI\fR
.IX Subsection "APR::Const::FLOCK_NONBLOCK"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FLOCK_SHARED\*(C'\fI\fR
.IX Subsection "APR::Const::FLOCK_SHARED"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::FLOCK_TYPEMASK\*(C'\fI\fR
.IX Subsection "APR::Const::FLOCK_TYPEMASK"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:hook"""
.el .SS "\f(CW:hook\fP"
.IX Subsection ":hook"
.Vb 1
\&  use APR::Const \-compile => qw(:hook);
.Ve
.PP
The \f(CW\*(C`:hook\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::HOOK_FIRST\*(C'\fI\fR
.IX Subsection "APR::Const::HOOK_FIRST"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::HOOK_LAST\*(C'\fI\fR
.IX Subsection "APR::Const::HOOK_LAST"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::HOOK_MIDDLE\*(C'\fI\fR
.IX Subsection "APR::Const::HOOK_MIDDLE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::HOOK_REALLY_FIRST\*(C'\fI\fR
.IX Subsection "APR::Const::HOOK_REALLY_FIRST"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::HOOK_REALLY_LAST\*(C'\fI\fR
.IX Subsection "APR::Const::HOOK_REALLY_LAST"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:limit"""
.el .SS "\f(CW:limit\fP"
.IX Subsection ":limit"
.Vb 1
\&  use APR::Const \-compile => qw(:limit);
.Ve
.PP
The \f(CW\*(C`:limit\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::LIMIT_CPU\*(C'\fI\fR
.IX Subsection "APR::Const::LIMIT_CPU"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LIMIT_MEM\*(C'\fI\fR
.IX Subsection "APR::Const::LIMIT_MEM"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LIMIT_NOFILE\*(C'\fI\fR
.IX Subsection "APR::Const::LIMIT_NOFILE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LIMIT_NPROC\*(C'\fI\fR
.IX Subsection "APR::Const::LIMIT_NPROC"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:lockmech"""
.el .SS "\f(CW:lockmech\fP"
.IX Subsection ":lockmech"
.Vb 1
\&  use APR::Const \-compile => qw(:lockmech);
.Ve
.PP
The \f(CW\*(C`:lockmech\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::LOCK_DEFAULT\*(C'\fI\fR
.IX Subsection "APR::Const::LOCK_DEFAULT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LOCK_FCNTL\*(C'\fI\fR
.IX Subsection "APR::Const::LOCK_FCNTL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LOCK_FLOCK\*(C'\fI\fR
.IX Subsection "APR::Const::LOCK_FLOCK"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LOCK_POSIXSEM\*(C'\fI\fR
.IX Subsection "APR::Const::LOCK_POSIXSEM"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LOCK_PROC_PTHREAD\*(C'\fI\fR
.IX Subsection "APR::Const::LOCK_PROC_PTHREAD"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::LOCK_SYSVSEM\*(C'\fI\fR
.IX Subsection "APR::Const::LOCK_SYSVSEM"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:poll"""
.el .SS "\f(CW:poll\fP"
.IX Subsection ":poll"
.Vb 1
\&  use APR::Const \-compile => qw(:poll);
.Ve
.PP
The \f(CW\*(C`:poll\*(C'\fR group is used by
\&\f(CW\*(C`poll\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::POLLERR\*(C'\fI\fR
.IX Subsection "APR::Const::POLLERR"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Pending error
.PP
\fI\f(CI\*(C`APR::Const::POLLHUP\*(C'\fI\fR
.IX Subsection "APR::Const::POLLHUP"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Hangup occurred
.PP
\fI\f(CI\*(C`APR::Const::POLLIN\*(C'\fI\fR
.IX Subsection "APR::Const::POLLIN"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Can read without blocking
.PP
\fI\f(CI\*(C`APR::Const::POLLNVAL\*(C'\fI\fR
.IX Subsection "APR::Const::POLLNVAL"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Descriptior invalid
.PP
\fI\f(CI\*(C`APR::Const::POLLOUT\*(C'\fI\fR
.IX Subsection "APR::Const::POLLOUT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Can write without blocking
.PP
\fI\f(CI\*(C`APR::Const::POLLPRI\*(C'\fI\fR
.IX Subsection "APR::Const::POLLPRI"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Priority data available
.ie n .SS """:read_type"""
.el .SS "\f(CW:read_type\fP"
.IX Subsection ":read_type"
.Vb 1
\&  use APR::Const \-compile => qw(:read_type);
.Ve
.PP
The \f(CW\*(C`:read_type\*(C'\fR group is for \s-1IO\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::BLOCK_READ\*(C'\fI\fR
.IX Subsection "APR::Const::BLOCK_READ"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
the read function blocks
.PP
\fI\f(CI\*(C`APR::Const::NONBLOCK_READ\*(C'\fI\fR
.IX Subsection "APR::Const::NONBLOCK_READ"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
the read function does not block
.ie n .SS """:shutdown_how"""
.el .SS "\f(CW:shutdown_how\fP"
.IX Subsection ":shutdown_how"
.Vb 1
\&  use APR::Const \-compile => qw(:shutdown_how);
.Ve
.PP
The \f(CW\*(C`:shutdown_how\*(C'\fR group is for \s-1XXX\s0 constants.
.PP
\fI\f(CI\*(C`APR::Const::SHUTDOWN_READ\*(C'\fI\fR
.IX Subsection "APR::Const::SHUTDOWN_READ"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SHUTDOWN_READWRITE\*(C'\fI\fR
.IX Subsection "APR::Const::SHUTDOWN_READWRITE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SHUTDOWN_WRITE\*(C'\fI\fR
.IX Subsection "APR::Const::SHUTDOWN_WRITE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:socket"""
.el .SS "\f(CW:socket\fP"
.IX Subsection ":socket"
.Vb 1
\&  use APR::Const \-compile => qw(:socket);
.Ve
.PP
The \f(CW\*(C`:socket\*(C'\fR group is for the
\&\f(CW\*(C`APR::Socket\*(C'\fR object constants, in
methods \f(CW\*(C`opt_get\*(C'\fR and
\&\f(CW\*(C`opt_set\*(C'\fR.
.PP
The following section discusses in detail each of the \f(CW\*(C`:socket\*(C'\fR
constants.
.PP
\fI\f(CI\*(C`APR::Const::SO_DEBUG\*(C'\fI\fR
.IX Subsection "APR::Const::SO_DEBUG"
.PP
Possible values:
.PP
\&\s-1XXX\s0
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Turns on debugging information
.PP
\fI\f(CI\*(C`APR::Const::SO_DISCONNECTED\*(C'\fI\fR
.IX Subsection "APR::Const::SO_DISCONNECTED"
.PP
Queries the disconnected state of the socket.  (Currently only used on
Windows)
.PP
Possible values:
.PP
\&\s-1XXX\s0
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SO_KEEPALIVE\*(C'\fI\fR
.IX Subsection "APR::Const::SO_KEEPALIVE"
.PP
Keeps connections active
.PP
Possible values:
.PP
\&\s-1XXX\s0
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SO_LINGER\*(C'\fI\fR
.IX Subsection "APR::Const::SO_LINGER"
.PP
Lingers on close if data is present
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SO_NONBLOCK\*(C'\fI\fR
.IX Subsection "APR::Const::SO_NONBLOCK"
.PP
Turns blocking \s-1IO\s0 mode on/off for socket.
.PP
Possible values:
.PP
.Vb 2
\&  1 nonblocking
\&  0 blocking
.Ve
.PP
For example, to set a socket to a blocking \s-1IO\s0 mode:
.PP
.Vb 6
\&  use APR::Socket ();
\&  use APR::Const    \-compile => qw(SO_NONBLOCK);
\&  ...
\&  if ($socket\->opt_get(APR::Const::SO_NONBLOCK)) {
\&      $socket\->opt_set(APR::Const::SO_NONBLOCK => 0);
\&  }
.Ve
.PP
You don't have to query for this option, before setting it. It was
done for the demonstration purpose.
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SO_RCVBUF\*(C'\fI\fR
.IX Subsection "APR::Const::SO_RCVBUF"
.PP
Controls the \f(CW\*(C`ReceiveBufferSize\*(C'\fR setting
.PP
Possible values:
.PP
\&\s-1XXX\s0
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SO_REUSEADDR\*(C'\fI\fR
.IX Subsection "APR::Const::SO_REUSEADDR"
.PP
The rules used in validating addresses supplied to bind should allow
reuse of local addresses.
.PP
Possible values:
.PP
\&\s-1XXX\s0
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::SO_SNDBUF\*(C'\fI\fR
.IX Subsection "APR::Const::SO_SNDBUF"
.PP
Controls the \f(CW\*(C`SendBufferSize\*(C'\fR setting
.PP
Possible values:
.PP
\&\s-1XXX\s0
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.ie n .SS """:status"""
.el .SS "\f(CW:status\fP"
.IX Subsection ":status"
.Vb 1
\&  use APR::Const \-compile => qw(:status);
.Ve
.PP
The \f(CW\*(C`:status\*(C'\fR group is for the \s-1API\s0 that return status code, or set
the error variable \s-1XXXXXX.\s0
.PP
The following section discusses in detail each of the available
\&\f(CW\*(C`:status\*(C'\fR constants.
.PP
\fI\f(CI\*(C`APR::Const::TIMEUP\*(C'\fI\fR
.IX Subsection "APR::Const::TIMEUP"
.PP
The operation did not finish before the timeout.
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
Due to possible variants in conditions matching \f(CW\*(C`TIMEUP\*(C'\fR, 
for checking error codes against this you most likely want to use the
\&\f(CW\*(C`APR::Status::is_TIMEUP\*(C'\fR
function instead.
.ie n .SS """:table"""
.el .SS "\f(CW:table\fP"
.IX Subsection ":table"
.Vb 1
\&  use APR::Const \-compile => qw(:table);
.Ve
.PP
The \f(CW\*(C`:table\*(C'\fR group is for \f(CW\*(C`overlap()\*(C'\fR and \f(CW\*(C`compress()\*(C'\fR constants.
See \f(CW\*(C`APR::Table\*(C'\fR for details.
.PP
\fI\f(CI\*(C`APR::Const::OVERLAP_TABLES_MERGE\*(C'\fI\fR
.IX Subsection "APR::Const::OVERLAP_TABLES_MERGE"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::Table::compress\*(C'\fR
and \f(CW\*(C`APR::Table::overlap\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::OVERLAP_TABLES_SET\*(C'\fI\fR
.IX Subsection "APR::Const::OVERLAP_TABLES_SET"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::Table::compress\*(C'\fR
and \f(CW\*(C`APR::Table::overlap\*(C'\fR.
.ie n .SS """:uri"""
.el .SS "\f(CW:uri\fP"
.IX Subsection ":uri"
.Vb 1
\&  use APR::Const \-compile => qw(:uri);
.Ve
.PP
The \f(CW\*(C`:uri\*(C'\fR group of constants is for manipulating URIs.
.PP
\fI\f(CI\*(C`APR::Const::URI_ACAP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_ACAP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_FTP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_FTP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_GOPHER_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_GOPHER_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_HTTPS_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_HTTPS_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_HTTP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_HTTP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_IMAP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_IMAP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_LDAP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_LDAP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_NFS_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_NFS_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_NNTP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_NNTP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_POP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_POP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_PROSPERO_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_PROSPERO_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_RTSP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_RTSP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_SIP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_SIP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_SNEWS_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_SNEWS_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_SSH_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_SSH_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_TELNET_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_TELNET_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_TIP_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_TIP_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_UNP_OMITPASSWORD\*(C'\fI\fR
.IX Subsection "APR::Const::URI_UNP_OMITPASSWORD"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::URI::unparse\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::URI_UNP_OMITPATHINFO\*(C'\fI\fR
.IX Subsection "APR::Const::URI_UNP_OMITPATHINFO"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::URI::unparse\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::URI_UNP_OMITQUERY\*(C'\fI\fR
.IX Subsection "APR::Const::URI_UNP_OMITQUERY"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::URI::unparse\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::URI_UNP_OMITSITEPART\*(C'\fI\fR
.IX Subsection "APR::Const::URI_UNP_OMITSITEPART"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::URI::unparse\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::URI_UNP_OMITUSER\*(C'\fI\fR
.IX Subsection "APR::Const::URI_UNP_OMITUSER"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::URI::unparse\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::URI_UNP_OMITUSERINFO\*(C'\fI\fR
.IX Subsection "APR::Const::URI_UNP_OMITUSERINFO"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
\fI\f(CI\*(C`APR::Const::URI_UNP_REVEALPASSWORD\*(C'\fI\fR
.IX Subsection "APR::Const::URI_UNP_REVEALPASSWORD"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::URI::unparse\*(C'\fR.
.PP
\fI\f(CI\*(C`APR::Const::URI_WAIS_DEFAULT_PORT\*(C'\fI\fR
.IX Subsection "APR::Const::URI_WAIS_DEFAULT_PORT"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.SS "Other Constants"
.IX Subsection "Other Constants"
\fI\f(CI\*(C`APR::PerlIO::PERLIO_LAYERS_ARE_ENABLED\*(C'\fI\fR
.IX Subsection "APR::PerlIO::PERLIO_LAYERS_ARE_ENABLED"
.IP "since: 2.0.00" 4
.IX Item "since: 2.0.00"
.PP
See \f(CW\*(C`APR::PerlIO::Constants\*(C'\fR)
.SH "See Also"
.IX Header "See Also"
mod_perl 2.0 documentation.
.SH "Copyright"
.IX Header "Copyright"
mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 2.0.
.SH "Authors"
.IX Header "Authors"
The mod_perl development team and numerous
contributors.
