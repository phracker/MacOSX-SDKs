.TH "<MPSCNNConvolutionDataSource>" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
<MPSCNNConvolutionDataSource>
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <MPSCNNConvolution\&.h>\fP
.SH "Detailed Description"
.PP 
Provides convolution filter weights and bias terms  The \fBMPSCNNConvolutionDataSource\fP protocol declares the methods that an instance of \fBMPSCNNConvolution\fP uses to obtain the weights and bias terms for the CNN convolution filter\&.
.PP
Why? CNN weights can be large\&. If multiple copies of all the weights for all the convolutions are available unpacked in memory at the same time, some devices can run out of memory\&. The \fBMPSCNNConvolutionDataSource\fP is used to encapsulate a reference to the weights such as a file path, so that unpacking can be deferred until needed, then purged soon thereafter so that not all of the data must be in memory at the same time\&. MPS does not provide a class that conforms to this protocol\&. It is up to the developer to craft his own to encapsulate his data\&.
.PP
Batch normalization and the neuron activation function are handled using the -descriptor method\&.
.PP
Thread safety: The \fBMPSCNNConvolutionDataSource\fP object can be called by threads that are not the main thread\&. If you will be creating multiple \fBMPSNNGraph\fP objects concurrently in multiple threads and these share MPSCNNConvolutionDataSources, then the data source objects may be called reentrantly\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
