.\" -*- nroff -*-
.\" 
.\" Copyright (c) 2001 Carnegie Mellon University.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer. 
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. The name "Carnegie Mellon University" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For permission or any other legal
.\"    details, please contact  
.\"      Office of Technology Transfer
.\"      Carnegie Mellon University
.\"      5000 Forbes Avenue
.\"      Pittsburgh, PA  15213-3890
.\"      (412) 268-4387, fax: (412) 268-7395
.\"      tech-transfer@andrew.cmu.edu
.\"
.\" 4. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by Computing Services
.\"     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
.\"
.\" CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
.\" THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
.\" FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
.\" AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" 
.TH sasl_setpass 3 "10 July 2001" SASL "SASL man pages"
.SH NAME
sasl_setpass \- Check a plaintext password
.SH SYNOPSIS
.nf
.B #include <sasl/sasl.h>

.BI "int sasl_setpass(sasl_conn_t *" conn ", "
.BI "		       const char *" user ", "
.BI "		       const char *" pass ", unsigned " passlen ","
.BI "                  const char *" oldpass ", unsigned " oldpasslen ","
.BI "                  unsigned " flags ")"

.SH DESCRIPTION

.B sasl_setpass
will set passwords in the sasldb, and trigger the setpass callbacks for all
available mechanisms.

.I user
is the username to set the password for.

.I pass
and
.I passlen
are the password to set and its length

.I oldpass
and
.I oldpasslen
are the old password & its length (and are optional)

.I flags
Are flags including SASL_SET_CREATE and SASL_SET_DISABLE (to cause the
creating of nonexistent accounts and the disabling of an account,
respectively)

.SH NOTES
.I oldpass
and
.I oldpasslen
are unused in the Cyrus SASL implementation, though are passed on to
any mechanisms that may require them.

.SH "RETURN VALUE"
Returns SASL_OK on success. SASL error code on failure.

.SH "CONFORMING TO"
RFC 4422
.SH "SEE ALSO"
sasl(3), sasl_errors(3), sasl_checkpass(3)