.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Inline::Wrapper::Module 3"
.TH Inline::Wrapper::Module 3 "2010-03-10" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Inline::Wrapper::Module \- Internal object wrapper for individual Inline modules.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use Inline::Wrapper::Module;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBInline::Wrapper::Module\fR is used internally by Inline::Wrapper, and
should not be used directly.  It will croak if you attempt to do so.
.PP
It is a descendent class of Inline::Wrapper.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBnew()\fP"
.IX Subsection "new()"
Takes the same arguments as \*(L"\fBnew()\fR\*(R" in Inline::Wrapper, but also requires a
\&\fImodule_name\fR and \fIlang_ext\fR argument.
.PP
Don't use this.  It will croak if you try to use it directly.
.SS "\fBinitialize()\fP"
.IX Subsection "initialize()"
Initialize the object instance.
.SS "\s-1\fBDESTROY\s0()\fP"
.IX Subsection "DESTROY()"
Destructor to clean up the object instance, and wipe the private code
module namespace created when binding the symbol list.
.SH "INHERITANCE"
.IX Header "INHERITANCE"
As \fBInline::Wrapper::Module\fR is an inherited class from Inline::Wrapper,
all methods that apply to the base class also apply to objects of this class.
.PP
However, note that this has the following effects, due to the semantics of
the \fB\fBload()\fB\fR/\fB\fBrun()\fB\fR steps:
.PP
\&\fIauto_reload\fR settings vs. when method effects take place:
.PP
.Vb 5
\& auto_reload value:  |  FALSE          TRUE     
\& \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\& set_base_dir()      |  no effect      after next reload / run()
\& set_language()      |  no effect      after next reload / run()
\& add_language()      |  no effect      after next reload / run()
.Ve
.PP
Please read through \*(L"\fBload()\fR\*(R" in Inline::Wrapper and \*(L"\fBrun()\fR\*(R" in Inline::Wrapper
for insight into why the implementation works like this.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Inline::Wrapper
.PP
The Inline documentation.
.PP
The Inline-FAQ list.
.PP
The examples/ directory of this module's distribution.
.SH "AUTHOR"
.IX Header "AUTHOR"
Please kindly read through this documentation and the \fBexamples/\fR
thoroughly, before emailing me with questions.  Your answer is likely
in here.
.PP
Also make sure that your issue is actually with the Inline::Wrapper
modules, and not with Inline itself.
.PP
Jason McManus (\s-1INFIDEL\s0) \*(-- \f(CW\*(C`infidel AT cpan.org\*(C'\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (c) Jason McManus
.PP
This module may be used, modified, and distributed under the same terms
as Perl itself.  Please see the license that came with your Perl
distribution for details.
