.\" -*- nroff -*-
.\" 
.\" Copyright (c) 2001 Carnegie Mellon University.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer. 
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. The name "Carnegie Mellon University" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For permission or any other legal
.\"    details, please contact  
.\"      Office of Technology Transfer
.\"      Carnegie Mellon University
.\"      5000 Forbes Avenue
.\"      Pittsburgh, PA  15213-3890
.\"      (412) 268-4387, fax: (412) 268-7395
.\"      tech-transfer@andrew.cmu.edu
.\"
.\" 4. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by Computing Services
.\"     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
.\"
.\" CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
.\" THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
.\" FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
.\" AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" 
.TH sasl_errstring 3 "10 July 2001" SASL "SASL man pages"
.SH NAME
sasl_errstring \- Translate a SASL return code to a human-readable form


.SH SYNOPSIS
.nf
.B #include <sasl/sasl.h>

.sp
.BI "const char * sasl_errstring(int " saslerr ", "
.BI "			        const char * " langlist ", "
.BI "			        const char ** " outlang ");"

.fi
.SH DESCRIPTION

.B sasl_usererr
is called to convert a SASL return code (an integer) into a human
readable string. At this time the only language available is american
english written by programmers (aka gobbledygook).
Note that a server should call sasl_usererr on a return code first if
the string is going to be sent to the client.
.PP
.I saslerr
specifies the error number to convert.
.PP
.I langlist
is currently unused; Use NULL.
.PP
.I outlang
specifies the desired RFC 1766 language for output.  NULL defaults to "en-us,"
currently the only supported language.
.PP
It should be noted that this function is not the recommended means of
extracting error code information from SASL, instead application should
use sasl_errdetail(3), which contains this information (and more)
.PP
.SH "RETURN VALUE"
Returns the string.  If langlist is NULL, US-ASCII is used.
.PP
.SH "CONFORMING TO"
RFC 4422
.SH "SEE ALSO"
sasl(3), sasl_errdetail(3), sasl_errors(3)
