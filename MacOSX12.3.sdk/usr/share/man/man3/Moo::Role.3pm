.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Moo::Role 3"
.TH Moo::Role 3 "2020-04-09" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Moo::Role \- Minimal Object Orientation support for Roles
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  package My::Role;
\&
\&  use Moo::Role;
\&  use strictures 2;
\&
\&  sub foo { ... }
\&
\&  sub bar { ... }
\&
\&  has baz => (
\&    is => \*(Aqro\*(Aq,
\&  );
\&
\&  1;
.Ve
.PP
And elsewhere:
.PP
.Vb 1
\&  package Some::Class;
\&
\&  use Moo;
\&  use strictures 2;
\&
\&  # bar gets imported, but not foo
\&  with \*(AqMy::Role\*(Aq;
\&
\&  sub foo { ... }
\&
\&  1;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Moo::Role\*(C'\fR builds upon Role::Tiny, so look there for most of the
documentation on how this works (in particular, using \f(CW\*(C`Moo::Role\*(C'\fR also
enables strict and warnings).  The main addition here is extra bits to
make the roles more \*(L"Moosey;\*(R" which is to say, it adds \*(L"has\*(R".
.SH "IMPORTED SUBROUTINES"
.IX Header "IMPORTED SUBROUTINES"
See \*(L"\s-1IMPORTED SUBROUTINES\*(R"\s0 in Role::Tiny for all the other subroutines that are
imported by this module.
.SS "has"
.IX Subsection "has"
.Vb 3
\&  has attr => (
\&    is => \*(Aqro\*(Aq,
\&  );
.Ve
.PP
Declares an attribute for the class to be composed into.  See
\&\*(L"has\*(R" in Moo for all options.
.SH "CLEANING UP IMPORTS"
.IX Header "CLEANING UP IMPORTS"
Moo::Role cleans up its own imported methods and any imports
declared before the \f(CW\*(C`use Moo::Role\*(C'\fR statement automatically.
Anything imported after \f(CW\*(C`use Moo::Role\*(C'\fR will be composed into
consuming packages.  A package that consumes this role:
.PP
.Vb 1
\&  package My::Role::ID;
\&
\&  use Digest::MD5 qw(md5_hex);
\&  use Moo::Role;
\&  use Digest::SHA qw(sha1_hex);
\&
\&  requires \*(Aqname\*(Aq;
\&
\&  sub as_md5  { my ($self) = @_; return md5_hex($self\->name);  }
\&  sub as_sha1 { my ($self) = @_; return sha1_hex($self\->name); }
\&
\&  1;
.Ve
.PP
\&..will now have a \f(CW\*(C`$self\->sha1_hex()\*(C'\fR method available to it
that probably does not do what you expect.  On the other hand, a call
to \f(CW\*(C`$self\->md5_hex()\*(C'\fR will die with the helpful error message:
\&\f(CW\*(C`Can\*(Aqt locate object method "md5_hex"\*(C'\fR.
.PP
See \*(L"\s-1CLEANING UP IMPORTS\*(R"\s0 in Moo for more details.
.SH "SUPPORT"
.IX Header "SUPPORT"
See Moo for support and contact information.
.SH "AUTHORS"
.IX Header "AUTHORS"
See Moo for authors.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
See Moo for the copyright and license.
