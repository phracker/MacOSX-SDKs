.TH "MPSMatrixDecompositionCholesky" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSMatrixDecompositionCholesky
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSMatrixDecomposition\&.h>\fP
.PP
Inherits \fBMPSMatrixUnaryKernel\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:lower:order:\fP"
.br
.ti -1c
.RI "(void) \- \fBencodeToCommandBuffer:sourceMatrix:resultMatrix:status:\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework\&.
.PP
\fBA\fP kernel for computing the Cholesky factorization of a matrix\&.
.PP
\fBA\fP \fBMPSMatrixDecompositionLU\fP object computes one of the following factorizations of a matrix \fBA\fP: 
.PP
.nf
A = L * L**T
A = U**T * U

.fi
.PP
.PP
\fBA\fP is a symmetric positive-definite matrix for which the factorization is to be computed\&. L and U are lower and upper triangular matrices respectively\&. 
.SH "Method Documentation"
.PP 
.SS "\- (void) encodeToCommandBuffer: (nonnull id< MTLCommandBuffer >) commandBuffer(\fBMPSMatrix\fP *__nonnull) sourceMatrix(\fBMPSMatrix\fP *__nonnull) resultMatrix(__nullable id< MTLBuffer >) status"
Encode a \fBMPSMatrixDecompositionCholesky\fP kernel into a command Buffer\&.
.PP
\fBParameters:\fP
.RS 4
\fIcommandBuffer\fP \fBA\fP valid MTLCommandBuffer to receive the encoded filter
.br
\fIsourceMatrix\fP \fBA\fP valid \fBMPSMatrix\fP containing the source data\&. Must have enough space to hold a order x order matrix\&.
.br
\fIresultMatrix\fP \fBA\fP valid \fBMPSMatrix\fP to contain the result\&. Must have enough space to hold a order x order matrix\&.
.br
\fIstatus\fP \fBA\fP MTLBuffer which indicates the resulting MPSMatrixDecompositionStatus value\&.
.RE
.PP
This function encodes the \fBMPSMatrixDecompositionCholesky\fP object to a valid command buffer\&.
.PP
If during the factorization a leading minor of the matrix is found to be not positive definite, MPSMatrixDecompositionNonPositiveDefinite will be returned in the provided status buffer\&. Previously computed pivots and the non positive pivot are written to the result, but the factorization does not complete\&. The data referenced by the MTLBuffer is not valid until the command buffer has completed execution\&. If the matrix return status is not desired NULL may be provided\&.
.PP
If the return status is MPSMatrixDecompositionStatusSuccess, resultMatrix contains the resulting factors in its lower or upper triangular regions respectively\&.
.PP
This kernel functions either in-place, if the result matrix completely aliases the source matrix, or out-of-place\&. If there is any partial overlap between input and output data the results are undefined\&. 
.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(BOOL) lower(NSUInteger) order"
Initialize an \fBMPSMatrixDecompositionCholesky\fP object on a device
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device on which the kernel will execute\&.
.br
\fIlower\fP \fBA\fP boolean value indicating if the lower triangular part of the source matrix is stored\&. If lower = YES the lower triangular part will be used and the factor will be written to the lower triangular part of the result, otherwise the upper triangular part will be used and the factor will be written to the upper triangular part\&.
.br
\fIorder\fP The number of rows and columns in the source matrix\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP valid \fBMPSMatrixDecompositionCholesky\fP object or nil, if failure\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
