.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PAR::Filter 3"
.TH PAR::Filter 3 "2020-03-08" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PAR::Filter \- Input filter for PAR
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    $code = \*(Aquse strict; print "Hello, World!\en";\*(Aq;
\&    $ref = PAR::Filter\->new(\*(AqPodStrip\*(Aq, \*(AqBleach\*(Aq)\->apply(\e$code);
\&    print $code;    # pod\-stripped and obfuscated code
\&    print $$ref;    # same thing
\&
\&    $ref = PAR::Filter\->new(\*(AqPodStrip\*(Aq, \*(AqBleach\*(Aq)\->apply(\*(Aqfile.pl\*(Aq);
\&    print $$ref;    # same thing, applied to file.pl
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Starting with \s-1PAR 0.76,\s0 \f(CW\*(C`pp \-f\*(C'\fR takes a filter name, like \f(CW\*(C`Bleach\*(C'\fR, and
invokes this module to transform the programs with PAR::Filter::Bleach.
Similarly, \f(CW\*(C`pp \-F Bleach\*(C'\fR applies the \fBBleach\fR filter to all included
modules.
.PP
It is possible to pass in multiple such filters, which are applied in turn.
.PP
The output of each such filter is expected be semantically equivalent to the
input, although possibly obfuscated.
.PP
The default list of filters include:
.IP "\(bu" 4
PAR::Filter::Bleach
.Sp
The archetypical obfuscating filter.
.IP "\(bu" 4
PAR::Filter::Obfuscate
.Sp
Use B::Deobfuscate to strip away indents and comments, as well as mangling
variable names.
.IP "\(bu" 4
PAR::Filter::PatchContent
.Sp
Fix PAR-incompatible modules, applied to modules by default.
.IP "\(bu" 4
PAR::Filter::PodStrip
.Sp
Strip away \s-1POD\s0 sections, applied to modules by default.
.IP "\(bu" 4
PAR::Filter::Bytecode
.Sp
Use B::Bytecode to strip away indents and comments.
\&\fBThis filter is deprecated!\fR For source hiding,
have a look at PAR::Filter::Crypto instead and make
sure to read about its caveats.
.SH "AUTHORS"
.IX Header "AUTHORS"
Audrey Tang <cpan@audreyt.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2003\-2009 by Audrey Tang <cpan@audreyt.org>.
.PP
This program is free software; you can redistribute it and/or 
modify it under the same terms as Perl itself.
.PP
See \fI\s-1LICENSE\s0\fR.
