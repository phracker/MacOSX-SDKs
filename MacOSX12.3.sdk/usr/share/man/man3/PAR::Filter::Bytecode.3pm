.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PAR::Filter::Bytecode 3"
.TH PAR::Filter::Bytecode 3 "2020-03-08" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PAR::Filter::Bytecode \- Bytecode filter
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    PAR::Filter::Bytecode\->apply(\e$code); # transforms $code
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBThis filter is deprecated. The B::Bytecode code has been removed from
the newest development series of perl and will not be included in perl
5.10 any more. Please have a look at Steve Hay's PAR::Filter::Crypto
module if you want to hide your sources.\fR
.PP
This filter uses B::Bytecode to turn the script into comment-free,
architecture-specific Perl bytecode, and uses ByteLoader to load
back on execution.
.PP
For pp users, please add an extra \fB\-M\fR option, like this:
.PP
.Vb 1
\&    pp \-f Bytecode \-M ByteLoader
.Ve
.PP
Otherwise, the implicit dependency on ByteLoader will not be detected.
.SH "CAVEATS"
.IX Header "CAVEATS"
This backend exhibits all bugs listed in B::Bytecode, and then some.
.PP
Bytecode support is considered to be extremely fragile on Perl versions
earlier than 5.8.1, and is still far from robust (as of this writing).
.PP
Bytecode is not supported by perl 5.9 and later.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
PAR::Filter, B::Bytecode, ByteLoader
.PP
Filter::Crypto, PAR::Filter::Crypto
.SH "AUTHORS"
.IX Header "AUTHORS"
Audrey Tang <cpan@audreyt.org>
.PP
You can write
to the mailing list at <par@perl.org>, or send an empty mail to
<par\-subscribe@perl.org> to participate in the discussion.
.PP
Please submit bug reports to <bug\-par\-packer@rt.cpan.org>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2003\-2009 by Audrey Tang <cpan@audreyt.org>.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See \fI\s-1LICENSE\s0\fR.
