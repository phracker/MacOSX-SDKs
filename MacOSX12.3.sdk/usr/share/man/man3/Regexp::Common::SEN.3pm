.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Regexp::Common::SEN 3"
.TH Regexp::Common::SEN 3 "2017-06-02" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Regexp::Common::SEN \-\- provide regexes for Social\-Economical Numbers.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use Regexp::Common qw /SEN/;
\&
\& while (<>) {
\&     /^$RE{SEN}{USA}{SSN}$/    and  print "Social Security Number\en";
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Please consult the manual of Regexp::Common for a general description
of the works of this interface.
.PP
Do not use this module directly, but load it via \fIRegexp::Common\fR.
.ie n .SS "$RE{SEN}{USA}{SSN}{\-sep}"
.el .SS "\f(CW$RE{SEN}{USA}{SSN}{\-sep}\fP"
.IX Subsection "$RE{SEN}{USA}{SSN}{-sep}"
Returns a pattern that matches an American Social Security Number (\s-1SSN\s0).
SSNs consist of three groups of numbers, separated by a hyphen (\f(CW\*(C`\-\*(C'\fR).
This pattern only checks for a valid structure, that is, it validates
whether a number is valid \s-1SSN,\s0 was a valid \s-1SSN,\s0 or maybe a valid \s-1SSN\s0
in the future. There are almost a billion possible SSNs, and about 
400 million are in use, or have been in use.
.PP
If \f(CW\*(C`\-sep=\f(CIP\f(CW\*(C'\fR is specified, the pattern \fIP\fR is used as the
separator between the groups of numbers.
.PP
Under \f(CW\*(C`\-keep\*(C'\fR (see Regexp::Common):
.ie n .IP "$1" 4
.el .IP "\f(CW$1\fR" 4
.IX Item "$1"
captures the entire \s-1SSN.\s0
.ie n .IP "$2" 4
.el .IP "\f(CW$2\fR" 4
.IX Item "$2"
captures the first group of digits (the area number).
.ie n .IP "$3" 4
.el .IP "\f(CW$3\fR" 4
.IX Item "$3"
captures the second group of digits (the group number).
.ie n .IP "$4" 4
.el .IP "\f(CW$4\fR" 4
.IX Item "$4"
captures the third group of digits (the serial number).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Regexp::Common for a general description of how to use this interface.
.SH "AUTHORS"
.IX Header "AUTHORS"
Damian Conway and Abigail.
.SH "MAINTENANCE"
.IX Header "MAINTENANCE"
This package is maintained by Abigail (\fIregexp\-common@abigail.be\fR).
.SH "BUGS AND IRRITATIONS"
.IX Header "BUGS AND IRRITATIONS"
Bound to be plenty.
.PP
For a start, there are many common regexes missing.
Send them in to \fIregexp\-common@abigail.be\fR.
.SH "LICENSE and COPYRIGHT"
.IX Header "LICENSE and COPYRIGHT"
This software is Copyright (c) 2001 \- 2017, Damian Conway and Abigail.
.PP
This module is free software, and maybe used under any of the following
licenses:
.PP
.Vb 4
\& 1) The Perl Artistic License.     See the file COPYRIGHT.AL.
\& 2) The Perl Artistic License 2.0. See the file COPYRIGHT.AL2.
\& 3) The BSD License.               See the file COPYRIGHT.BSD.
\& 4) The MIT License.               See the file COPYRIGHT.MIT.
.Ve
