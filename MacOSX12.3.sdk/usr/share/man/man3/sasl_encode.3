.\" -*- nroff -*-
.\" 
.\" Copyright (c) 2001 Carnegie Mellon University.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer. 
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. The name "Carnegie Mellon University" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For permission or any other legal
.\"    details, please contact  
.\"      Office of Technology Transfer
.\"      Carnegie Mellon University
.\"      5000 Forbes Avenue
.\"      Pittsburgh, PA  15213-3890
.\"      (412) 268-4387, fax: (412) 268-7395
.\"      tech-transfer@andrew.cmu.edu
.\"
.\" 4. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by Computing Services
.\"     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
.\"
.\" CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
.\" THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
.\" FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
.\" AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" 
.TH sasl_encode 3 "10 July 2001" SASL "SASL man pages"
.SH NAME
sasl_encode \- Encode data for transport to authenticated host


.SH SYNOPSIS
.nf
.B #include <sasl/sasl.h>

.sp
.BI "int sasl_encode(sasl_conn_t " *conn ", "
.BI "		     const char * " input ", " 
.BI "	             unsigned " inputlen ", " 
.BI "		     const char ** " output ", " 
.BI "		     unsigned * " outputlen ");"  

.BI "int sasl_encodev(sasl_conn_t " *conn ", "
.BI "		     const struct iovec * " invec ", " 
.BI "	             unsigned " numiov ", " 
.BI "		     const char ** " output ", " 
.BI "		     unsigned * " outputlen ");"  

.fi
.SH DESCRIPTION

.B sasl_encode
encodes data to be sent to be sent to a remote host who we've had a successful authentication session with. If there is a negotiated security the data in signed/encrypted and the output should be sent without modification to the remote host. If there is no security layer the output is identical to the input.

.B sasl_encodev
does the same, but for a struct iovec instead of a character buffer.

.I output
contains the encoded data and is allocated/freed by the library.

.SH "RETURN VALUE"
Returns SASL_OK on success.  See sasl_errors(3) for meanings of other return
codes.

.SH "CONFORMING TO"
RFC 4422
.SH "SEE ALSO"
sasl(3), sasl_errors(3), sasl_decode(3)