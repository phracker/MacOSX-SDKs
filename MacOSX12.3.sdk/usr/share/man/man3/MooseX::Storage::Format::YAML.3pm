.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MooseX::Storage::Format::YAML 3"
.TH MooseX::Storage::Format::YAML 3 "2020-04-18" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooseX::Storage::Format::YAML \- A YAML serialization role
.SH "VERSION"
.IX Header "VERSION"
version 0.53
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  package Point;
\&  use Moose;
\&  use MooseX::Storage;
\&
\&  with Storage(\*(Aqformat\*(Aq => \*(AqYAML\*(Aq);
\&
\&  has \*(Aqx\*(Aq => (is => \*(Aqrw\*(Aq, isa => \*(AqInt\*(Aq);
\&  has \*(Aqy\*(Aq => (is => \*(Aqrw\*(Aq, isa => \*(AqInt\*(Aq);
\&
\&  1;
\&
\&  my $p = Point\->new(x => 10, y => 10);
\&
\&  ## methods to freeze/thaw into
\&  ## a specified serialization format
\&  ## (in this case YAML)
\&
\&  # pack the class into a YAML string
\&  $p\->freeze();
\&
\&  # \-\-\-\-
\&  # _\|_CLASS_\|_: "Point"
\&  # x: 10
\&  # y: 10
\&
\&  # unpack the JSON string into a class
\&  my $p2 = Point\->thaw(<<YAML);
\&  \-\-\-\-
\&  _\|_CLASS_\|_: "Point"
\&  x: 10
\&  y: 10
\&  YAML
.Ve
.SH "METHODS"
.IX Header "METHODS"
.IP "\fBfreeze\fR" 4
.IX Item "freeze"
.PD 0
.IP "\fBthaw ($yaml)\fR" 4
.IX Item "thaw ($yaml)"
.PD
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=MooseX-Storage>
(or bug\-MooseX\-Storage@rt.cpan.org <mailto:bug-MooseX-Storage@rt.cpan.org>).
.PP
There is also a mailing list available for users of this distribution, at
<http://lists.perl.org/list/moose.html>.
.PP
There is also an irc channel available for users of this distribution, at
\&\f(CW\*(C`#moose\*(C'\fR on \f(CW\*(C`irc.perl.org\*(C'\fR <irc://irc.perl.org/#moose>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Chris Prather <chris.prather@iinteractive.com>
.IP "\(bu" 4
Stevan Little <stevan.little@iinteractive.com>
.IP "\(bu" 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2007 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
