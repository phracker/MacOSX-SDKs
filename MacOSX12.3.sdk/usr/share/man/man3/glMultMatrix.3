'\" e  
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp May 22 14:46
.ds Dm 5 May 22 14:
.ds Xs 32348     6
.TH GLMULTMATRIX 3G
.SH NAME
.B "glMultMatrixd, glMultMatrixf
\- multiply the current matrix with the specified matrix

.SH C SPECIFICATION
void \f3glMultMatrixd\fP(
const GLdouble \fI*m\fP )
.nf
.fi
void \f3glMultMatrixf\fP(
const GLfloat \fI*m\fP )
.nf
.fi

.SH PARAMETERS
.TP \w'\f2m\fP\ \ 'u 
\f2m\fP
Points to 16 consecutive values that are used as the elements of 
a 4 x 4 column-major matrix. 
.SH DESCRIPTION
\%\f3glMultMatrix\fP multiplies the current matrix with the one specified using \f2m\fP, and
replaces the current matrix with the product.
.P
The current matrix is determined by the current matrix mode (see \%\f3glMatrixMode\fP). It is either the projection matrix,
modelview matrix,
or the texture matrix.
.SH EXAMPLES
If the current matrix is C, and the coordinates
to be transformed are, v = (v[0], v[1], v[2], v[3]).
Then the current transformation is C X v, or

.Bd -literal
 c[0]  c[4]  c[8]  c[12]     v[0]
 c[1]  c[5]  c[9]  c[13]     v[1]
 c[2]  c[6]  c[10] c[14]  X  v[2]
 c[3]  c[7]  c[11] c[15]     v[3]
.Be

Calling \%\f3glMultMatrix\fP with an argument of m = m[0], m[1], ..., m[15] 
replaces the current transformation with (C X M) x v,
or

.Bd -literal
 c[0]  c[4]  c[8]  c[12]   m[0]  m[4]  m[8]  m[12]   v[0]
 c[1]  c[5]  c[9]  c[13]   m[1]  m[5]  m[9]  m[13]   v[1]
 c[2]  c[6]  c[10] c[14] X m[2]  m[6]  m[10] m[14] X v[2]
 c[3]  c[7]  c[11] c[15]   m[3]  m[7]  m[11] m[15]   v[3]
.Be


.P
Where 'X' denotes matrix multiplication, and
v is represented as a 4 X 1 matrix. 
.br
.SH NOTES
While the elements of the matrix may be specified with
single or double precision, the GL may store or operate on these 
values in less than single precision.
.P
In many computer languages 4 X 4 arrays are represented
in row-major order. The transformations just described
represent these matrices in column-major order.
The order of the multiplication is important. For example, if the current
transformation is a rotation, and \%\f3glMultMatrix\fP is called with a translation matrix,
the translation is done directly on the coordinates to be transformed,
while the rotation is done on the results of that translation.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glMultMatrix\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_MATRIX_MODE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_COLOR_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MODELVIEW_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PROJECTION_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_TEXTURE_MATRIX\fP
.SH SEE ALSO
\%\f3glLoadIdentity\fP,
\%\f3glLoadMatrix\fP,
\%\f3glMatrixMode\fP,
\%\f3glPushMatrix\fP

