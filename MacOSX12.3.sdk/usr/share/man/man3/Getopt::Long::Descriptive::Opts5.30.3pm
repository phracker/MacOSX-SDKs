.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Getopt::Long::Descriptive::Opts 3"
.TH Getopt::Long::Descriptive::Opts 3 "2020-02-25" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Getopt::Long::Descriptive::Opts \- object representing command line switches
.SH "VERSION"
.IX Header "VERSION"
version 0.105
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class is the base class of all \f(CW$opt\fR objects returned by
Getopt::Long::Descriptive.  In general, you do not want to think about this
class, look at it, or alter it.  Seriously, it's pretty dumb.
.PP
Every call to \f(CW\*(C`describe_options\*(C'\fR will return a object of a new subclass of
this class.  It will have a method for the canonical name of each option
possible given the option specifications.
.PP
Method names beginning with an single underscore are public, and are named that
way to avoid conflict with automatically generated methods.  Methods with
multiple underscores (in case you're reading the source) are private.
.SH "METHODS"
.IX Header "METHODS"
\&\fBAchtung!\fR  All methods beginning with an underscore are experimental as of
today, 2009\-12\-12.  They are likely to be formally made permanent soon.
.SS "_specified"
.IX Subsection "_specified"
This method returns true if the given name was specified on the command line.
.PP
For example, if \f(CW@ARGS\fR was "\f(CW\*(C`\-\-foo \-\-bar 10\*(C'\fR" and \f(CW\*(C`baz\*(C'\fR is defined by a
default, \f(CW\*(C`_specified\*(C'\fR will return true for foo and bar, and false for baz.
.SS "_specified_opts"
.IX Subsection "_specified_opts"
This method returns an opt object in which only explicitly specified values are
defined.  Values which were set by defaults will appear undef.
.SS "_complete_opts"
.IX Subsection "_complete_opts"
This method returns the opts object with all values, including those set by
defaults.  It is probably not going to be very often-used.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Hans Dieter Pearcey <hdp@cpan.org>
.IP "\(bu" 4
Ricardo Signes <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2005 by Hans Dieter Pearcey.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
