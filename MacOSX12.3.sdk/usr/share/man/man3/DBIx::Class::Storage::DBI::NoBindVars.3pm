.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Storage::DBI::NoBindVars 3"
.TH DBIx::Class::Storage::DBI::NoBindVars 3 "2018-01-29" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DBIx::Class::Storage::DBI::NoBindVars \- Sometime DBDs have poor to no support for bind variables
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class allows queries to work when the \s-1DBD\s0 or underlying library does not
support the usual \f(CW\*(C`?\*(C'\fR placeholders, or at least doesn't support them very
well, as is the case with DBD::Sybase
.SH "METHODS"
.IX Header "METHODS"
.SS "connect_info"
.IX Subsection "connect_info"
We can't cache very effectively without bind variables, so force the \f(CW\*(C`disable_sth_caching\*(C'\fR setting to be turned on when the connect info is set.
.SS "_prep_for_execute"
.IX Subsection "_prep_for_execute"
Manually subs in the values for the usual \f(CW\*(C`?\*(C'\fR placeholders.
.SS "interpolate_unquoted"
.IX Subsection "interpolate_unquoted"
This method is called by \*(L"_prep_for_execute\*(R" for every column in
order to determine if its value should be quoted or not. The arguments
are the current column data type and the actual bind value. The return
value is interpreted as: true \- do not quote, false \- do quote. You should
override this in you Storage::DBI::<database> subclass, if your \s-1RDBMS\s0
does not like quotes around certain datatypes (e.g. Sybase and integer
columns). The default method returns false, except for integer datatypes
paired with values containing nothing but digits.
.PP
.Vb 1
\& WARNING!!!
\&
\& Always validate that the bind\-value is valid for the current datatype.
\& Otherwise you may very well open the door to SQL injection attacks.
.Ve
.SS "_prep_interpolated_value"
.IX Subsection "_prep_interpolated_value"
Given a datatype and the value to be inserted directly into a \s-1SQL\s0 query, returns
the necessary string to represent that value (by e.g. adding a '$' sign)
.SH "FURTHER QUESTIONS?"
.IX Header "FURTHER QUESTIONS?"
Check the list of additional \s-1DBIC\s0 resources.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This module is free software copyright
by the DBIx::Class (\s-1DBIC\s0) authors. You can
redistribute it and/or modify it under the same terms as the
DBIx::Class library.
