.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBD::Sponge 3"
.TH DBD::Sponge 3 "2015-05-26" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DBD::Sponge \- Create a DBI statement handle from Perl data
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&  my $sponge = DBI\->connect("dbi:Sponge:","","",{ RaiseError => 1 });
\&  my $sth = $sponge\->prepare($statement, {
\&          rows => $data,
\&          NAME => $names,
\&          %attr
\&      }
\&  );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
DBD::Sponge is useful for making a Perl data structure accessible through a
standard \s-1DBI\s0 statement handle. This may be useful to \s-1DBD\s0 module authors who
need to transform data in this way.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBconnect()\fP"
.IX Subsection "connect()"
.Vb 1
\&  my $sponge = DBI\->connect("dbi:Sponge:","","",{ RaiseError => 1 });
.Ve
.PP
Here's a sample syntax for creating a database handle for the Sponge driver.
No username and password are needed.
.SS "\fBprepare()\fP"
.IX Subsection "prepare()"
.Vb 6
\&  my $sth = $sponge\->prepare($statement, {
\&          rows => $data,
\&          NAME => $names,
\&          %attr
\&      }
\&  );
.Ve
.IP "\(bu" 4
The \f(CW$statement\fR here is an arbitrary statement or name you want
to provide as identity of your data. If you're using DBI::Profile
it will appear in the profile data.
.Sp
Generally it's expected that you are preparing a statement handle
as if a \f(CW\*(C`select\*(C'\fR statement happened.
.IP "\(bu" 4
\&\f(CW$data\fR is a reference to the data you are providing, given as an array of arrays.
.IP "\(bu" 4
\&\f(CW$names\fR is a reference an array of column names for the \f(CW$data\fR you are providing.
The number and order should match the number and ordering of the \f(CW$data\fR columns.
.IP "\(bu" 4
\&\f(CW%attr\fR is a hash of other standard \s-1DBI\s0 attributes that you might pass to a prepare statement.
.Sp
Currently only \s-1NAME, TYPE,\s0 and \s-1PRECISION\s0 are supported.
.SH "BUGS"
.IX Header "BUGS"
Using this module to prepare INSERT-like statements is not currently documented.
.SH "AUTHOR AND COPYRIGHT"
.IX Header "AUTHOR AND COPYRIGHT"
This module is Copyright (c) 2003 Tim Bunce
.PP
Documentation initially written by Mark Stosberg
.PP
The DBD::Sponge module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself. In particular permission
is granted to Tim Bunce for distributing this as a part of the \s-1DBI.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1DBI\s0
