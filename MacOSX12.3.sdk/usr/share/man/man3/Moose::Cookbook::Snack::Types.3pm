.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Moose::Cookbook::Snack::Types 3"
.TH Moose::Cookbook::Snack::Types 3 "2019-11-22" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Moose::Cookbook::Snack::Types \- Snippets of code for using Types and Type Constraints
.SH "VERSION"
.IX Header "VERSION"
version 2.2012
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  package Point;
\&  use Moose;
\&
\&  has \*(Aqx\*(Aq => ( isa => \*(AqInt\*(Aq, is => \*(Aqro\*(Aq );
\&  has \*(Aqy\*(Aq => ( isa => \*(AqInt\*(Aq, is => \*(Aqrw\*(Aq );
\&
\&  package main;
\&  use Try::Tiny;
\&
\&  my $point = try {
\&      Point\->new( x => \*(Aqfifty\*(Aq, y => \*(Aqforty\*(Aq );
\&  }
\&  catch {
\&      print "Oops: $_";
\&  };
\&
\&  my $point;
\&  my $xval             = \*(Aqforty\-two\*(Aq;
\&  my $xattribute       = Point\->meta\->find_attribute_by_name(\*(Aqx\*(Aq);
\&  my $xtype_constraint = $xattribute\->type_constraint;
\&
\&  if ( $xtype_constraint\->check($xval) ) {
\&      $point = Point\->new( x => $xval, y => 0 );
\&  }
\&  else {
\&      print "Value: $xval is not an " . $xtype_constraint\->name . "\en";
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the Point example from
Moose::Cookbook::Basics::Point_AttributesAndSubclassing with type checking
added.
.PP
If we try to assign a string value to an attribute that is an \f(CW\*(C`Int\*(C'\fR,
Moose will die with an explicit error message. The error will include
the attribute name, as well as the type constraint name and the value
which failed the constraint check.
.PP
We use Try::Tiny to catch this error message.
.PP
Later, we get the Moose::Meta::TypeConstraint object from a
Moose::Meta::Attribute and use the Moose::Meta::TypeConstraint
to check a value directly.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Moose::Cookbook::Basics::Point_AttributesAndSubclassing" 4
.IX Item "Moose::Cookbook::Basics::Point_AttributesAndSubclassing"
.PD 0
.IP "Moose::Util::TypeConstraints" 4
.IX Item "Moose::Util::TypeConstraints"
.IP "Moose::Meta::Attribute" 4
.IX Item "Moose::Meta::Attribute"
.PD
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Stevan Little <stevan.little@iinteractive.com>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.IP "\(bu" 4
Jesse Luehrs <doy@tozt.net>
.IP "\(bu" 4
Shawn M Moore <code@sartak.org>
.IP "\(bu" 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Hans Dieter Pearcey <hdp@weftsoar.net>
.IP "\(bu" 4
Chris Prather <chris@prather.org>
.IP "\(bu" 4
Matt S Trout <mst@shadowcat.co.uk>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
