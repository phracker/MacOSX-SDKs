.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "YAML::PP::Schema::Tie::IxHash 3"
.TH YAML::PP::Schema::Tie::IxHash 3 "2020-09-10" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
YAML::PP::Schema::Tie::IxHash \- (Deprecated) Schema for serializing ordered hashes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use YAML::PP;
\&    use Tie::IxHash;
\&    my $yp = YAML::PP\->new( schema => [qw/ + Tie::IxHash /] );
\&
\&    tie(my %ordered, \*(AqTie::IxHash\*(Aq);
\&    %ordered = (
\&        U => 2,
\&        B => 52,
\&    );
\&
\&    my $yaml = $yp\->dump_string(\e%ordered);
\&
\&
\&    # Output:
\&    \-\-\-
\&    U: 2
\&    B: 52
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is deprecated. See the new option \f(CW\*(C`preserve\*(C'\fR in \s-1YAML::PP\s0.
.PP
This schema allows you to dump ordered hashes which are tied to
Tie::IxHash.
.PP
This code is pretty new and experimental.
.PP
It is not yet implemented for loading yet, so for now you have to tie
the hashes yourself.
.PP
Examples:
.IP "order" 4
.IX Item "order"
.Vb 12
\&        # Code
\&        tie(my %order, \*(AqTie::IxHash\*(Aq);
\&        %order = (
\&            U => 2,
\&            B => 52,
\&            c => 64,
\&            19 => 84,
\&            Disco => 2000,
\&            Year => 2525,
\&            days_on_earth => 20_000,
\&        );
\&        \e%order;
\&
\&
\&        # YAML
\&        \-\-\-
\&        U: 2
\&        B: 52
\&        c: 64
\&        19: 84
\&        Disco: 2000
\&        Year: 2525
\&        days_on_earth: 20000
.Ve
.IP "order_blessed" 4
.IX Item "order_blessed"
.Vb 12
\&        # Code
\&        tie(my %order, \*(AqTie::IxHash\*(Aq);
\&        %order = (
\&            U => 2,
\&            B => 52,
\&            c => 64,
\&            19 => 84,
\&            Disco => 2000,
\&            Year => 2525,
\&            days_on_earth => 20_000,
\&        );
\&        bless \e%order, \*(AqOrder\*(Aq;
\&
\&
\&        # YAML
\&        \-\-\- !perl/hash:Order
\&        U: 2
\&        B: 52
\&        c: 64
\&        19: 84
\&        Disco: 2000
\&        Year: 2525
\&        days_on_earth: 20000
.Ve
.SH "METHODS"
.IX Header "METHODS"
.IP "register" 4
.IX Item "register"
Called by YAML::PP::Schema
