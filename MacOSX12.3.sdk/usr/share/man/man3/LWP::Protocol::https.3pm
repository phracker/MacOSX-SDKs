.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "LWP::Protocol::https 3"
.TH LWP::Protocol::https 3 "2017-02-20" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
LWP::Protocol::https \- Provide https support for LWP::UserAgent
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use LWP::UserAgent;
\&
\&  $ua = LWP::UserAgent\->new(ssl_opts => { verify_hostname => 1 });
\&  $res = $ua\->get("https://www.example.com");
\&
\&  # specify a CA path
\&  $ua = LWP::UserAgent\->new(
\&      ssl_opts => {
\&          SSL_ca_path     => \*(Aq/etc/ssl/certs\*(Aq,
\&          verify_hostname => 1,
\&      }
\&  );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The LWP::Protocol::https module provides support for using https schemed
URLs with \s-1LWP.\s0  This module is a plug-in to the \s-1LWP\s0 protocol handling, so
you don't use it directly.  Once the module is installed \s-1LWP\s0 is able
to access sites using \s-1HTTP\s0 over \s-1SSL/TLS.\s0
.PP
If hostname verification is requested by LWP::UserAgent's \f(CW\*(C`ssl_opts\*(C'\fR, and
neither \f(CW\*(C`SSL_ca_file\*(C'\fR nor \f(CW\*(C`SSL_ca_path\*(C'\fR is set, then \f(CW\*(C`SSL_ca_file\*(C'\fR is
implied to be the one provided by Mozilla::CA.  If the Mozilla::CA module
isn't available \s-1SSL\s0 requests will fail.  Either install this module, set up an
alternative \f(CW\*(C`SSL_ca_file\*(C'\fR or disable hostname verification.
.PP
This module used to be bundled with the libwww-perl, but it was unbundled in
v6.02 in order to be able to declare its dependencies properly for the \s-1CPAN\s0
tool-chain.  Applications that need https support can just declare their
dependency on LWP::Protocol::https and will no longer need to know what
underlying modules to install.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
IO::Socket::SSL, Crypt::SSLeay, Mozilla::CA
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 1997\-2011 Gisle Aas.
.PP
This library is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
