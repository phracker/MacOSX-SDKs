.\" Copyright (c) 1988, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     From: @(#)getpwent.3	8.2 (Berkeley) 12/11/93
.\" $FreeBSD: src/lib/libc/gen/getpwent.3,v 1.30 2007/01/09 00:27:54 imp Exp $
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\"
.\" Portions Copyright (c) 2003-2013 Apple Inc.  All Rights Reserved.
.\"
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\"
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\"
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd October 26, 2011
.Dt GETPWENT 3
.Os
.Sh NAME
.Nm getpwent ,
.\".Nm getpwent_r ,
.Nm getpwnam ,
.Nm getpwnam_r ,
.Nm getpwuid ,
.Nm getpwuid_r ,
.Nm getpwuuid ,
.Nm getpwuuid_r ,
.Nm setpassent ,
.Nm setpwent ,
.Nm endpwent
.Nd password database operations
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In pwd.h
.In uuid/uuid.h
.Ft struct passwd *
.Fn getpwent void
.\".Ft int
.\".Fn getpwent_r "struct passwd *pwd" "char *buffer" "size_t bufsize" "struct passwd **result"
.Ft struct passwd *
.Fn getpwnam "const char *login"
.Ft int
.Fn getpwnam_r "const char *name" "struct passwd *pwd" "char *buffer" "size_t bufsize" "struct passwd **result"
.Ft struct passwd *
.Fn getpwuid "uid_t uid"
.Ft int
.Fn getpwuid_r "uid_t uid" "struct passwd *pwd" "char *buffer" "size_t bufsize" "struct passwd **result"
.Ft struct passwd *
.Fn getpwuuid "uuid_t uuid"
.Ft int
.Fn getpwuuid_r "uuid_t uuid" "struct passwd *pwd" "char *buffer" "size_t bufsize" "struct passwd **result"
.Ft int
.Fn setpassent "int stayopen"
.Ft void
.Fn setpwent void
.Ft void
.Fn endpwent void
.Sh DESCRIPTION
These functions
.\"operate on the password database file
obtain information from
.Xr opendirectoryd 8 ,
including records in
.Pa /etc/master.passwd
which is described
in
.Xr master.passwd 5 .
Each entry in the database is defined by the structure
.Vt passwd
found in the include
file
.In pwd.h :
.Bd -literal -offset indent
struct passwd {
	char	*pw_name;	/* user name */
	char	*pw_passwd;	/* encrypted password */
	uid_t	pw_uid;		/* user uid */
	gid_t	pw_gid;		/* user gid */
	time_t	pw_change;	/* password change time */
	char	*pw_class;	/* user access class */
	char	*pw_gecos;	/* Honeywell login info */
	char	*pw_dir;	/* home directory */
	char	*pw_shell;	/* default shell */
	time_t	pw_expire;	/* account expiration */
	int	pw_fields;	/* internal: fields filled in */
};
.Ed
.Pp
The functions
.Fn getpwnam ,
.Fn getpwuid ,
and
.Fn getpwuuid
search the password database for the given login name, user uid, or user uuid
respectively, always returning the first one encountered.
.Pp
Note that the password file
.Pa /etc/master.passwd
does not contain user UUIDs.
The UUID for a user may be found using
.Fn mbr_uid_to_uuid .
.Pp
On OS X, these routines are thread-safe and return a pointer to a
thread-specific data structure.  The contents of this data
structure are automatically released by subsequent calls to
any of these routines on the same thread, or when the thread exits.
These routines are therefore unsuitable for use in libraries or frameworks,
from where they may overwrite the per-thread data that the calling
application expects to find as a result of its own calls to these
routines. Library and framework code should use the alternative reentrant 
variants detailed below.
.Pp
The
.Fn getpwent
function
searches all available directory services on its first invocation.
It caches the returned entries in a list
and returns user account entries one at a time.
.Pp
.Em NOTE
that 
.Fn getpwent
may cause a very lengthy search for user account records by
.Nm opendirectoryd
and may result in a large number of user account records being cached
by the calling process.
Use of this function is not advised.
.Pp
The functions
.Fn getpwnam_r ,
.Fn getpwuid_r ,
and
.Fn getpwuuid_r
are alternative versions of
.Fn getpwnam ,
.Fn getpwuid ,
and
.Fn getpwuuid
respectively.
They store the results of their search in the caller-provided
.Fa pwd 
structure, which additionally contains pointers to strings that are 
stored in the caller-provided 
.Fa buffer
of size
.Fa bufsize .
(The maximum required
.Fa bufsize
can be obtained by passing the _SC_GETPW_R_SIZE_MAX constant to the
.Xr sysconf 3
call. See example code below.) When these functions are successful, the
.Fa pwd
argument will be filled in, and a pointer to that argument will be
stored in the caller-provided
.Fa result .
If an entry is not found or an error occurs,
.Fa result
will be set to
.Dv NULL .
.Pp
The
.Fn setpassent
function causes
.Fn getpwent
to ``rewind'' to the beginning of the list of entries cached by a previous
.Fn getpwent
call.
The cache is not cleared.
The
.Fa stayopen
parameter value is unused on OS X.
.Pp
The
.Fn setpwent
and
.Fn endpwent
functions clear the cached results from a previous
.Fn getpwent
call.
.Pp
.\"These routines have been written to ``shadow'' the password file, e.g.\&
.\"allow only certain programs to have access to the encrypted password.
.\"If the process which calls them has an effective uid of 0, the encrypted
.\"password will be returned, otherwise, the password field of the returned
.\"structure will point to the string
These routines have been written to 
.Ql shadow
the password of user records created on Mac OS X 10.3 or later,
by returning a structure whose password field points to the string
.Ql ******** .
Legacy crypt passwords are still returned for user records created on
earlier versions of Mac OS X whose
.Xr opendirectoryd 8
.Dt AuthenticationAuthority
attribute contains the value
.Ql ;basic; .
.Pp
Note that
.Xr opendirectoryd 8
allows user records from some sources which may not include all the component
fields present in a passwd structure.
Only the name, uid, and gid of a user record are required.
Default values will be supplied as follows:
.Bd -literal -offset indent
pw_passwd = "*"
pw_change = 0
pw_class = ""
pw_gecos = ""
pw_dir = "/var/empty"
pw_shell = "/usr/bin/false"
pw_expire = 0
.Ed
.Sh RETURN VALUES
The functions
.Fn getpwent ,
.Fn getpwnam ,
.Fn getpwuid ,
and
.Fn getpwuuid
return a valid pointer to a passwd structure on success
or
.Dv NULL
if the entry is not found or if an error occurs.
If an error does occur,
.Va errno
will be set.
Note that programs must explicitly set
.Va errno
to zero before calling any of these functions if they need to
distinguish between a non-existent entry and an error.
The functions
.Fn getpwnam_r ,
.Fn getpwuid_r ,
and
.Fn getpwuuid_r
return 0 if no error occurred, or an error number to indicate failure.
It is not an error if a matching entry is not found.
(Thus, if
.Fa result
is
.Dv NULL
and the return value is 0, no matching entry exists.)
.Pp
The
.Fn setpassent
function returns 0 on failure and 1 on success.
The
.Fn endpwent
and
.Fn setpwent
functions
have no return value.
.Sh EXAMPLES
To print the current user's home directory without depending on per-thread storage:
.Bd -literal -offset indent
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <pwd.h>

int bufsize;

if ((bufsize = sysconf(_SC_GETPW_R_SIZE_MAX)) == -1)
    abort();

char buffer[bufsize];
struct passwd pwd, *result = NULL;
if (getpwuid_r(getuid(), &pwd, buffer, bufsize, &result) != 0 || !result)
    abort();

printf("%s\\n", pwd.pw_dir);
.Ed
.Sh FILES
.Bl -tag -width /etc/master.passwd -compact
.\".It Pa /etc/pwd.db
.\"The insecure password database file
.\".It Pa /etc/spwd.db
The secure password database file
.It Pa /etc/master.passwd
The current password file
.It Pa /etc/passwd
A Version 7 format password file
.El
.\".Sh COMPATIBILITY
.\"The historic function
.\".Xr setpwfile 3 ,
.\"which allowed the specification of alternate password databases,
.\"has been deprecated and is no longer available.
.Sh ERRORS
These routines may fail for any of the errors specified in
.Xr open 2 ,
.Xr dbopen 3 ,
.Xr socket 2 ,
and
.Xr connect 2 ,
in addition to the following:
.Bl -tag -width Er
.It Bq Er ERANGE
The buffer specified by the
.Fa buffer
and
.Fa bufsize
arguments was insufficiently sized to store the result.
The caller should retry with a larger buffer.
.El
.Sh SEE ALSO
.Xr getlogin 2 ,
.Xr getgrent 3 ,
.\".Xr nsswitch.conf 5 ,
.Xr passwd 5 ,
.\".Xr pwd_mkdb 8 ,
.\".Xr vipw 8 ,
.Xr mbr_uid_to_uuid 3, 
.Xr opendirectoryd 8 ,
.Xr yp 8
.Sh STANDARDS
The
.Fn getpwent ,
.Fn getpwnam ,
.Fn getpwnam_r ,
.Fn getpwuid ,
.Fn getpwuid_r ,
.Fn setpwent ,
and
.Fn endpwent
functions conform to
.St -p1003.1-96 .
.Sh HISTORY
The
.Fn getpwent ,
.Fn getpwnam ,
.Fn getpwuid ,
.Fn setpwent ,
and
.Fn endpwent
functions appeared in
.At v7 .
The
.Fn setpassent
function appeared in
.Bx 4.3 Reno .
The
.\".Fn getpwent_r ,
.\".Fn getpwnam_r ,
.Fn getpwnam_r
and
.Fn getpwuid_r
functions appeared in
.Fx 5.1 .
The functions
.Fn getpwuuid
and
.Fn getpwuuid_r
appeared in Mac OS X 10.8.
.Sh BUGS
The functions
.Fn getpwent ,
.Fn getpwnam ,
.Fn getpwuid ,
and
.Fn getpwuuid ,
.\"leave their results in an internal static object and return
leave their results in an internal thread-specific memory and return
a pointer to that object.
Subsequent calls to
the same function
will modify the same object.
.\".Pp
.\"The functions
.\".Fn getpwent ,
.\".Fn getpwent_r ,
.\".Fn endpwent ,
.\".Fn setpassent ,
.\"and
.\".Fn setpwent
.\"are fairly useless in a networked environment and should be
.\"avoided, if possible.
.\"The
.\".Fn getpwent
.\"and
.\".Fn getpwent_r
.\"functions
.\"make no attempt to suppress duplicate information if multiple
.\"sources are specified in
.\".Xr nsswitch.conf 5 .
