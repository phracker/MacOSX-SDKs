.\"
.\" Copyright (c) Mark J. Kilgard, 1996.
.\"
.TH glutPostOverlayRedisplay 3GLUT "3.7" "GLUT" "GLUT"
.SH NAME
glutPostOverlayRedisplay, glutPostWindowOverlayRedisplay - marks the
overlay of the current or specified window as needing to be
redisplayed.
.SH SYNTAX
.nf
#include <GLUT/glut.h>
.LP
void glutPostOverlayRedisplay(void);
void glutPostWindowOverlayRedisplay(int win);
.fi
.SH DESCRIPTION
Mark the overlay of current window as needing to be redisplayed.
The next iteration through glutMainLoop, the window's overlay
display callback (or simply the display callback if no overlay display
callback is registered) will be called to redisplay the window's
overlay plane. Multiple calls to glutPostOverlayRedisplay
before the next display callback opportunity (or overlay display
callback opportunity if one is registered) generate only a single
redisplay. glutPostOverlayRedisplay may be called within a
window's display or overlay display callback to re-mark that
window for redisplay. 

Logically, overlay damage notification for a window is treated as a
glutPostOverlayRedisplay on the damaged window. Unlike
damage reported by the window system,
glutPostOverlayRedisplay will not set to true the overlay's
damaged status (returned by
glutLayerGet(GLUT_OVERLAY_DAMAGED). 

If the window you want to post an overlay redisplay on is not already current
(and you do not require it to be immediately made current), using
glutPostWindowOverlayRedisplay is more efficient that calling glutSetWindow to
the desired window and then calling glutPostOverlayRedisplay.
.SH EXAMPLE
If you are doing an interactive effect like rubberbanding in the 
overlay, it is a good idea to structure your rendering to minimize
flicker (most overlays are single-buffered).  Only clear the
overlay if you know that the window has been damaged.  Otherwise,
try to simply erase what you last drew and redraw it in an updated
position.  Here is an example overlay display callback used to
implement overlay rubberbanding:
.nf
.LP
  void
  redrawOverlay(void)
  {
    static int prevStretchX, prevStretchY;

    if (glutLayerGet(GLUT_OVERLAY_DAMAGED)) {
      /* Damage means we needwindoay callback 4at theeeeeeeeeeeeeeey displayOverlayRedisplay - marks the
o6s w_COLOR_BUFFER_BITglutCrea} esteck 4at theeeeUnample.  Heay(voi-d)
lay - marks thIativi(urrent windglutCreas thBlutns w_LINE_LOOPglutCreas thVesplx2ide chorXow tchorYglutCreas thVesplx2ide chorXowLAY_DAMAGED)glutCreas thVesplx2idrGet(GLUT_OVERLAY_DAMAGED)glutCreas thVesplx2idrGet(GLUT_OVER tchorYglutCreas thEnd(glutCrea}.
  }
Iativi( thetInitWindBlutns w_LINE_LOOPglutCreathVesplx2ide chorXow tchorYglutCreathVesplx2ide chorXowsAMAGED)glutCreathVesplx2idsGLUT_OVERsAMAGED)glutCreathVesplx2idsGLUT_OVER tchorYglutCreathEnd(glutCrearGet(GLUT_OV =RsAMAGEDXlutCrearGet(GLUT_OY =RsAMAGEDY;e your program toNostceverla

The overlay display callback can b
.LP
  menu
stattWina has beallback p is saved fben whe GLUTeeeee;red. has ben b
nred. 
.Sedro minifaPostck pju Hereawerlay d Heay(voibup mespply itsurrent windorigin.gram torrent mendle callbaced accay calatus paraea to structuris a gmply tbes damay The sHeauttoo be
ray(voibup misit in an uphutton forawOverlbenerateyou are idia, prevSayRedisplay
.SH AUTH not set thisverlaydow, glutSetColor
.SHThe over
