.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Apache::TestHandler 3"
.TH Apache::TestHandler 3 "2015-06-18" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Apache::TestHandler \- a few response handlers and helpers
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&    package My::Test;
\&    use Apache::TestHandler ();
\&    sub handler {
\&        my ($r) = @_;
\&        my $result = do_my_test;
\&        Apache::TestHandler::ok1 $r, $result;
\&    }
\&
\&    sub handler2 {
\&        my ($r) = @_;
\&        my $result = do_my_test;
\&        Apache::TestHandler::ok $r, $result;
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Apache::TestHandler\*(C'\fR provides 2 very simple response handler.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .IP "ok $r, $boolean" 4
.el .IP "ok \f(CW$r\fR, \f(CW$boolean\fR" 4
.IX Item "ok $r, $boolean"
The handler simply prints out \f(CW\*(C`ok\*(C'\fR or \f(CW\*(C`not ok\*(C'\fR depending on the
optional \f(CW$boolean\fR parameter.
.Sp
If \f(CW$boolean\fR is omitted \f(CW\*(C`true\*(C'\fR is assumed.
.ie n .IP "ok1 $r, $boolean" 4
.el .IP "ok1 \f(CW$r\fR, \f(CW$boolean\fR" 4
.IX Item "ok1 $r, $boolean"
This handler implements a simple response-only test. It can be used on its
own to check if for a certain \s-1URI\s0 the response phase is reached. Or it
can be called like a normal function to print out the test result. The
client side is automatically created as described in
<http://perl.apache.org/docs/general/testing/testing.html#Developing_Response_only_Part_of_a_Test>.
.Sp
\&\f(CW$boolean\fR is optional. If omitted \f(CW\*(C`true\*(C'\fR is assumed.
.IP "same_interp_counter" 4
.IX Item "same_interp_counter"
.PD 0
.IP "same_interp_fixup" 4
.IX Item "same_interp_fixup"
.PD
\&\s-1TODO\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The Apache-Test tutorial:
<http://perl.apache.org/docs/general/testing/testing.html>.
.PP
Apache::Test.
.SH "AUTHOR"
.IX Header "AUTHOR"
Doug MacEachern, Geoffrey Young, Stas Bekman, Torsten FÃ¶rtsch and others.
.PP
Questions can be asked at the test-dev <at> httpd.apache.org list
For more information see: http://httpd.apache.org/test/.
