.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::SSLeay::Handle 3"
.TH Net::SSLeay::Handle 3 "2019-05-10" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::SSLeay::Handle \- Perl module that lets SSL (HTTPS) sockets be
handled as standard file handles.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Net::SSLeay::Handle qw/shutdown/;
\&  my ($host, $port) = ("localhost", 443);
\&
\&  tie(*SSL, "Net::SSLeay::Handle", $host, $port);
\&
\&  print SSL "GET / HTTP/1.0\er\en";
\&  shutdown(\e*SSL, 1);
\&  print while (<SSL>);
\&  close SSL;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Net::SSLeay::Handle allows you to request and receive \s-1HTTPS\s0 web pages
using \*(L"old-fashion\*(R" file handles as in:
.PP
.Vb 1
\&    print SSL "GET / HTTP/1.0\er\en";
.Ve
.PP
and
.PP
.Vb 1
\&    print while (<SSL>);
.Ve
.PP
If you export the shutdown routine, then the only extra code that
you need to add to your program is the tie function as in:
.PP
.Vb 9
\&    my $socket;
\&    if ($scheme eq "https") {
\&        tie(*S2, "Net::SSLeay::Handle", $host, $port);
\&        $socket = \e*S2;
\&    else {
\&        $socket = Net::SSLeay::Handle\->make_socket($host, $port);
\&    }
\&    print $socket $request_headers;
\&    ...
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "shutdown" 4
.IX Item "shutdown"
.Vb 1
\&  shutdown(\e*SOCKET, $mode)
.Ve
.Sp
Calls to the main \fBshutdown()\fR don't work with tied sockets created with this
module.  This shutdown should be able to distinquish between tied and untied
sockets and do the right thing.
.IP "debug" 4
.IX Item "debug"
.Vb 2
\&  my $debug = Net::SSLeay::Handle\->debug()
\&  Net::SSLeay::Handle\->debug(1)
.Ve
.Sp
Get/set debugging mode. Always returns the debug value before the function call.
if an additional argument is given the debug option will be set to this value.
.IP "make_socket" 4
.IX Item "make_socket"
.Vb 1
\&  my $sock = Net::SSLeay::Handle\->make_socket($host, $port);
.Ve
.Sp
Creates a socket that is connected to \f(CW$post\fR using \f(CW$port\fR. It uses
\&\f(CW$Net::SSLeay::proxyhost\fR and proxyport if set and authentificates itself against
this proxy depending on \f(CW$Net::SSLeay::proxyauth\fR. It also turns autoflush on for
the created socket.
.SS "\s-1USING EXISTING SOCKETS\s0"
.IX Subsection "USING EXISTING SOCKETS"
One of the motivations for writing this module was to avoid
duplicating socket creation code (which is mostly error handling).
The calls to \fBtie()\fR above where it is passed a \f(CW$host\fR and \f(CW$port\fR is
provided for convenience testing.  If you already have a socket
connected to the right host and port, S1, then you can do something
like:
.PP
.Vb 8
\&    my $socket \e*S1;
\&    if ($scheme eq "https") {
\&        tie(*S2, "Net::SSLeay::Handle", $socket);
\&        $socket = \e*S2;
\&    }
\&    my $last_sel = select($socket); $| = 1; select($last_sel);
\&    print $socket $request_headers;
\&    ...
.Ve
.PP
Note: As far as I know you must be careful with the globs in the \fBtie()\fR
function.  The first parameter must be a glob (*SOMETHING) and the
last parameter must be a reference to a glob (\e*SOMETHING_ELSE) or a
scaler that was assigned to a reference to a glob (as in the example
above)
.PP
Also, the two globs must be different.  When I tried to use the same
glob, I got a core dump.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
None by default.
.PP
You can export the \fBshutdown()\fR function.
.PP
It is suggested that you do export \fBshutdown()\fR or use the fully
qualified \fBNet::SSLeay::Handle::shutdown()\fR function to shutdown \s-1SSL\s0
sockets.  It should be smart enough to distinguish between \s-1SSL\s0 and
non-SSL sockets and do the right thing.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 2
\&  use Net::SSLeay::Handle qw/shutdown/;
\&  my ($host, $port) = ("localhost", 443);
\&
\&  tie(*SSL, "Net::SSLeay::Handle", $host, $port);
\&
\&  print SSL "GET / HTTP/1.0\er\en";
\&  shutdown(\e*SSL, 1);
\&  print while (<SSL>);
\&  close SSL;
.Ve
.SH "TODO"
.IX Header "TODO"
Better error handling.  Callback routine?
.SH "CAVEATS"
.IX Header "CAVEATS"
Tying to a file handle is a little tricky (for me at least).
.PP
The first parameter to \fBtie()\fR must be a glob (*SOMETHING) and the last
parameter must be a reference to a glob (\e*SOMETHING_ELSE) or a scaler
that was assigned to a reference to a glob ($s = \e*SOMETHING_ELSE).
Also, the two globs must be different.  When I tried to use the same
glob, I got a core dump.
.PP
I was able to associate attributes to globs created by this module
(like *SSL above) by making a hash of hashes keyed by the file head1.
.SH "CHANGES"
.IX Header "CHANGES"
Please see Net\-SSLeay\-Handle\-0.50/Changes file.
.SH "BUGS"
.IX Header "BUGS"
If you encounter a problem with this module that you believe is a bug,
please report it in one of the following ways:
.IP "\(bu" 4
create a new issue <https://github.com/radiator-software/p5-net-ssleay/issues/new>
under the Net-SSLeay GitHub project at
<https://github.com/radiator\-software/p5\-net\-ssleay>;
.IP "\(bu" 4
open a ticket <https://rt.cpan.org/Ticket/Create.html?Queue=Net-SSLeay> using
the \s-1CPAN RT\s0 bug tracker's web interface at
<https://rt.cpan.org/Dist/Display.html?Queue=Net\-SSLeay>;
.IP "\(bu" 4
send an email to the \s-1CPAN RT\s0 bug tracker at
bug\-Net\-SSLeay@rt.cpan.org <mailto:bug-Net-SSLeay@rt.cpan.org>.
.PP
Please make sure your bug report includes the following information:
.IP "\(bu" 4
the code you are trying to run;
.IP "\(bu" 4
your operating system name and version;
.IP "\(bu" 4
the output of \f(CW\*(C`perl \-V\*(C'\fR;
.IP "\(bu" 4
the version of OpenSSL or LibreSSL you are using.
.SH "AUTHOR"
.IX Header "AUTHOR"
Originally written by Jim Bowlin.
.PP
Maintained by Sampo Kellomäki between July 2001 and August 2003.
.PP
Maintained by Florian Ragwitz between November 2005 and January 2010.
.PP
Maintained by Mike McCauley between November 2005 and June 2018.
.PP
Maintained by Chris Novakovic, Tuure Vartiainen and Heikki Vatiainen since June 2018.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001 Jim Bowlin <jbowlin@linklint.org>
.PP
Copyright (c) 2001\-2003 Sampo Kellomäki <sampo@iki.fi>
.PP
Copyright (c) 2005\-2010 Florian Ragwitz <rafl@debian.org>
.PP
Copyright (c) 2005\-2018 Mike McCauley <mikem@airspayce.com>
.PP
Copyright (c) 2018\- Chris Novakovic <chris@chrisn.me.uk>
.PP
Copyright (c) 2018\- Tuure Vartiainen <vartiait@radiatorsoftware.com>
.PP
Copyright (c) 2018\- Heikki Vatiainen <hvn@radiatorsoftware.com>
.PP
All rights reserved.
.SH "LICENSE"
.IX Header "LICENSE"
This module is released under the terms of the Artistic License 2.0. For
details, see the \f(CW\*(C`LICENSE\*(C'\fR file distributed with Net-SSLeay's source code.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Net::SSLeay, \fBperl\fR\|(1), http://openssl.org/
