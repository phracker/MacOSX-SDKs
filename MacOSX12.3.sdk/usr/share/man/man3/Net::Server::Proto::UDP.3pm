.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Server::Proto::UDP 3"
.TH Net::Server::Proto::UDP 3 "2017-08-10" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Server::Proto::UDP \- Net::Server UDP protocol.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
See Net::Server::Proto.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Protocol module for Net::Server.  This module implements the
\&\s-1SOCK_DGRAM\s0 socket type under \s-1INET\s0 (also known as \s-1UDP\s0).
See Net::Server::Proto.
.SH "PARAMETERS"
.IX Header "PARAMETERS"
The following paramaters may be specified in addition to
normal command line parameters for a Net::Server.  See
Net::Server for more information on reading arguments.
.IP "udp_recv_len" 4
.IX Item "udp_recv_len"
Specifies the number of bytes to read from the \s-1UDP\s0 connection
handle.  Data will be read into \f(CW$self\fR\->{'server'}\->{'udp_data'}.
Default is 4096.  See IO::Socket::INET and recv.
.IP "udp_recv_flags" 4
.IX Item "udp_recv_flags"
See recv.  Default is 0.
.IP "udp_broadcast" 4
.IX Item "udp_broadcast"
Default is undef.
.SH "QUICK PARAMETER LIST"
.IX Header "QUICK PARAMETER LIST"
.Vb 1
\&  Key               Value                    Default
\&
\&  ## UDP protocol parameters
\&  udp_recv_len      \ed+                      4096
\&  udp_recv_flags    \ed+                      0
\&  udp_broadcast     bool                     undef
.Ve
.SH "INTERNAL METHODS"
.IX Header "INTERNAL METHODS"
.ie n .IP """object""" 4
.el .IP "\f(CWobject\fR" 4
.IX Item "object"
Returns an object with parameters suitable for eventual creation of
a IO::Socket::INET object listining on \s-1UDP.\s0
.ie n .IP """connect""" 4
.el .IP "\f(CWconnect\fR" 4
.IX Item "connect"
Called when actually binding the port.  Handles default parameters
before calling parent method.
.SH "LICENCE"
.IX Header "LICENCE"
Distributed under the same terms as Net::Server
