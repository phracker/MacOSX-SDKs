.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Encode::Byte 3pm"
.TH Encode::Byte 3pm "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Encode::Byte \- Single Byte Encodings
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use Encode qw/encode decode/; 
\&    $greek = encode("iso\-8859\-7", $utf8);  # loads Encode::Byte implicitly
\&    $utf8  = decode("iso\-8859\-7", $greek); # ditto
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
This module implements various single byte encodings.  For most cases it uses
\&\ex80\-\exff (upper half) to map non-ASCII characters.  Encodings
supported are as follows.
.PP
.Vb 10
\&  Canonical      Alias                                Description
\&  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&  # ISO 8859 series
\&  (iso\-8859\-1   is in built\-in)
\&  iso\-8859\-2    latin2                                       [ISO]
\&  iso\-8859\-3    latin3                                       [ISO]
\&  iso\-8859\-4    latin4                                       [ISO]
\&  iso\-8859\-5                                                 [ISO]
\&  iso\-8859\-6                                                 [ISO]
\&  iso\-8859\-7                                                 [ISO]
\&  iso\-8859\-8                                                 [ISO]
\&  iso\-8859\-9    latin5                                       [ISO]
\&  iso\-8859\-10   latin6                                       [ISO]
\&  iso\-8859\-11
\&  (iso\-8859\-12 is nonexistent)
\&  iso\-8859\-13   latin7                                       [ISO]
\&  iso\-8859\-14   latin8                                       [ISO]
\&  iso\-8859\-15   latin9                                       [ISO]
\&  iso\-8859\-16   latin10                                      [ISO]
\&
\&  # Cyrillic
\&  koi8\-f                                        
\&  koi8\-r        cp878                                    [RFC1489]
\&  koi8\-u                                                 [RFC2319]
\&
\&  # Vietnamese
\&  viscii
\&
\&  # all cp* are also available as ibm\-*, ms\-*, and windows\-*
\&  # also see L<http://msdn.microsoft.com/en\-us/library/aa752010%28VS.85%29.aspx>
\&
\&  cp424  
\&  cp437  
\&  cp737  
\&  cp775  
\&  cp850  
\&  cp852  
\&  cp855  
\&  cp856  
\&  cp857  
\&  cp860  
\&  cp861  
\&  cp862  
\&  cp863  
\&  cp864  
\&  cp865  
\&  cp866  
\&  cp869  
\&  cp874  
\&  cp1006  
\&  cp1250        WinLatin2
\&  cp1251        WinCyrillic
\&  cp1252        WinLatin1
\&  cp1253        WinGreek
\&  cp1254        WinTurkish
\&  cp1255        WinHebrew
\&  cp1256        WinArabic
\&  cp1257        WinBaltic
\&  cp1258        WinVietnamese
\&
\&  # Macintosh
\&  # Also see L<http://developer.apple.com/technotes/tn/tn1150.html>
\&  MacArabic  
\&  MacCentralEurRoman  
\&  MacCroatian  
\&  MacCyrillic  
\&  MacFarsi  
\&  MacGreek  
\&  MacHebrew  
\&  MacIcelandic  
\&  MacRoman  
\&  MacRomanian  
\&  MacRumanian  
\&  MacSami  
\&  MacThai  
\&  MacTurkish  
\&  MacUkrainian  
\&
\&  # More vendor encodings
\&  AdobeStandardEncoding
\&  nextstep
\&  hp\-roman8
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
To find how to use this module in detail, see Encode.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Encode
