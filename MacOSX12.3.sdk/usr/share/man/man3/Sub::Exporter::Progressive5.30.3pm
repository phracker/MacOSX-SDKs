.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Sub::Exporter::Progressive 3"
.TH Sub::Exporter::Progressive 3 "2016-10-21" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Sub::Exporter::Progressive \- Only use Sub::Exporter if you need it
.SH "VERSION"
.IX Header "VERSION"
version 0.001013
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& package Syntax::Keyword::Gather;
\&
\& use Sub::Exporter::Progressive \-setup => {
\&   exports => [qw( break gather gathered take )],
\&   groups => {
\&     default => [qw( break gather gathered take )],
\&   },
\& };
\&
\& # elsewhere
\&
\& # uses Exporter for speed
\& use Syntax::Keyword::Gather;
\&
\& # somewhere else
\&
\& # uses Sub::Exporter for features
\& use Syntax::Keyword::Gather \*(Aqgather\*(Aq, take => { \-as => \*(Aqgrab\*(Aq };
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Sub::Exporter is an incredibly powerful module, but with that power comes
great responsibility, er\- as well as some runtime penalties.  This module
is a \f(CW\*(C`Sub::Exporter\*(C'\fR wrapper that will let your users just use Exporter
if all they are doing is picking exports, but use \f(CW\*(C`Sub::Exporter\*(C'\fR if your
users try to use \f(CW\*(C`Sub::Exporter\*(C'\fR's more advanced features, like
renaming exports, if they try to use them.
.PP
Note that this module will export \f(CW@EXPORT\fR, \f(CW@EXPORT_OK\fR and
\&\f(CW%EXPORT_TAGS\fR package variables for \f(CW\*(C`Exporter\*(C'\fR to work.  Additionally, if
your package uses advanced \f(CW\*(C`Sub::Exporter\*(C'\fR features like currying, this module
will only ever use \f(CW\*(C`Sub::Exporter\*(C'\fR, so you might as well use it directly.
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
ilmari \- Dagfinn Ilmari Manns√•ker (cpan:ILMARI) <ilmari@ilmari.org>
.PP
mst \- Matt S. Trout (cpan:MSTROUT) <mst@shadowcat.co.uk>
.PP
leont \- Leon Timmermans (cpan:LEONT) <leont@cpan.org>
.SH "AUTHOR"
.IX Header "AUTHOR"
Arthur Axel \*(L"fREW\*(R" Schmidt <Sub\-Exporter\-Progressive@afoolishmanifesto.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Arthur Axel \*(L"fREW\*(R" Schmidt.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
