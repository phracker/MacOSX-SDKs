.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::Install::ManifestSkip 3"
.TH Module::Install::ManifestSkip 3 "2014-08-16" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::Install::ManifestSkip \- Generate a MANIFEST.SKIP file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use inc::Module::Install;
\&
\&    all_from \*(Aqlib/Foo.pm\*(Aq;
\&
\&    manifest_skip;
\&
\&    WriteAll;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module generates a \f(CW\*(C`MANIFEST.SKIP\*(C'\fR file for you (using
Module::Manifest::Skip) that contains the common files that people do not
want in their \f(CW\*(C`MANIFEST\*(C'\fR files. The \s-1SKIP\s0 file is generated each time that you
(the module author) run \f(CW\*(C`Makefile.PL\*(C'\fR.
.PP
You can add your own custom entries at the top of the \f(CW\*(C`MANIFEST\*(C'\fR file. Just
put a blank line after your entries, and they will be left alone.
.PP
This module also adds '\s-1MANIFEST\s0' to the \f(CW\*(C`clean_files()\*(C'\fR list so that \f(CW\*(C`make
clean\*(C'\fR will remove your \f(CW\*(C`MANIFEST\*(C'\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
if you don't plan on adding anything to the stock \s-1MANIFEST.SKIP\s0 and just want
\&\f(CW\*(C`make clean\*(C'\fR to delete it, say this:
.PP
.Vb 1
\&    manifest_skip \*(Aqclean\*(Aq;
.Ve
.SH "THEORY"
.IX Header "THEORY"
one school of thought for release management is that you never commit your
\&\f(CW\*(C`MANIFEST\*(C'\fR file. You just generate it using \f(CW\*(C`make manifest\*(C'\fR, right before
releasing a module, and then delete it afterwards.
.PP
This is good because you never forget to add new files to your \f(CW\*(C`MANIFEST\*(C'\fR.
The only problems are that you always need to generate a \f(CW\*(C`MANIFEST.SKIP\*(C'\fR
file, and you need to add \f(CW\*(C`MANIFEST\*(C'\fR to your clean_files, or delete it by
hand. This module does these things for you.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ingy döt Net <ingy@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2010\-2014. Ingy döt Net.
.PP
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
