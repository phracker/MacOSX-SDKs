.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)read.2	8.4 (Berkeley) 2/26/94
.\" $FreeBSD: src/lib/libc/sys/read.2,v 1.9.2.6 2001/12/14 18:34:01 ru Exp $
.\"
.Dd June 3, 2021
.Dt READ 2
.Os
.Sh NAME
.Nm pread ,
.Nm read ,
.Nm preadv ,
.Nm readv
.Nd read input
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In sys/uio.h
.In unistd.h
.Ft ssize_t
.Fo pread
.Fa "int d"
.Fa "void *buf"
.Fa "size_t nbyte"
.Fa "off_t offset"
.Fc
.Ft ssize_t
.Fo read
.Fa "int fildes"
.Fa "void *buf"
.Fa "size_t nbyte"
.Fc
.Ft ssize_t
.Fo preadv
.Fa "int d"
.Fa "const struct iovec *iov"
.Fa "int iovcnt"
.Fa "off_t offset"
.Fc
.Ft ssize_t
.Fo readv
.Fa "int d"
.Fa "const struct iovec *iov"
.Fa "int iovcnt"
.Fc
.Sh DESCRIPTION
.Fn read
attempts to read
.Fa nbyte
bytes of data from the object referenced by the descriptor
.Fa fildes
into the buffer pointed to by
.Fa buf .
.Fn readv
performs the same action,
but scatters the input data into the
.Fa iovcnt
buffers specified by the members of the
.Fa iov
array: iov[0], iov[1], ..., iov[iovcnt\|\-\|1].
.Fn pread
and
.Fn preadv
perform the same functions,
but read from the specified position in the file
without modifying the file pointer.
.Pp
For
.Fn readv
and
.Fn preadv ,
the
.Fa iovec
structure is defined as:
.Pp
.Bd -literal -offset indent -compact
struct iovec {
	char   *iov_base;  /* Base address. */
	size_t iov_len;    /* Length. */
};
.Ed
.Pp
Each
.Fa iovec
entry specifies the base address and length of an area
in memory where data should be placed.
.Fn readv
and
.Fn preadv
will always fill an area completely before proceeding
to the next.
.Pp
On objects capable of seeking, the
.Fn read
starts at a position
given by the pointer associated with
.Fa fildes
(see
.Xr lseek 2 ) .
Upon return from
.Fn read ,
the pointer is incremented by the number of bytes actually read.
.Pp
Objects that are not capable of seeking always read from the current
position.  The value of the pointer associated with such an
object is undefined.
.Pp
Upon successful completion,
.Fn read ,
.Fn readv ,
.Fn pread ,
and
.Fn preadv
return the number of bytes actually read and placed in the buffer.
The system guarantees to read the number of bytes requested if
the descriptor references a normal file that has that many bytes left
before the end-of-file, but in no other case.
.Pp
.Fn read
and
.Fn pread
will fail if the parameter
.Fa nbyte
exceeds
.Dv INT_MAX ,
and they do not attempt a partial read.
.Sh RETURN VALUES
If successful, the
number of bytes actually read is returned.
Upon reading end-of-file,
zero is returned.
Otherwise, a -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn read ,
.Fn readv ,
.Fn pread ,
and
.Fn preadv
calls
will succeed unless:
.Bl -tag -width Er
.\" ===========
.It Bq Er EAGAIN
The file was marked for non-blocking I/O,
and no data were ready to be read.
.\" ===========
.It Bq Er EBADF
.Fa fildes
is not a valid file or socket descriptor open for reading.
.\" ===========
.It Bq Er EFAULT
.Fa Buf
points outside the allocated address space.
.\" ===========
.It Bq Er EINTR
A read from a slow device was interrupted before
any data arrived by the delivery of a signal.
.It Bq Er EINVAL
The pointer associated with
.Fa fildes
was negative.
.\" ===========
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.\" ===========
.\" .It Bq Er EIO
.\" The process is a member of a background process
.\" attempting to read from its controlling terminal.
.\" ===========
.\" .It Bq Er EIO
.\" The process is ignoring or blocking the SIGTTIN signal.
.\" ===========
.It Bq Er EIO
The process group is orphaned.
.\" ===========
.It Bq Er EIO
The file is a regular file,
.Fa nbyte
is greater than 0,
the starting position is before the end-of-file,
and the starting position is greater than or equal
to the offset maximum established
for the open file descriptor associated with
.Fa fildes .
.\" ===========
.It Bq Er EISDIR
An attempt is made to read a directory.
.\" ===========
.It Bq Er ENOBUFS
An attempt to allocate a memory buffer fails.
.\" ===========
.It Bq Er ENOMEM
Insufficient memory is available.
.\" ===========
.It Bq Er ENXIO
An action is requested of a device that does not exist.
.\" ===========
.It Bq Er ENXIO
A requested action cannot be performed by the device.
.\" ===========
.It Bq Er ESTALE
An attempt to read a remote file through NFS that has already been deleted in
the server.
.\" ===========
.It Bq Er ETIMEDOUT
The connection timed out while reading a remote file from a soft mounted NFS
volume (see
.Xr mount_nfs 8 ) .
.\" ===========
.It Bq Er ETIMEDOUT
The file is a
.Dq dataless
file that requires materialization and materialization timed out or
encountered some other temporary failure.
.\" ===========
.It Bq Er EDEADLK
The file is a
.Dq dataless
file that requires materialization and the I/O policy of the current thread
or process disallows dataless file materialization
.Po see
.Xr getiopolicy_np 3
.Pc .
.El
.Pp
.Fn pread
and
.Fn preadv
calls may also return the following errors:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
The specified file offset is invalid.
.\" ===========
.It Bq Er ESPIPE
The file descriptor is associated with a pipe, socket, or FIFO.
.El
.Pp
The
.Fn read
call may also return the following errors:
.Bl -tag -width Er
.\" ===========
.It Bq Er ECONNRESET
The connection is closed by the peer
during a read attempt on a socket.
.\" ===========
.It Bq Er ENOTCONN
A read is attempted on an unconnected socket.
.\" ===========
.It Bq Er ETIMEDOUT
A transmission timeout occurs
during a read attempt on a socket.
.El
.Pp
The
.Fn read
and
.Fn pread
call may also return the following error:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
The value provided for
.Fa nbyte
exceeds
.Dv INT_MAX .
.El
.Pp
The
.Fn readv
and
.Fn preadv
calls may also return one of the following errors:
.Bl -tag -width Er
.\" ===========
.It Bq Er EFAULT
Part of the
.Fa iov
points outside the process's allocated address space.
.\" ===========
.It Bq Er EINVAL
.Fa Iovcnt
was less than or equal to 0, or greater than 16.
.\" ===========
.It Bq Er EINVAL
One of the
.Fa iov_len
values in the
.Fa iov
array was negative.
.\" ===========
.It Bq Er EINVAL
The sum of the
.Fa iov_len
values in the
.Fa iov
array overflowed a 32-bit integer.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/uio.h>
.Fd #include <unistd.h>
.Pp
The include files
.In sys/types.h
and
.In sys/uio.h
are necessary for all functions.
.Sh SEE ALSO
.Xr dup 2 ,
.Xr fcntl 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr socketpair 2 ,
.Xr compat 5
.Sh STANDARDS
The
.Fn read
function call is expected to conform to
.St -p1003.1-90 .
The
.Fn readv
and
.Fn pread
functions are expected to conform to
.St -xpg4.2 .
.Fn preadv
is nonstandard.
.Sh HISTORY
The
.Fn pread
function call
appeared in
.At V.4 .
The
.Fn readv
function call
appeared in
.Bx 4.2 .
A
.Fn read
function call appeared in
.At v6 .
