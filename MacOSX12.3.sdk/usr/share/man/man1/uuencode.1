.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)uuencode.1	8.1 (Berkeley) 6/6/93
.\" $FreeBSD: src/usr.bin/uuencode/uuencode.1,v 1.9.2.6 2002/04/27 01:55:11 jmallett Exp $
.\"
.Dd January 27, 2002
.Dt UUENCODE 1
.Os
.Sh NAME
.Nm uudecode ,
.Nm uuencode
.Nd encode/decode a binary file
.Sh SYNOPSIS
.Nm uuencode
.Op Fl m
.Op Fl o Ar output_file
.Op Ar file
.Ar name
.Nm uudecode
.Op Fl cips
.Op Ar
.Nm uudecode
.Op Fl i
.Fl o Ar output_file
.Op Ar file
.Sh DESCRIPTION
The
.Nm uuencode
and
.Nm uudecode
utilities are used to transmit binary files over transmission mediums
that do not support other than simple
.Tn ASCII
data.
.Pp
The
.Nm uuencode
utility reads
.Ar file
(or by default the standard input) and writes an encoded version
to the standard output, or
.Ar output_file
if one has been specified.
The encoding uses only printing
.Tn ASCII
characters and includes the
mode of the file and the operand
.Ar name
for use by
.Nm uudecode .
.Pp
The
.Nm uudecode
utility transforms
.Em uuencoded
files (or by default, the standard input) into the original form.
The resulting file is named either
.Ar name
or (depending on options passed to
.Nm uudecode )
.Ar output_file
and will have the mode of the original file except that setuid
and execute bits are not retained.
The
.Nm uudecode
utility ignores any leading and trailing lines.
.Pp
The following options are available for
.Nm uuencode :
.Bl -tag -width ident
.It Fl m
Use the Base64 method of encoding, rather than the traditional
.Nm uuencode
algorithm.
.It Fl o Ar output_file
Output to
.Ar output_file
instead of standard output.
.El
.Pp
The following options are available for
.Nm uudecode :
.Bl -tag -width ident
.It Fl c
Decode more than one uuencode'd file from
.Ar file
if possible.
.It Fl i
Do not overwrite files.
.It Fl o Ar output_file
Output to
.Ar output_file
instead of any pathname contained in the input data.
.It Fl p
Decode
.Ar file
and write output to standard output.
.It Fl s
Do not strip output pathname to base filename.
By default
.Nm uudecode
deletes any prefix ending with the last slash '/' for security
purpose.
.El
.Sh EXAMPLES
The following example packages up a source tree, compresses it,
uuencodes it and mails it to a user on another system.
When
.Nm uudecode
is run on the target system, the file ``src_tree.tar.Z'' will be
created which may then be uncompressed and extracted into the original
tree.
.Pp
.Bd -literal -offset indent -compact
tar cf \- src_tree \&| compress \&|
uuencode src_tree.tar.Z \&| mail sys1!sys2!user
.Ed
.Pp
The following example unpack all uuencode'd
files from your mailbox into your current working directory.
.Pp
.Bd -literal -offset indent -compact
uudecode -c < $MAIL
.Ed
.Pp
The following example extract a compress'ed tar
archive from your mailbox
.Pp
.Bd -literal -offset indent -compact
uudecode -o /dev/stdout < $MAIL | zcat | tar xfv -
.Ed
.Sh LEGACY DESCRIPTION
In legacy operation,
.Nm uudecode
masks file modes with 0666,
preventing the creation of executable files.
.Pp
.Nm uudecode
cannot change the mode of a created file
which is not owned by the current user (unless that user is root).
In legacy operation,
.Xr fchmod 2
allows the mode to be changed.
.Pp
For more information about legacy mode, see
.Xr compat 5 .
.Sh SEE ALSO
.Xr basename 1 ,
.Xr compress 1 ,
.Xr mail 1 ,
.Xr uucp 1 ,
.Xr fchmod 2 ,
.Xr uuencode 5
.Sh BUGS
Files encoded using the traditional algorithm are expanded by 35%
(3 bytes become 4, plus control information).
.Sh HISTORY
The
.Nm uudecode
and
.Nm uuencode
utilities appeared in
.Bx 4.0 .
