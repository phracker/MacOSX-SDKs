.\" Copyright (c) 2011-2016 Apple Inc. All rights reserved.
.Dd July 2, 2016
.Dt "stringdups" 1
.Os
.Sh NAME
.Nm stringdups
.Nd Identify duplicate strings or other objects in malloc blocks of a target process
.Sh SYNOPSIS
.Nm
.Op Fl minimumCount Ar count
.Op Fl stringsOnly
.Op Fl nostacks
.Op Fl callTrees
.Op Fl invertCallTrees
.Ar pid | partial-executable-name | memory-graph-file
.Sh DESCRIPTION
.Nm
examines the content of malloc blocks in the specified target process.
For all blocks which have the same content, it shows a line with
the number of such blocks, their total allocated size (the total
size in the malloc heap, not just the specific size of their content),
and the average allocated size.
.Pp
.Nm stringdups
requires one argument -- either the process ID or the full or partial executable name
of the process to examine, or the pathname of a memory graph file generated by
.Nm leaks.
When generating a memory graph with
.Nm leaks
for use with
.Nm stringdups
it is necessary to use the
.Fl fullContent
argument to include labels describing the contents of memory.
.Pp
If the MallocStackLogging environment variable was set when the
target process was launched,
.Nm
also displays stack backtraces or call trees showing where all the
blocks with a particular grouping of content were allocated.
.Pp
.Nm
gathers the content of blocks of various types including:
.Pp
.Bl -bullet -compact
.It
C strings (composed of UTF8 characters, null terminated, of any length)
.It
Pascal strings (composed of UTF8 characters with length byte at start, no longer than 255 characters, not necessarily null terminated)
.It
NSString of all types (immutable, mutable, UTF8, Unicode).  Malloc blocks
which are the storage blocks for non-inline or mutable NSString's are listed
separately.  The string content is shown for both but the block sizes
accurately show what is allocated in the malloc heap for that particular
chunk of storage.
.It
NSDate
.It
NSNumber
.It
NSPathStore2  (Cocoa's representation of file paths)
.It
__NSMallocBlock__  For these,
.Nm stringdups
shows the symbol name of the code block (^) that this storage is associated with.
If debug information is available, the source path and line number of the code block are also shown.
.It
item counts for collection classes such as NSArray, NSSet, and NSDictionary
.El
.Pp
.Sh OPTIONS
.Bl -tag -width "-minimumCount count"
.It Fl minimumCount Ar count
Only print information for object descriptions which appear at least
.Ar count
times in the target process.  The default minimum count is 2.  To see
all strings in the target process, use 1 or use 'heap <pid> -addresses all'.
.It Fl stringsOnly
Only print information for objects that have string content such as
C or Pascal strings, or NSString.
.It Fl nostacks
Do not print stack backtraces or call trees even if the target process
has the MallocStackLogging environment variable set.
.It Fl callTrees
If stack backtraces are available, then by default all the object descriptions for
a particular stack backtrace are consolidated together.  However if this argument is
passed then the output is consolidated by each particular string and
a call tree is displayed showing the allocation backtraces of all occurrences
of objects with that description.  This output can be very lengthy if
minimumCount is a low value, because the same call tree may be displayed
many times.
.It Fl invertCallTrees
Same as
.Fl callTrees
except that the call trees are printed from hottest to coldest stack frame, so the leaf
malloc call appears first.
.El
.Pp
.Sh SEE ALSO
.Xr heap 1 ,
.Xr leaks 1 ,
.Xr malloc_history 1 ,
.Xr vmmap 1 ,
.Xr DevToolsSecurity 1
