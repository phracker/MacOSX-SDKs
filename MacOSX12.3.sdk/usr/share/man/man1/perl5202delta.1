.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5202DELTA 1"
.TH PERL5202DELTA 1 "2019-10-21" "perl v5.30.3" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5202delta \- what is new for perl v5.20.2
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.20.1 release and the 5.20.2
release.
.PP
If you are upgrading from an earlier release such as 5.20.0, first read
perl5201delta, which describes differences between 5.20.0 and 5.20.1.
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
There are no changes intentionally incompatible with 5.20.1.  If any exist,
they are bugs, and we request that you submit a report.  See \*(L"Reporting Bugs\*(R"
below.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "\(bu" 4
attributes has been upgraded from version 0.22 to 0.23.
.Sp
The usage of \f(CW\*(C`memEQs\*(C'\fR in the \s-1XS\s0 has been corrected.
[perl #122701] <https://rt.perl.org/Ticket/Display.html?id=122701>
.IP "\(bu" 4
Data::Dumper has been upgraded from version 2.151 to 2.151_01.
.Sp
Fixes \s-1CVE\-2014\-4330\s0 by adding a configuration variable/option to limit
recursion when dumping deep data structures.
.IP "\(bu" 4
Errno has been upgraded from version 1.20_03 to 1.20_05.
.Sp
Warnings when building the \s-1XS\s0 on Windows with the Visual \*(C+ compiler are now
avoided.
.IP "\(bu" 4
feature has been upgraded from version 1.36 to 1.36_01.
.Sp
The \f(CW\*(C`postderef\*(C'\fR feature has now been documented.  This feature was actually
added in Perl 5.20.0 but was accidentally omitted from the feature
documentation until now.
.IP "\(bu" 4
IO::Socket has been upgraded from version 1.37 to 1.38.
.Sp
Document the limitations of the \fBconnected()\fR method.
[perl #123096] <https://rt.perl.org/Ticket/Display.html?id=123096>
.IP "\(bu" 4
Module::CoreList has been upgraded from version 5.020001 to 5.20150214.
.Sp
The list of Perl versions covered has been updated.
.IP "\(bu" 4
PathTools has been upgraded from version 3.48 to 3.48_01.
.Sp
A warning from the \fBgcc\fR compiler is now avoided when building the \s-1XS.\s0
.IP "\(bu" 4
PerlIO::scalar has been upgraded from version 0.18 to 0.18_01.
.Sp
Reading from a position well past the end of the scalar now correctly returns
end of file.
[perl #123443] <https://rt.perl.org/Ticket/Display.html?id=123443>
.Sp
Seeking to a negative position still fails, but no longer leaves the file
position set to a negation location.
.Sp
\&\f(CW\*(C`eof()\*(C'\fR on a \f(CW\*(C`PerlIO::scalar\*(C'\fR handle now properly returns true when the file
position is past the 2GB mark on 32\-bit systems.
.IP "\(bu" 4
Storable has been upgraded from version 2.49 to 2.49_01.
.Sp
Minor grammatical change to the documentation only.
.IP "\(bu" 4
VMS::DCLsym has been upgraded from version 1.05 to 1.05_01.
.Sp
Minor formatting change to the documentation only.
.IP "\(bu" 4
VMS::Stdio has been upgraded from version 2.4 to 2.41.
.Sp
Minor formatting change to the documentation only.
.SH "Documentation"
.IX Header "Documentation"
.SS "New Documentation"
.IX Subsection "New Documentation"
\fIperlunicook\fR
.IX Subsection "perlunicook"
.PP
This document, by Tom Christiansen, provides examples of handling Unicode in
Perl.
.SS "Changes to Existing Documentation"
.IX Subsection "Changes to Existing Documentation"
\fIperlexperiment\fR
.IX Subsection "perlexperiment"
.IP "\(bu" 4
Added reference to subroutine signatures.  This feature was actually added in
Perl 5.20.0 but was accidentally omitted from the experimental feature
documentation until now.
.PP
\fIperlpolicy\fR
.IX Subsection "perlpolicy"
.IP "\(bu" 4
The process whereby features may graduate from experimental status has now been
formally documented.
.PP
\fIperlsyn\fR
.IX Subsection "perlsyn"
.IP "\(bu" 4
An ambiguity in the documentation of the ellipsis statement has been corrected.
[perl #122661] <https://rt.perl.org/Ticket/Display.html?id=122661>
.SH "Diagnostics"
.IX Header "Diagnostics"
The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see perldiag.
.SS "Changes to Existing Diagnostics"
.IX Subsection "Changes to Existing Diagnostics"
.IP "\(bu" 4
Bad symbol for scalar is now documented.
This error is not new, but was not previously documented here.
.IP "\(bu" 4
Missing right brace on \eN{} is now
documented.  This error is not new, but was not previously documented here.
.SH "Testing"
.IX Header "Testing"
.IP "\(bu" 4
The test script \fIre/rt122747.t\fR has been added to verify that
perl #122747 <https://rt.perl.org/Ticket/Display.html?id=122747> remains
fixed.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Regained Platforms"
.IX Subsection "Regained Platforms"
\&\s-1IRIX\s0 and Tru64 platforms are working again.  (Some \f(CW\*(C`make test\*(C'\fR failures
remain.)
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
\&\s-1AIX\s0 now sets the length in \f(CW\*(C`getsockopt\*(C'\fR correctly.
[perl #120835] <https://rt.perl.org/Ticket/Display.html?id=120835>,
[cpan #91183] <https://rt.cpan.org/Ticket/Display.html?id=91183>,
[cpan #85570] <https://rt.cpan.org/Ticket/Display.html?id=85570>
.IP "\(bu" 4
In Perl 5.20.0, \f(CW$^N\fR accidentally had the internal \s-1UTF8\s0 flag turned off if
accessed from a code block within a regular expression, effectively
UTF8\-encoding the value.  This has been fixed.
[perl #123135] <https://rt.perl.org/Ticket/Display.html?id=123135>
.IP "\(bu" 4
Various cases where the name of a sub is used (autoload, overloading, error
messages) used to crash for lexical subs, but have been fixed.
.IP "\(bu" 4
An assertion failure when parsing \f(CW\*(C`sort\*(C'\fR with debugging enabled has been
fixed.
[perl #122771] <https://rt.perl.org/Ticket/Display.html?id=122771>
.IP "\(bu" 4
Loading \s-1UTF8\s0 tables during a regular expression match could cause assertion
failures under debugging builds if the previous match used the very same
regular expression.
[perl #122747] <https://rt.perl.org/Ticket/Display.html?id=122747>
.IP "\(bu" 4
Due to a mistake in the string-copying logic, copying the value of a state
variable could instead steal the value and undefine the variable.  This bug,
introduced in Perl 5.20, would happen mostly for long strings (1250 chars or
more), but could happen for any strings under builds with copy-on-write
disabled.
[perl #123029] <https://rt.perl.org/Ticket/Display.html?id=123029>
.IP "\(bu" 4
Fixed a bug that could cause perl to execute an infinite loop during
compilation.
[perl #122995] <https://rt.perl.org/Ticket/Display.html?id=122995>
.IP "\(bu" 4
On Win32, restoring in a child pseudo-process a variable that was \f(CW\*(C`local()\*(C'\fRed
in a parent pseudo-process before the \f(CW\*(C`fork\*(C'\fR happened caused memory corruption
and a crash in the child pseudo-process (and therefore \s-1OS\s0 process).
[perl #40565] <https://rt.perl.org/Ticket/Display.html?id=40565>
.IP "\(bu" 4
Tainted constants evaluated at compile time no longer cause unrelated
statements to become tainted.
[perl #122669] <https://rt.perl.org/Ticket/Display.html?id=122669>
.IP "\(bu" 4
Calling \f(CW\*(C`write\*(C'\fR on a format with a \f(CW\*(C`^**\*(C'\fR field could produce a panic in
\&\fBsv_chop()\fR if there were insufficient arguments or if the variable used to fill
the field was empty.
[perl #123245] <https://rt.perl.org/Ticket/Display.html?id=123245>
.IP "\(bu" 4
In Perl 5.20.0, \f(CW\*(C`sort CORE::fake\*(C'\fR where 'fake' is anything other than a
keyword started chopping of the last 6 characters and treating the result as a
sort sub name.  The previous behaviour of treating \*(L"CORE::fake\*(R" as a sort sub
name has been restored.
[perl #123410] <https://rt.perl.org/Ticket/Display.html?id=123410>
.IP "\(bu" 4
A bug in regular expression patterns that could lead to segfaults and other
crashes has been fixed.  This occurred only in patterns compiled with \f(CW"/i"\fR,
while taking into account the current \s-1POSIX\s0 locale (this usually means they
have to be compiled within the scope of \f(CW"use\ locale"\fR), and there must be
a string of at least 128 consecutive bytes to match.
[perl #123539] <https://rt.perl.org/Ticket/Display.html?id=123539>
.IP "\(bu" 4
\&\f(CW\*(C`qr/@array(?{block})/\*(C'\fR no longer dies with \*(L"Bizarre copy of \s-1ARRAY\*(R".\s0
[perl #123344] <https://rt.perl.org/Ticket/Display.html?id=123344>
.IP "\(bu" 4
\&\f(CW\*(C`gmtime\*(C'\fR no longer crashes with not-a-number values.
[perl #123495] <https://rt.perl.org/Ticket/Display.html?id=123495>
.IP "\(bu" 4
Certain syntax errors in substitutions, such as \f(CW\*(C`s/${<>{})//\*(C'\fR, would
crash, and had done so since Perl 5.10.  (In some cases the crash did not start
happening until Perl 5.16.)  The crash has, of course, been fixed.
[perl #123542] <https://rt.perl.org/Ticket/Display.html?id=123542>
.IP "\(bu" 4
A memory leak in some regular expressions, introduced in Perl 5.20.1, has been
fixed.
[perl #123198] <https://rt.perl.org/Ticket/Display.html?id=123198>
.IP "\(bu" 4
\&\f(CW\*(C`formline("@...", "a");\*(C'\fR would crash.  The \f(CW\*(C`FF_CHECKNL\*(C'\fR case in
\&\fBpp_formline()\fR didn't set the pointer used to mark the chop position, which led
to the \f(CW\*(C`FF_MORE\*(C'\fR case crashing with a segmentation fault.  This has been
fixed.
[perl #123538] <https://rt.perl.org/Ticket/Display.html?id=123538>
[perl #123622] <https://rt.perl.org/Ticket/Display.html?id=123622>
.IP "\(bu" 4
A possible buffer overrun and crash when parsing a literal pattern during
regular expression compilation has been fixed.
[perl #123604] <https://rt.perl.org/Ticket/Display.html?id=123604>
.SH "Known Problems"
.IX Header "Known Problems"
.IP "\(bu" 4
It is a known bug that lexical subroutines cannot be used as the \f(CW\*(C`SUBNAME\*(C'\fR
argument to \f(CW\*(C`sort\*(C'\fR.  This will be fixed in a future version of Perl.
.SH "Errata From Previous Releases"
.IX Header "Errata From Previous Releases"
.IP "\(bu" 4
A regression has been fixed that was introduced in Perl 5.20.0 (fixed in Perl
5.20.1 as well as here) in which a \s-1UTF\-8\s0 encoded regular expression pattern
that contains a single \s-1ASCII\s0 lowercase letter does not match its uppercase
counterpart.
[perl #122655] <https://rt.perl.org/Ticket/Display.html?id=122655>
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.20.2 represents approximately 5 months of development since Perl 5.20.1
and contains approximately 6,300 lines of changes across 170 files from 34
authors.
.PP
Excluding auto-generated files, documentation and release tools, there were
approximately 1,900 lines of changes to 80 .pm, .t, .c and .h files.
.PP
Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.20.2:
.PP
Aaron Crane, Abigail, Andreas Voegele, Andy Dougherty, Anthony Heading,
Aristotle Pagaltzis, Chris 'BinGOs' Williams, Craig A. Berry, Daniel Dragan,
Doug Bell, Ed J, Father Chrysostomos, Glenn D. Golden, H.Merijn Brand, Hugo van
der Sanden, James E Keenan, Jarkko Hietaniemi, Jim Cromie, Karen Etheridge,
Karl Williamson, kmx, Matthew Horsfall, Max Maischein, Peter Martini, Rafael
Garcia-Suarez, Ricardo Signes, Shlomi Fish, Slaven Rezic, Steffen Mu\*:ller,
Steve Hay, Tadeusz SoXnierz, Tony Cook, Yves Orton, \*(Aevar Arnfjo\*:r\*(d-
Bjarmason.
.PP
The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0 modules
included in Perl's core.  We're grateful to the entire \s-1CPAN\s0 community for
helping Perl to flourish.
.PP
For a more complete list of all of Perl's historical contributors, please see
the \fI\s-1AUTHORS\s0\fR file in the Perl source distribution.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at http://www.perl.org/ ,
the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the perlbug program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of \f(CW\*(C`perl \-V\*(C'\fR,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5\-security\-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
\&\s-1CPAN.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
