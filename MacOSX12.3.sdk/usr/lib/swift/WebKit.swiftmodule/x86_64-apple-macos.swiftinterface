// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.32 clang-1316.0.20.8)
// swift-module-flags: -target x86_64-apple-macos12.3 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftWebKit -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-concurrency -module-name WebKit
// swift-module-flags-ignorable: -user-module-version 7613.1.17.1.6
import Swift
@_exported import WebKit
import _Concurrency
@available(iOS 14.0, macOS 11.0, *)
extension WebKit.WKPDFConfiguration {
  public var rect: CoreGraphics.CGRect? {
    get
    set
  }
}
@available(iOS 14.0, macOS 11.0, *)
extension WebKit.WKWebView {
  @_Concurrency.MainActor(unsafe) public func callAsyncJavaScript(_ functionBody: Swift.String, arguments: [Swift.String : Any] = [:], in frame: WebKit.WKFrameInfo? = nil, in contentWorld: WebKit.WKContentWorld, completionHandler: ((Swift.Result<Any, Swift.Error>) -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) public func createPDF(configuration: WebKit.WKPDFConfiguration = .init(), completionHandler: @escaping (Swift.Result<Foundation.Data, Swift.Error>) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public func createWebArchiveData(completionHandler: @escaping (Swift.Result<Foundation.Data, Swift.Error>) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public func evaluateJavaScript(_ javaScript: Swift.String, in frame: WebKit.WKFrameInfo? = nil, in contentWorld: WebKit.WKContentWorld, completionHandler: ((Swift.Result<Any, Swift.Error>) -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) public func find(_ string: Swift.String, configuration: WebKit.WKFindConfiguration = .init(), completionHandler: @escaping (WebKit.WKFindResult) -> Swift.Void)
}
@available(iOS 15.0, macOS 12.0, *)
extension WebKit.WKWebView {
  
  #if compiler(>=5.3) && $AsyncAwait
  @_Concurrency.MainActor(unsafe) public func callAsyncJavaScript(_ functionBody: Swift.String, arguments: [Swift.String : Any] = [:], in frame: WebKit.WKFrameInfo? = nil, contentWorld: WebKit.WKContentWorld) async throws -> Any?
  #endif

  
  #if compiler(>=5.3) && $AsyncAwait
  @_Concurrency.MainActor(unsafe) public func pdf(configuration: WebKit.WKPDFConfiguration = .init()) async throws -> Foundation.Data
  #endif

  
  #if compiler(>=5.3) && $AsyncAwait
  @_Concurrency.MainActor(unsafe) public func evaluateJavaScript(_ javaScript: Swift.String, in frame: WebKit.WKFrameInfo? = nil, contentWorld: WebKit.WKContentWorld) async throws -> Any?
  #endif

  
  #if compiler(>=5.3) && $AsyncAwait
  @_Concurrency.MainActor(unsafe) public func find(_ string: Swift.String, configuration: WebKit.WKFindConfiguration = .init()) async throws -> WebKit.WKFindResult
  #endif

}
