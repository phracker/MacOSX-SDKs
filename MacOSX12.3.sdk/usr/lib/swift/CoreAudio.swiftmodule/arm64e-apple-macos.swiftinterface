// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.32 clang-1316.0.20.8)
// swift-module-flags: -target arm64e-apple-macos12.3 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftCoreAudio -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name CoreAudio
// swift-module-flags-ignorable: -user-module-version 1.1
@_exported import CoreAudio
import Swift
import _Concurrency
extension Swift.UnsafeBufferPointer {
  public init(_ audioBuffer: CoreAudioTypes.AudioBuffer)
}
extension Swift.UnsafeMutableBufferPointer {
  public init(_ audioBuffer: CoreAudioTypes.AudioBuffer)
}
extension CoreAudioTypes.AudioBuffer {
  public init<Element>(_ typedBuffer: Swift.UnsafeMutableBufferPointer<Element>, numberOfChannels: Swift.Int)
}
extension CoreAudioTypes.AudioBufferList {
  public static func sizeInBytes(maximumBuffers: Swift.Int) -> Swift.Int
  public static func allocate(maximumBuffers: Swift.Int) -> CoreAudio.UnsafeMutableAudioBufferListPointer
}
public struct UnsafeMutableAudioBufferListPointer {
  public init(_ p: Swift.UnsafeMutablePointer<CoreAudioTypes.AudioBufferList>)
  public init?(_ p: Swift.UnsafeMutablePointer<CoreAudioTypes.AudioBufferList>?)
  public var count: Swift.Int {
    get
    nonmutating set(newValue)
  }
  public var unsafePointer: Swift.UnsafePointer<CoreAudioTypes.AudioBufferList> {
    get
  }
  public var unsafeMutablePointer: Swift.UnsafeMutablePointer<CoreAudioTypes.AudioBufferList>
}
extension CoreAudio.UnsafeMutableAudioBufferListPointer : Swift.MutableCollection, Swift.RandomAccessCollection {
  public typealias Element = CoreAudioTypes.AudioBuffer
  public typealias Index = Swift.Int
  public typealias Indices = Swift.Range<Swift.Int>
  public var startIndex: Swift.Int {
    get
  }
  public var endIndex: Swift.Int {
    get
  }
  @_borrowed public subscript(index: CoreAudio.UnsafeMutableAudioBufferListPointer.Index) -> CoreAudio.UnsafeMutableAudioBufferListPointer.Element {
    _read
    nonmutating _modify
  }
  public typealias Iterator = Swift.IndexingIterator<CoreAudio.UnsafeMutableAudioBufferListPointer>
  public typealias SubSequence = Swift.Slice<CoreAudio.UnsafeMutableAudioBufferListPointer>
}
extension CoreAudioTypes.AudioChannelLayout {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public static func sizeInBytes(maximumDescriptions: Swift.Int) -> Swift.Int
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public static func allocate(maximumDescriptions: Swift.Int) -> CoreAudioTypes.AudioChannelLayout.UnsafeMutablePointer
}
extension CoreAudioTypes.AudioChannelLayout {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public struct UnsafeMutablePointer {
    public init(_ p: Swift.UnsafeMutablePointer<CoreAudioTypes.AudioChannelLayout>)
    public init?(_ p: Swift.UnsafeMutablePointer<CoreAudioTypes.AudioChannelLayout>?)
    public var count: Swift.Int {
      get
      nonmutating set(newValue)
    }
    public var unsafePointer: Swift.UnsafePointer<CoreAudioTypes.AudioChannelLayout> {
      get
    }
    public var unsafeMutablePointer: Swift.UnsafeMutablePointer<CoreAudioTypes.AudioChannelLayout>
  }
}
@available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
extension CoreAudioTypes.AudioChannelLayout.UnsafeMutablePointer : Swift.MutableCollection, Swift.RandomAccessCollection {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public typealias Element = CoreAudioTypes.AudioChannelDescription
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public typealias Index = Swift.Int
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public typealias Indices = Swift.Range<Swift.Int>
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public var startIndex: Swift.Int {
    get
  }
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public var endIndex: Swift.Int {
    get
  }
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  @_borrowed public subscript(index: CoreAudioTypes.AudioChannelLayout.UnsafeMutablePointer.Index) -> CoreAudioTypes.AudioChannelLayout.UnsafeMutablePointer.Element {
    _read
    nonmutating _modify
  }
  public typealias Iterator = Swift.IndexingIterator<CoreAudioTypes.AudioChannelLayout.UnsafeMutablePointer>
  public typealias SubSequence = Swift.Slice<CoreAudioTypes.AudioChannelLayout.UnsafeMutablePointer>
}
extension CoreAudioTypes.AudioChannelLayout {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public struct UnsafePointer {
    public init(_ p: Swift.UnsafePointer<CoreAudioTypes.AudioChannelLayout>)
    public init?(_ p: Swift.UnsafePointer<CoreAudioTypes.AudioChannelLayout>?)
    public var count: Swift.Int {
      get
    }
    public var unsafePointer: Swift.UnsafePointer<CoreAudioTypes.AudioChannelLayout>
  }
}
@available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
extension CoreAudioTypes.AudioChannelLayout.UnsafePointer : Swift.Collection, Swift.RandomAccessCollection {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public typealias Element = CoreAudioTypes.AudioChannelDescription
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public typealias Index = Swift.Int
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public typealias Indices = Swift.Range<Swift.Int>
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public var startIndex: Swift.Int {
    get
  }
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public var endIndex: Swift.Int {
    get
  }
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  @_borrowed public subscript(index: CoreAudioTypes.AudioChannelLayout.UnsafePointer.Index) -> CoreAudioTypes.AudioChannelLayout.UnsafePointer.Element {
    _read
  }
  public typealias Iterator = Swift.IndexingIterator<CoreAudioTypes.AudioChannelLayout.UnsafePointer>
  public typealias SubSequence = Swift.Slice<CoreAudioTypes.AudioChannelLayout.UnsafePointer>
}
@available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
public struct ManagedAudioChannelLayout {
  public init(audioChannelLayoutPointer: CoreAudioTypes.AudioChannelLayout.UnsafePointer, deallocator: @escaping (CoreAudioTypes.AudioChannelLayout.UnsafePointer) -> Swift.Void)
  public init(tag: CoreAudioTypes.AudioChannelLayoutTag)
  public init(maximumDescriptions: Swift.Int)
  public init(channelDescriptions: [CoreAudioTypes.AudioChannelDescription])
  public var tag: CoreAudioTypes.AudioChannelLayoutTag {
    get
    set(newValue)
  }
  public var bitmap: CoreAudioTypes.AudioChannelBitmap {
    get
    set(newValue)
  }
  public mutating func setAllToUnknown()
  public var channelDescriptions: CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions {
    _read
    _modify
  }
  public var sizeInBytes: Swift.Int {
    get
  }
  public var numberOfChannels: Swift.Int {
    get
  }
  public func withUnsafePointer<Result>(_ body: (Swift.UnsafePointer<CoreAudioTypes.AudioChannelLayout>) throws -> Result) rethrows -> Result
  public mutating func withUnsafeMutablePointer<Result>(_ body: (Swift.UnsafeMutablePointer<CoreAudioTypes.AudioChannelLayout>) throws -> Result) rethrows -> Result
  public struct ChannelDescriptions : Swift.MutableCollection, Swift.RandomAccessCollection {
    public typealias Element = CoreAudioTypes.AudioChannelDescription
    public typealias Index = Swift.Int
    public typealias Indices = Swift.Range<Swift.Int>
    public var startIndex: Swift.Int {
      get
    }
    public var endIndex: Swift.Int {
      get
    }
    public var count: Swift.Int {
      get
    }
    public subscript(index: CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions.Index) -> CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions.Element {
      _read
      _modify
    }
    public typealias Iterator = Swift.IndexingIterator<CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions>
    public typealias SubSequence = Swift.Slice<CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions>
  }
}
extension CoreAudioTypes.AudioChannelDescription {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public static func == (lhs: CoreAudioTypes.AudioChannelDescription, rhs: CoreAudioTypes.AudioChannelDescription) -> Swift.Bool
}
@available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
extension CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions : Swift.Equatable {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public static func == (lhs: CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions, rhs: CoreAudio.ManagedAudioChannelLayout.ChannelDescriptions) -> Swift.Bool
}
@available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
extension CoreAudio.ManagedAudioChannelLayout : Swift.Equatable {
  @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
  public static func == (lhs: CoreAudio.ManagedAudioChannelLayout, rhs: CoreAudio.ManagedAudioChannelLayout) -> Swift.Bool
}
