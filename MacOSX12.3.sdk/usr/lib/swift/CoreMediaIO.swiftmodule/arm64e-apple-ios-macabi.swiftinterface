// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.32 clang-1316.0.20.8)
// swift-module-flags: -target arm64e-apple-ios15.4-macabi -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftCoreMediaIO -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name CoreMediaIO
// swift-module-flags-ignorable: -user-module-version 5355.16
import CoreMediaIO.CMIOExtension
@_exported import CoreMediaIO
import Foundation
import Swift
import _Concurrency
@available(macOS 12.0, *)
extension CoreMediaIO.CMIOExtensionStreamFormat {
  @nonobjc convenience public init(formatDescription: CoreMedia.CMFormatDescription, maxFrameDuration: CoreMedia.CMTime, minFrameDuration: CoreMedia.CMTime, validFrameDurations: [CoreMedia.CMTime]?)
  @nonobjc public var validFrameDurations: [CoreMedia.CMTime]? {
    get
  }
}
@available(macOS 12.0, *)
extension CoreMediaIO.CMIOExtensionDeviceProperties {
  @nonobjc public var suspended: Swift.Bool? {
    get
    set(newValue)
  }
  @nonobjc public var transportType: Swift.Int? {
    get
    set(newValue)
  }
}
@available(macOS 12.0, *)
extension CoreMediaIO.CMIOExtensionStreamProperties {
  @nonobjc public var activeFormatIndex: Swift.Int? {
    get
    set(newValue)
  }
  @nonobjc public var frameDuration: CoreMedia.CMTime? {
    get
    set(newFrameDuration)
  }
  @nonobjc public var maxFrameDuration: CoreMedia.CMTime? {
    get
    set(newFrameDuration)
  }
  @nonobjc public var sinkBufferQueueSize: Swift.Int? {
    get
    set(newValue)
  }
  @nonobjc public var sinkBuffersRequiredForStartup: Swift.Int? {
    get
    set(newValue)
  }
  @nonobjc public var sinkBufferUnderrunCount: Swift.Int? {
    get
    set(newValue)
  }
  @nonobjc public var sinkEndOfData: Swift.Int? {
    get
    set(newValue)
  }
}
