// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.32 clang-1316.0.20.8)
// swift-module-flags: -target x86_64-apple-ios15.0-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name DeveloperToolsSupport
// swift-module-flags-ignorable: -user-module-version 13
@_exported import DeveloperToolsSupport
import Swift
import _Concurrency
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
public struct LibraryItem {
  @available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
  public struct Category {
    public static let effect: DeveloperToolsSupport.LibraryItem.Category
    public static let layout: DeveloperToolsSupport.LibraryItem.Category
    public static let control: DeveloperToolsSupport.LibraryItem.Category
    public static let other: DeveloperToolsSupport.LibraryItem.Category
  }
  public init<SnippetExpressionType>(_ snippet: @autoclosure () -> SnippetExpressionType, visible: Swift.Bool = true, title: Swift.String? = nil, category: DeveloperToolsSupport.LibraryItem.Category = .other, matchingSignature: Swift.String? = nil)
}
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
@_functionBuilder public struct LibraryContentBuilder {
  public static func buildBlock(_ segments: [DeveloperToolsSupport.LibraryItem]...) -> [DeveloperToolsSupport.LibraryItem]
  public static func buildExpression(_ item: DeveloperToolsSupport.LibraryItem) -> [DeveloperToolsSupport.LibraryItem]
  public static func buildExpression(_ items: [DeveloperToolsSupport.LibraryItem]) -> [DeveloperToolsSupport.LibraryItem]
}
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
public protocol LibraryContentProvider {
  associatedtype ModifierBase = Any
  @DeveloperToolsSupport.LibraryContentBuilder var views: [DeveloperToolsSupport.LibraryItem] { get }
  @DeveloperToolsSupport.LibraryContentBuilder func modifiers(base: Self.ModifierBase) -> [DeveloperToolsSupport.LibraryItem]
}
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
extension DeveloperToolsSupport.LibraryContentProvider {
  public var views: [DeveloperToolsSupport.LibraryItem] {
    get
  }
  public func modifiers(base: Self.ModifierBase) -> [DeveloperToolsSupport.LibraryItem]
}
