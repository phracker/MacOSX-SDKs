.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)fork.2	6.5 (Berkeley) 3/10/91
.\" $FreeBSD: /repoman/r/ncvs/src/lib/libc/i386/sys/i386_get_ldt.2,v 1.21 2004/07/02 19:07:30 ru Exp $
.\"
.Dd February 14, 2020
.Dt I386_GET_LDT 2
.Os
.Sh NAME
.Nm i386_get_ldt ,
.Nm i386_set_ldt
.Nd manage i386 per-process Local Descriptor Table entries
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In architecture/i386/table.h
.In i386/user_ldt.h
.Ft int
.Fn i386_get_ldt "int start_sel" "union ldt_entry *descs" "int num_sels"
.Ft int
.Fn i386_set_ldt "int start_sel" "union ldt_entry *descs" "int num_sels"
.Sh DESCRIPTION
The
.Fn i386_get_ldt
system call
will return the list of i386 descriptors that the process has in its
LDT.
The
.Fn i386_set_ldt
system call
will set a list of i386 descriptors for the current process in its
LDT.
Both routines accept a starting selector number
.Fa start_sel ,
an array of memory that
will contain the descriptors to be set or returned
.Fa descs ,
and the number of entries to set or return
.Fa num_sels .
.Pp
The argument
.Fa descs
can be either code_desc_t, data_desc_t or call_gate_t and are defined in
.In architecture/i386/desc.h .
These structures are defined by the architecture
as disjoint bit-fields, so care must be taken in constructing them.
.Pp
If
.Fa start_sel
is
.Em LDT_AUTO_ALLOC ,
.Fa num_sels
is 1 and the descriptor pointed to by
.Fa descs
is legal, then
.Fn i386_set_ldt
will allocate a descriptor and return its
selector number.
.Pp
If
.Fa num_descs
is 1,
.Fa start_sels
is valid, and
.Fa descs
is NULL, then
.Fn i386_set_ldt
will free that descriptor
(making it available to be reallocated again later).
.Pp
If
.Fa num_descs
is 0,
.Fa start_sels
is 0 and
.Fa descs
is NULL then, as a special case,
.Fn i386_set_ldt
will free all descriptors.
.Sh NOTES
.Pp
.Fn i386_set_ldt
and
.Fn i386_get_ldt
may be used by 64-bit processes to create 32-bit (compatibility mode) code segments
(in addition to the set of other segments already specified), that, together with
additional infrastructure not provided by macOS, enables 32-bit code execution.
Some platforms may reject segments with non-zero base addresses by returning -1 and
setting errno to EINVAL.
.Sh RETURN VALUES
Upon successful completion,
.Fn i386_get_ldt
returns the number of descriptors currently in the LDT.
The
.Fn i386_set_ldt
system call
returns the first selector set.
In the case when a descriptor is allocated by the kernel, its number will
be returned.
Otherwise, a value of -1 is returned and the global
variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn i386_get_ldt
and
.Fn i386_set_ldt
system calls
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
An inappropriate value was used for
.Fa start_sel
or
.Fa num_sels ,
or the platform does not support non-zero base addresses in custom descriptors and the descriptor base address passed to
.Fn i386_set_ldt
is non-zero.
.It Bq Er EACCES
The caller attempted to use a descriptor that would
circumvent protection or cause a failure.
.El
.Sh SEE ALSO
i386 Microprocessor Programmer's Reference Manual, Intel
.Sh WARNING
You can really hose your process using this.
