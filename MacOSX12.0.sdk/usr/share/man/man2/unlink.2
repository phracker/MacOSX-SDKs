.\"	$NetBSD: unlink.2,v 1.7 1995/02/27 12:39:13 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)unlink.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt UNLINK 2
.Os BSD 4
.Sh NAME
.Nm unlink ,
.Nm unlinkat
.Nd remove directory entry
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo unlink
.Fa "const char *path"
.Fc
.Ft int
.Fn unlinkat "int fd" "const char *path" "int flag"
.Sh DESCRIPTION
The
.Fn unlink
function
removes the link named by
.Fa path
from its directory and decrements the link count of the
file which was referenced by the link.
If that decrement reduces the link count of the file
to zero,
and no process has the file open, then
all resources associated with the file are reclaimed.
If one or more process have the file open when the last link is removed,
the link is removed, but the removal of the file is delayed until
all references to it have been closed.
.Pp
The
.Fn unlinkat
system call is equivalent to
.Fn unlink
or
.Fn rmdir
except in the case where
.Fa path
specifies a relative path.
In this case the directory entry to be removed is determined
relative to the directory associated with the file descriptor
.Fa fd
instead of the current working directory.
.Pp
The values for
.Fa flag
are constructed by a bitwise-inclusive OR of flags from the following list,
defined in
.In fcntl.h :
.Bl -tag -width indent
.It Dv AT_REMOVEDIR
Remove the directory entry specified by
.Fa fd
and
.Fa path
as a directory, not a normal file.
.El
.Pp
If
.Fn unlinkat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior is
identical to a call to
.Fa unlink
or
.Fa rmdir
respectively, depending on whether or not the
.Dv AT_REMOVEDIR
bit is set in flag.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn unlink
system call will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ===========
.It Bq Er EACCES
Write permission is denied on the directory containing the link
to be removed.
.\" ===========
.It Bq Er EBUSY
The entry to be unlinked is the mount point for a
mounted file system.
.\" ===========
.It Bq Er EBUSY
The file named by the
.Fa path
argument cannot be unlinked
because it is being used by the system or by another process.
.\" ===========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.\" ===========
.It Bq Er EIO
An I/O error occurs while deleting the directory entry
or deallocating the inode.
.\" ===========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ===========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeds
.Dv {NAME_MAX}
characters, or an entire path name exceeds
.Dv {PATH_MAX}
characters (possibly as a result of expanding a symlink).
.\" ===========
.It Bq Er ENOENT
The named file does not exist.
.\" ===========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ===========
.It Bq Er EPERM
The named file is a directory and the effective user ID
of the process is not the super-user.
.\" ===========
.It Bq Er EPERM
The directory containing the file is marked sticky,
and neither the containing directory nor the file to be removed
are owned by the effective user ID.
.\" ===========
.It Bq Er EROFS
The named file resides on a read-only file system.
.El
.Pp
In addition to the errors returned by the
.Fn unlink ,
the
.Fn unlinkat
may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er ENOTEMPTY
The
.Fa flag
parameter has the
.Dv AT_REMOVEDIR
bit set and the
.Fa path
argument names a directory that is not an empty directory,
or there are hard links to the directory other than dot or
a single entry in dot-dot.
.It Bq Er ENOTDIR
The
.Fa flag
parameter has the
.Dv AT_REMOVEDIR
bit set and
.Fa path
does not name a directory.
.It Bq Er EINVAL
The value of the
.Fa flag
argument is not valid.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh SEE ALSO
.Xr close 2 ,
.Xr link 2 ,
.Xr rmdir 2 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn unlinkat
system call is expected to conform to POSIX.1-2008 .
.Sh HISTORY
An
.Fn unlink
function call appeared in 
.At v6 .
The
.Fn unlinkat
system call appeared in OS X 10.10
