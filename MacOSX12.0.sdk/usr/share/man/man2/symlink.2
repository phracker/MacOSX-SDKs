.\"	$NetBSD: symlink.2,v 1.7 1995/02/27 12:38:34 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)symlink.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt SYMLINK 2
.Os BSD 4.2
.Sh NAME
.Nm symlink ,
.Nm symlinkat
.Nd make symbolic link to a file
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo symlink
.Fa "const char *path1"
.Fa "const char *path2"
.Fc
.Ft int
.Fn symlinkat "const char *name1" "int fd" "const char *name2"
.Sh DESCRIPTION
A symbolic link
.Fa path2
is created to
.Fa path1
.Pf ( Fa path2
is the name of the
file created,
.Fa path1
is the string
used in creating the symbolic link).
Either name may be an arbitrary path name; the files need not
be on the same file system.
.Pp
The
.Fn symlinkat
system call is equivalent to
.Fn symlink
except in the case where
.Fa name2
specifies a relative path.
In this case the symbolic link is created relative to the directory
associated with the file descriptor
.Fa fd
instead of the current working directory.
If
.Fn symlinkat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior is
identical to a call to
.Fn symlink .
.Sh RETURN VALUES
Upon successful completion, a zero value is returned.
If an error occurs, the error code is stored in
.Va errno
and a -1 value is returned.
.Sh ERRORS
The symbolic link succeeds unless:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
Write permission is denied in the directory
where the symbolic link is being created.
.\" ===========
.It Bq Er EACCES
A component of the
.Fa path2
path prefix denies search permission.
.\" ===========
.It Bq Er EDQUOT
The directory in which the entry for the new symbolic link
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.\" ===========
.It Bq Er EDQUOT
The new symbolic link cannot be created because the user's
quota of disk blocks on the file system that will
contain the symbolic link has been exhausted.
.\" ===========
.It Bq Er EDQUOT
The user's quota of inodes on the file system on
which the symbolic link is being created has been exhausted.
.\" ===========
.It Bq Er EEXIST
.Fa Path2
already exists.
.\" ===========
.It Bq Er EFAULT
.Fa Path1
or
.Fa path2
points outside the process's allocated address space.
.\" ===========
.It Bq Er EIO
An I/O error occurs while making the directory entry
or allocating the inode.
.\" ===========
.It Bq Er EIO
An I/O error occurs while making the directory entry for
.Fa path2 ,
or allocating the inode for
.Fa path2 ,
or writing out the link contents of
.Fa path2 .
.\" ===========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ===========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeds 
.Dv {NAME_MAX}
characters, or an entire path name exceeds
.Dv {PATH_MAX}
characters.
.\" ===========
.It Bq Er ENOENT
A component of
.Fa path2
does not name an existing file or
.Fa path2
is an empty string.
.\" ===========
.It Bq Er ENOSPC
The directory in which the entry for the new symbolic link is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.\" ===========
.It Bq Er ENOSPC
The new symbolic link cannot be created because there
there is no space left on the file
system that will contain the symbolic link.
.\" ===========
.It Bq Er ENOSPC
There are no free inodes on the file system on which the
symbolic link is being created.
.\" ===========
.It Bq Er ENOTDIR
A component of the
.Fa path2
prefix is not a directory.
.\" ===========
.It Bq Er EROFS
The file
.Fa path2
would reside on a read-only file system.
.El
.Pp
In addition to the errors returned by the
.Fn symlink ,
the
.Fn symlinkat
may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa name2
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er ENOTDIR
The
.Fa name2
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.It Bq Er EILSEQ
The filename does not match the encoding rules.
.El
.Sh SEE ALSO
.Xr ln 1 ,
.Xr link 2 ,
.Xr unlink 2 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn symlinkat
system call is expected to conform to POSIX.1-2008 .
.Sh HISTORY
The
.Fn symlink
function call appeared in
.Bx 4.2 .
The
.Fn symlinkat
system call appeared in OS X 10.10
