'\"
'\" Generated from file '/System/Volumes/Data/SWE/macOS/BuildRoots/6b362bc7f6/Library/Caches/com.apple.xbs/Sources/tcl/tcl-134/tcl_ext/tcllib/tcllib/modules/math/rational_funcs.man' by tcllib/doctools with format 'nroff'
'\" Copyright (c) 2005 Arjen Markus <arjenmarkus@users.sourceforge.net>
'\"
'\" The definitions below are for supplemental macros used in Tcl/Tk
'\" manual entries.
'\"
'\" .AP type name in/out ?indent?
'\"	Start paragraph describing an argument to a library procedure.
'\"	type is type of argument (int, etc.), in/out is either "in", "out",
'\"	or "in/out" to describe whether procedure reads or modifies arg,
'\"	and indent is equivalent to second arg of .IP (shouldn't ever be
'\"	needed;  use .AS below instead)
'\"
'\" .AS ?type? ?name?
'\"	Give maximum sizes of arguments for setting tab stops.  Type and
'\"	name are examples of largest possible arguments that will be passed
'\"	to .AP later.  If args are omitted, default tab stops are used.
'\"
'\" .BS
'\"	Start box enclosure.  From here until next .BE, everything will be
'\"	enclosed in one large box.
'\"
'\" .BE
'\"	End of box enclosure.
'\"
'\" .CS
'\"	Begin code excerpt.
'\"
'\" .CE
'\"	End code excerpt.
'\"
'\" .VS ?version? ?br?
'\"	Begin vertical sidebar, for use in marking newly-changed parts
'\"	of man pages.  The first argument is ignored and used for recording
'\"	the version when the .VS was added, so that the sidebars can be
'\"	found and removed when they reach a certain age.  If another argument
'\"	is present, then a line break is forced before starting the sidebar.
'\"
'\" .VE
'\"	End of vertical sidebar.
'\"
'\" .DS
'\"	Begin an indented unfilled display.
'\"
'\" .DE
'\"	End of indented unfilled display.
'\"
'\" .SO
'\"	Start of list of standard options for a Tk widget.  The
'\"	options follow on successive lines, in four columns separated
'\"	by tabs.
'\"
'\" .SE
'\"	End of list of standard options for a Tk widget.
'\"
'\" .OP cmdName dbName dbClass
'\"	Start of description of a specific option.  cmdName gives the
'\"	option's name as specified in the class command, dbName gives
'\"	the option's name in the option database, and dbClass gives
'\"	the option's class in the option database.
'\"
'\" .UL arg1 arg2
'\"	Print arg1 underlined, then print arg2 normally.
'\"
'\" RCS: @(#) $Id: man.macros,v 1.1 2009/01/30 04:56:47 andreas_kupries Exp $
'\"
'\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
'\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1	\\fI\\$2\\fP	(\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
'\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
'\"	# BS - start boxed text
'\"	# ^y = starting y location
'\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
'\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
'\"	# VS - start vertical sidebar
'\"	# ^Y = starting y location
'\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
'\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
'\"	# Special macro to handle page bottom:  finish off current
'\"	# box/sidebar if in box/sidebar mode, then invoked standard
'\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
'\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
'\"	# DE - end display
.de DE
.fi
.RE
.sp
..
'\"	# SO - start of list of standard options
.de SO
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 4c 8c 12c
.ft B
..
'\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\fBoptions\\fR manual entry for details on the standard options.
..
'\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
'\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
'\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.de UL
\\$1\l'|0\(ul'\\$2
..
.TH "math::rationalfunctions" n 1.0.1 math "Math"
.BS
.SH NAME
math::rationalfunctions \- Polynomial functions
.SH SYNOPSIS
package require \fBTcl  ?8.4?\fR
.sp
package require \fBmath::rationalfunctions  ?1.0.1?\fR
.sp
\fB::math::rationalfunctions::rationalFunction\fR \fInum\fR \fIden\fR
.sp
\fB::math::rationalfunctions::ratioCmd\fR \fInum\fR \fIden\fR
.sp
\fB::math::rationalfunctions::evalRatio\fR \fIrational\fR \fIx\fR
.sp
\fB::math::rationalfunctions::addRatio\fR \fIratio1\fR \fIratio2\fR
.sp
\fB::math::rationalfunctions::subRatio\fR \fIratio1\fR \fIratio2\fR
.sp
\fB::math::rationalfunctions::multRatio\fR \fIratio1\fR \fIratio2\fR
.sp
\fB::math::rationalfunctions::divRatio\fR \fIratio1\fR \fIratio2\fR
.sp
\fB::math::rationalfunctions::derivPolyn\fR \fIratio\fR
.sp
\fB::math::rationalfunctions::coeffsNumerator\fR \fIratio\fR
.sp
\fB::math::rationalfunctions::coeffsDenominator\fR \fIratio\fR
.sp
.BE
.SH DESCRIPTION
.PP
This package deals with rational functions of one variable:
.IP \(bu
the basic arithmetic operations are extended to rational functions
.IP \(bu
computing the derivatives of these functions
.IP \(bu
evaluation through a general procedure or via specific procedures)
.PP
.SH PROCEDURES
The package defines the following public procedures:
.TP
\fB::math::rationalfunctions::rationalFunction\fR \fInum\fR \fIden\fR
Return an (encoded) list that defines the rational function. A
rational function
.nf

             1 + x^3
   f(x) = ------------
          1 + 2x + x^2

.fi
can be defined via:
.nf

   set f [::math::rationalfunctions::rationalFunction [list 1 0 0 1]  [list 1 2 1]]

.fi
.RS
.TP
list \fInum\fR
Coefficients of the numerator of the rational
function (in ascending order)
.sp
.TP
list \fIden\fR
Coefficients of the denominator of the rational
function (in ascending order)
.RE
.sp
.TP
\fB::math::rationalfunctions::ratioCmd\fR \fInum\fR \fIden\fR
Create a new procedure that evaluates the rational function. The name of the
function is automatically generated. Useful if you need to evaluate
the function many times, as the procedure consists of a single
[expr] command.
.RS
.TP
list \fInum\fR
Coefficients of the numerator of the rational
function (in ascending order)
.sp
.TP
list \fIden\fR
Coefficients of the denominator of the rational
function (in ascending order)
.RE
.sp
.TP
\fB::math::rationalfunctions::evalRatio\fR \fIrational\fR \fIx\fR
Evaluate the rational function at x.
.RS
.TP
list \fIrational\fR
The rational function's definition (as returned
by the rationalFunction command).
order)
.TP
float \fIx\fR
The coordinate at which to evaluate the function
.RE
.sp
.TP
\fB::math::rationalfunctions::addRatio\fR \fIratio1\fR \fIratio2\fR
Return a new rational function which is the sum of the two others.
.RS
.TP
list \fIratio1\fR
The first rational function operand
.TP
list \fIratio2\fR
The second rational function operand
.RE
.sp
.TP
\fB::math::rationalfunctions::subRatio\fR \fIratio1\fR \fIratio2\fR
Return a new rational function which is the difference of the two
others.
.RS
.TP
list \fIratio1\fR
The first rational function operand
.TP
list \fIratio2\fR
The second rational function operand
.RE
.sp
.TP
\fB::math::rationalfunctions::multRatio\fR \fIratio1\fR \fIratio2\fR
Return a new rational function which is the product of the two others.
If one of the arguments is a scalar value, the other rational function is
simply scaled.
.RS
.TP
list \fIratio1\fR
The first rational function operand or a scalar
.TP
list \fIratio2\fR
The second rational function operand or a scalar
.RE
.sp
.TP
\fB::math::rationalfunctions::divRatio\fR \fIratio1\fR \fIratio2\fR
Divide the first rational function by the second rational function and
return the result. The remainder is dropped
.RS
.TP
list \fIratio1\fR
The first rational function operand
.TP
list \fIratio2\fR
The second rational function operand
.RE
.sp
.TP
\fB::math::rationalfunctions::derivPolyn\fR \fIratio\fR
Differentiate the rational function and return the result.
.RS
.TP
list \fIratio\fR
The rational function to be differentiated
.RE
.sp
.TP
\fB::math::rationalfunctions::coeffsNumerator\fR \fIratio\fR
Return the coefficients of the numerator of the rational function.
.RS
.TP
list \fIratio\fR
The rational function to be examined
.RE
.sp
.TP
\fB::math::rationalfunctions::coeffsDenominator\fR \fIratio\fR
Return the coefficients of the denominator of the rational
function.
.RS
.TP
list \fIratio\fR
The rational function to be examined
.RE
.sp
.PP
.SH "REMARKS ON THE IMPLEMENTATION"
The implementation of the rational functions relies on the
math::polynomials package. For further remarks see the documentation on
that package.
.SH "BUGS, IDEAS, FEEDBACK"
This document, and the package it describes, will undoubtedly contain
bugs and other problems.
Please report such in the category \fImath :: rationalfunctions\fR of the
\fITcllib SF Trackers\fR [http://sourceforge.net/tracker/?group_id=12883].
Please also report any ideas for enhancements you may have for either
package and/or documentation.
.SH KEYWORDS
math, rational functions
.SH CATEGORY
Mathematics
.SH COPYRIGHT
.nf
Copyright (c) 2005 Arjen Markus <arjenmarkus@users.sourceforge.net>

.fi