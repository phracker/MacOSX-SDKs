.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPANP 1"
.TH CPANP 1 "2021-08-27" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cpanp \- The CPANPLUS launcher
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBcpanp\fR
.PP
\&\fBcpanp\fR [\-]\fBa\fR [\ \-\-[\fBno\fR\-]\fIoption\fR...\ ] \ \fIauthor\fR...\ 
.PP
\&\fBcpanp\fR [\-]\fBmfitulrcz\fR [\ \-\-[\fBno\fR\-]\fIoption\fR...\ ] \ \fImodule\fR...\ 
.PP
\&\fBcpanp\fR [\-]\fBd\fR [\ \-\-[\fBno\fR\-]\fIoption\fR...\ ] [\ \-\-\fBfetchdir\fR=...\ ] \ \fImodule\fR...\ 
.PP
\&\fBcpanp\fR [\-]\fBxb\fR [\ \-\-[\fBno\fR\-]\fIoption\fR...\ ]
.PP
\&\fBcpanp\fR [\-]\fBo\fR [\ \-\-[\fBno\fR\-]\fIoption\fR...\ ] [\ \fImodule\fR...\ ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script launches the \fB\s-1CPANPLUS\s0\fR utility to perform various operations
from the command line. If it's invoked without arguments, an interactive
shell is executed by default.
.PP
Optionally, it can take a single-letter switch and one or more argument,
to perform the associated action on each arguments.  A summary of the
available commands is listed below; \f(CW\*(C`cpanp \-h\*(C'\fR provides a detailed list.
.PP
.Vb 2
\&    h                   # help information
\&    v                   # version information
\&
\&    a AUTHOR ...        # search by author(s)
\&    m MODULE ...        # search by module(s)
\&    f MODULE ...        # list all releases of a module
\&
\&    i MODULE ...        # install module(s)
\&    t MODULE ...        # test module(s)
\&    u MODULE ...        # uninstall module(s)
\&    d MODULE ...        # download module(s)
\&    l MODULE ...        # display detailed information about module(s)
\&    r MODULE ...        # display README files of module(s)
\&    c MODULE ...        # check for module report(s) from cpan\-testers
\&    z MODULE ...        # extract module(s) and open command prompt in it
\&
\&    x                   # reload CPAN indices
\&
\&    o [ MODULE ... ]    # list installed module(s) that aren\*(Aqt up to date
\&    b                   # write a bundle file for your configuration
.Ve
.PP
Each command may be followed by one or more \fIoptions\fR.  If preceded by \f(CW\*(C`no\*(C'\fR,
the corresponding option will be set to \f(CW0\fR, otherwise it's set to \f(CW1\fR.
.PP
Example: To skip a module's tests,
.PP
.Vb 1
\&    cpanp \-i \-\-skiptest MODULE ...
.Ve
.PP
Valid options for most commands are \f(CW\*(C`cpantest\*(C'\fR, \f(CW\*(C`debug\*(C'\fR, \f(CW\*(C`flush\*(C'\fR, \f(CW\*(C`force\*(C'\fR,
\&\f(CW\*(C`prereqs\*(C'\fR, \f(CW\*(C`storable\*(C'\fR, \f(CW\*(C`verbose\*(C'\fR, \f(CW\*(C`md5\*(C'\fR, \f(CW\*(C`signature\*(C'\fR, and \f(CW\*(C`skiptest\*(C'\fR; the
\&'d' command also accepts \f(CW\*(C`fetchdir\*(C'\fR.  Please consult CPANPLUS::Configure
for an explanation to their meanings.
.PP
Example: To download a module's tarball to the current directory,
.PP
.Vb 1
\&    cpanp \-d \-\-fetchdir=. MODULE ...
.Ve
