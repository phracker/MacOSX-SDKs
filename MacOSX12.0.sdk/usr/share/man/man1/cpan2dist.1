.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPAN2DIST 1"
.TH CPAN2DIST 1 "2021-08-27" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cpan2dist \- The CPANPLUS distribution creator
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script will create distributions of \f(CW\*(C`CPAN\*(C'\fR modules of the format
you specify, including its prerequisites. These packages can then be
installed using the corresponding package manager for the format.
.PP
Note, you can also do this interactively from the default shell,
\&\f(CW\*(C`CPANPLUS::Shell::Default\*(C'\fR. See the \f(CW\*(C`CPANPLUS::Dist\*(C'\fR documentation,
as well as the documentation of your format of choice for any format
specific documentation.
.SH "USAGE"
.IX Header "USAGE"
.Vb 3
\& Usage: cpan2dist [\-\-format FMT] [OPTS] Mod::Name [Mod::Name, ...]
\&        cpan2dist [\-\-format FMT] [OPTS] \-\-modulelist /tmp/mods.list
\&        cpan2dist [\-\-format FMT] [OPTS] \-\-archive /tmp/dist [/tmp/dist2]
\&
\&    Will create a distribution of type FMT of the modules
\&    specified on the command line, and all their prerequisites.
\&
\&    Can also create a distribution of type FMT from a local
\&    archive and all of its prerequisites.
.Ve
.PP
Options:
.PP
.Vb 10
\&    ### take no argument:
\&    \-\-help          Show this help message
\&    \-\-install       Install this package (and any prerequisites you built)
\&                    after building it.
\&    \-\-skiptest      Skip tests. Can be negated using \-\-noskiptest
\&    \-\-force         Force operation. Can be negated using \-\-noforce
\&    \-\-verbose       Be verbose. Can be negated using \-\-noverbose
\&    \-\-keepsource    Keep sources after building distribution. Can be
\&                    negated by \-\-nokeepsource. May not be supported
\&                    by all formats
\&    \-\-makefile      Prefer Makefile.PL over Build.PL. Can be negated
\&                    using \-\-nomakefile. Defaults to your config setting
\&    \-\-buildprereq   Build packages of any prerequisites, even if they are
\&                    already uptodate on the local system. Can be negated
\&                    using \-\-nobuildprereq. Defaults to false.
\&    \-\-archive       Indicate that all modules listed are actually archives
\&    \-\-flushcache    Update CPANPLUS\*(Aq cache before commencing any operation
\&    \-\-defaults      Instruct ExtUtils::MakeMaker and Module::Build to use
\&                    default answers during \*(Aqperl Makefile.PL\*(Aq or \*(Aqperl
\&                    Build.PL\*(Aq calls where possible
\&    \-\-edit\-metafile Edit the distributions metafile(s) before the distribution
\&                    is built. Requires a configured editor.
\&
\&    ### take argument:
\&    \-\-format      Installer format to use (defaults to config setting)
\&    \-\-ban         Patterns of module names to skip during installation,
\&                  case\-insensitive (affects prerequisites too)
\&                  May be given multiple times
\&    \-\-banlist     File containing patterns that could be given to \-\-ban
\&                  Are appended to the ban list built up by \-\-ban
\&                  May be given multiple times.
\&    \-\-ignore      Patterns of modules to exclude from prereq list. Useful
\&                  for when a prereq listed by a CPAN module is resolved
\&                  in another way than from its corresponding CPAN package
\&                  (Match is done on both module name, and package name of
\&                  the package the module is in, case\-insensitive)
\&    \-\-ignorelist  File containing patterns that may be given to \-\-ignore.
\&                  Are appended to the ban list built up by \-\-ignore.
\&                  May be given multiple times.
\&    \-\-modulelist  File containing a list of modules that should be built.
\&                  Are appended to the list of command line modules.
\&                  May be given multiple times.
\&    \-\-logfile     File to log all output to. By default, all output goes
\&                  to the console.
\&    \-\-timeout     The allowed time for buliding a distribution before
\&                  aborting. This is useful to terminate any build that
\&                  hang or happen to be interactive despite being told not
\&                  to be. Defaults to 300 seconds. To turn off, you can
\&                  set it to 0.
\&    \-\-set\-config  Change any options as specified in your config for this
\&                  invocation only. See CPANPLUS::Config for a list of
\&                  supported options.
\&    \-\-set\-program Change any programs as specified in your config for this
\&                  invocation only. See CPANPLUS::Config for a list of
\&                  supported programs.
\&    \-\-dist\-opts   Arbitrary options passed along to the chosen installer
\&                  format\*(Aqs prepare()/create() routine. Please see the
\&                  documentation of the installer of your choice for
\&                  options it accepts.
\&
\&    ### builtin lists
\&    \-\-default\-banlist    Use our builtin banlist. Works just like \-\-ban
\&                         and \-\-banlist, but with pre\-set lists. See the
\&                         "Builtin Lists" section for details.
\&    \-\-default\-ignorelist Use our builtin ignorelist. Works just like
\&                         \-\-ignore and \-\-ignorelist but with pre\-set lists.
\&                         See the "Builtin Lists" section for details.
.Ve
.PP
Examples:
.PP
.Vb 3
\&    ### build a debian package of DBI and its prerequisites,
\&    ### don\*(Aqt bother running tests
\&    cpan2dist \-\-format CPANPLUS::Dist::Deb \-\-buildprereq \-\-skiptest DBI
\&
\&    ### build a debian package of DBI and its prerequisites and install them
\&    cpan2dist \-\-format CPANPLUS::Dist::Deb \-\-buildprereq \-\-install DBI
\&
\&    ### Build a package, whose format is determined by your config, of
\&    ### the local tarball, reloading cpanplus\*(Aq indices first and using
\&    ### the tarballs Makefile.PL if it has one.
\&    cpan2dist \-\-makefile \-\-flushcache \-\-archive /path/to/Cwd\-1.0.tgz
\&
\&    ### build a package from Net::FTP, but dont build any packages or
\&    ### dependencies whose name match \*(AqFoo\*(Aq, \*(AqBar\*(Aq or any of the
\&    ### patterns mentioned in /tmp/ban
\&    cpan2dist \-\-ban Foo \-\-ban Bar \-\-banlist /tmp/ban Net::FTP
\&
\&    ### build a package from Net::FTP, but ignore its listed dependency
\&    ### on IO::Socket, as it\*(Aqs shipped per default with the OS we\*(Aqre on
\&    cpan2dist \-\-ignore IO::Socket Net::FTP
\&
\&    ### building all modules listed, plus their prerequisites
\&    cpan2dist \-\-ignorelist /tmp/modules.ignore \-\-banlist /tmp/modules.ban
\&      \-\-modulelist /tmp/modules.list \-\-buildprereq \-\-flushcache
\&      \-\-makefile \-\-defaults
\&
\&    ### pass arbitrary options to the format\*(Aqs prepare()/create() routine
\&    cpan2dist \-\-dist\-opts deb_version=3 \-\-dist\-opts prefix=corp
.Ve
.SH "Built-In Filter Lists"
.IX Header "Built-In Filter Lists"
Some modules you'd rather not package. Some because they
are part of core-perl and you dont want a new package.
Some because they won't build on your system. Some because
your package manager of choice already packages them for you.
.PP
There may be a myriad of reasons. You can use the \f(CW\*(C`\-\-ignore\*(C'\fR
and \f(CW\*(C`\-\-ban\*(C'\fR options for this, but we provide some built-in
lists that catch common cases. You can use these built-in lists
if you like, or supply your own if need be.
.SS "Built-In Ignore List"
.IX Subsection "Built-In Ignore List"
You can use this list of regexes to ignore modules matching
to be listed as prerequisites of a package. Particularly useful
if they are bundled with core-perl anyway and they have known
issues building.
.PP
Toggle it by supplying the \f(CW\*(C`\-\-default\-ignorelist\*(C'\fR option.
.PP
.Vb 7
\&    ^IO$                    # Provided with core anyway
\&    ^Cwd$                   # Provided with core anyway
\&    ^File::Spec             # Provided with core anyway
\&    ^Config$                # Perl\*(Aqs own config, not shipped separately
\&    ^ExtUtils::MakeMaker$   # Shipped with perl, recent versions
\&                            # have bug 14721 (see rt.cpan.org)
\&    ^ExtUtils::Install$     # Part of of EU::MM, same reason
.Ve
.SS "Built-In Ban list"
.IX Subsection "Built-In Ban list"
You can use this list of regexes to disable building of these
modules altogether.
.PP
Toggle it by supplying the \f(CW\*(C`\-\-default\-banlist\*(C'\fR option.
.PP
.Vb 10
\&    ^GD$                # Needs c libaries
\&    ^Berk.*DB           # DB packages require specific options & linking
\&    ^DBD::              # DBD drivers require database files/headers
\&    ^XML::              # XML modules usually require expat libraries
\&    Apache              # These usually require apache libraries
\&    SSL                 # These usually require SSL certificates & libs
\&    Image::Magick       # Needs ImageMagick C libraries
\&    Mail::ClamAV        # Needs ClamAV C Libraries
\&    ^Verilog            # Needs Verilog C Libraries
\&    ^Authen::PAM$       # Needs PAM C libraries & Headers
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
CPANPLUS::Dist, CPANPLUS::Module, CPANPLUS::Shell::Default,
\&\f(CW\*(C`cpanp\*(C'\fR
.SH "BUG REPORTS"
.IX Header "BUG REPORTS"
Please report bugs or other issues to <bug\-cpanplus@rt.cpan.org<gt>.
.SH "AUTHOR"
.IX Header "AUTHOR"
This module by Jos Boumans <kane@cpan.org>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
The \s-1CPAN++\s0 interface (of which this module is a part of) is copyright (c)
2001 \- 2007, Jos Boumans <kane@cpan.org>. All rights reserved.
.PP
This library is free software; you may redistribute and/or modify it
under the same terms as Perl itself.
