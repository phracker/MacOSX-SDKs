.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2MAN 1"
.TH POD2MAN 1 "2021-08-28" "perl v5.30.3" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pod2man \- Convert POD data to formatted *roff input
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
pod2man [\fB\-\-center\fR=\fIstring\fR] [\fB\-\-date\fR=\fIstring\fR] [\fB\-\-errors\fR=\fIstyle\fR]
    [\fB\-\-fixed\fR=\fIfont\fR] [\fB\-\-fixedbold\fR=\fIfont\fR] [\fB\-\-fixeditalic\fR=\fIfont\fR]
    [\fB\-\-fixedbolditalic\fR=\fIfont\fR] [\fB\-\-name\fR=\fIname\fR] [\fB\-\-nourls\fR]
    [\fB\-\-official\fR] [\fB\-\-release\fR=\fIversion\fR] [\fB\-\-section\fR=\fImanext\fR]
    [\fB\-\-quotes\fR=\fIquotes\fR] [\fB\-\-lquote\fR=\fIquote\fR] [\fB\-\-rquote\fR=\fIquote\fR]
    [\fB\-\-stderr\fR] [\fB\-\-utf8\fR] [\fB\-\-verbose\fR] [\fIinput\fR [\fIoutput\fR] ...]
.PP
pod2man \fB\-\-help\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBpod2man\fR is a front-end for Pod::Man, using it to generate *roff input
from \s-1POD\s0 source.  The resulting *roff code is suitable for display on a
terminal using \fBnroff\fR\|(1), normally via \fBman\fR\|(1), or printing using \fBtroff\fR\|(1).
.PP
\&\fIinput\fR is the file to read for \s-1POD\s0 source (the \s-1POD\s0 can be embedded in
code).  If \fIinput\fR isn't given, it defaults to \f(CW\*(C`STDIN\*(C'\fR.  \fIoutput\fR, if
given, is the file to which to write the formatted output.  If \fIoutput\fR
isn't given, the formatted output is written to \f(CW\*(C`STDOUT\*(C'\fR.  Several \s-1POD\s0
files can be processed in the same \fBpod2man\fR invocation (saving module
load and compile times) by providing multiple pairs of \fIinput\fR and
\&\fIoutput\fR files on the command line.
.PP
\&\fB\-\-section\fR, \fB\-\-release\fR, \fB\-\-center\fR, \fB\-\-date\fR, and \fB\-\-official\fR can
be used to set the headers and footers to use; if not given, Pod::Man will
assume various defaults.  See below or Pod::Man for details.
.PP
\&\fBpod2man\fR assumes that your *roff formatters have a fixed-width font
named \f(CW\*(C`CW\*(C'\fR.  If yours is called something else (like \f(CW\*(C`CR\*(C'\fR), use
\&\fB\-\-fixed\fR to specify it.  This generally only matters for troff output
for printing.  Similarly, you can set the fonts used for bold, italic, and
bold italic fixed-width output.
.PP
Besides the obvious pod conversions, Pod::Man, and therefore pod2man also
takes care of formatting \fBfunc()\fR, func(n), and simple variable references
like \f(CW$foo\fR or \f(CW@bar\fR so you don't have to use code escapes for them; complex
expressions like \f(CW$fred{\*(Aqstuff\*(Aq}\fR will still need to be escaped, though.
It also translates dashes that aren't used as hyphens into en dashes, makes
long dashes\*(--like this\*(--into proper em dashes, fixes \*(L"paired quotes,\*(R" and
takes care of several other troff-specific tweaks.  See Pod::Man for
complete information.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c\fR \fIstring\fR, \fB\-\-center\fR=\fIstring\fR" 4
.IX Item "-c string, --center=string"
Sets the centered page header for the \f(CW\*(C`.TH\*(C'\fR macro to \fIstring\fR.  The
default is \*(L"User Contributed Perl Documentation\*(R", but also see
\&\fB\-\-official\fR below.
.IP "\fB\-d\fR \fIstring\fR, \fB\-\-date\fR=\fIstring\fR" 4
.IX Item "-d string, --date=string"
Set the left-hand footer string for the \f(CW\*(C`.TH\*(C'\fR macro to \fIstring\fR.  By
default, the modification date of the input file will be used, or the
current date if input comes from \f(CW\*(C`STDIN\*(C'\fR, and will be based on \s-1UTC\s0 (so
that the output will be reproducible regardless of local time zone).
.IP "\fB\-\-errors\fR=\fIstyle\fR" 4
.IX Item "--errors=style"
Set the error handling style.  \f(CW\*(C`die\*(C'\fR says to throw an exception on any
\&\s-1POD\s0 formatting error.  \f(CW\*(C`stderr\*(C'\fR says to report errors on standard error,
but not to throw an exception.  \f(CW\*(C`pod\*(C'\fR says to include a \s-1POD ERRORS\s0
section in the resulting documentation summarizing the errors.  \f(CW\*(C`none\*(C'\fR
ignores \s-1POD\s0 errors entirely, as much as possible.
.Sp
The default is \f(CW\*(C`die\*(C'\fR.
.IP "\fB\-\-fixed\fR=\fIfont\fR" 4
.IX Item "--fixed=font"
The fixed-width font to use for verbatim text and code.  Defaults to
\&\f(CW\*(C`CW\*(C'\fR.  Some systems may want \f(CW\*(C`CR\*(C'\fR instead.  Only matters for \fBtroff\fR\|(1)
output.
.IP "\fB\-\-fixedbold\fR=\fIfont\fR" 4
.IX Item "--fixedbold=font"
Bold version of the fixed-width font.  Defaults to \f(CW\*(C`CB\*(C'\fR.  Only matters
for \fBtroff\fR\|(1) output.
.IP "\fB\-\-fixeditalic\fR=\fIfont\fR" 4
.IX Item "--fixeditalic=font"
Italic version of the fixed-width font (actually, something of a misnomer,
since most fixed-width fonts only have an oblique version, not an italic
version).  Defaults to \f(CW\*(C`CI\*(C'\fR.  Only matters for \fBtroff\fR\|(1) output.
.IP "\fB\-\-fixedbolditalic\fR=\fIfont\fR" 4
.IX Item "--fixedbolditalic=font"
Bold italic (probably actually oblique) version of the fixed-width font.
Pod::Man doesn't assume you have this, and defaults to \f(CW\*(C`CB\*(C'\fR.  Some
systems (such as Solaris) have this font available as \f(CW\*(C`CX\*(C'\fR.  Only matters
for \fBtroff\fR\|(1) output.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Print out usage information.
.IP "\fB\-l\fR, \fB\-\-lax\fR" 4
.IX Item "-l, --lax"
No longer used.  \fBpod2man\fR used to check its input for validity as a
manual page, but this should now be done by \fBpodchecker\fR\|(1) instead.
Accepted for backward compatibility; this option no longer does anything.
.IP "\fB\-\-lquote\fR=\fIquote\fR" 4
.IX Item "--lquote=quote"
.PD 0
.IP "\fB\-\-rquote\fR=\fIquote\fR" 4
.IX Item "--rquote=quote"
.PD
Sets the quote marks used to surround C<> text.  \fB\-\-lquote\fR sets the
left quote mark and \fB\-\-rquote\fR sets the right quote mark.  Either may also
be set to the special value \f(CW\*(C`none\*(C'\fR, in which case no quote mark is added
on that side of C<> text (but the font is still changed for troff
output).
.Sp
Also see the \fB\-\-quotes\fR option, which can be used to set both quotes at once.
If both \fB\-\-quotes\fR and one of the other options is set, \fB\-\-lquote\fR or
\&\fB\-\-rquote\fR overrides \fB\-\-quotes\fR.
.IP "\fB\-n\fR \fIname\fR, \fB\-\-name\fR=\fIname\fR" 4
.IX Item "-n name, --name=name"
Set the name of the manual page for the \f(CW\*(C`.TH\*(C'\fR macro to \fIname\fR.  Without
this option, the manual name is set to the uppercased base name of the
file being converted unless the manual section is 3, in which case the
path is parsed to see if it is a Perl module path.  If it is, a path like
\&\f(CW\*(C`.../lib/Pod/Man.pm\*(C'\fR is converted into a name like \f(CW\*(C`Pod::Man\*(C'\fR.  This
option, if given, overrides any automatic determination of the name.
.Sp
Although one does not have to follow this convention, be aware that the
convention for \s-1UNIX\s0 man pages for commands is for the man page title to be
in all-uppercase, even if the command isn't.
.Sp
This option is probably not useful when converting multiple \s-1POD\s0 files at
once.
.Sp
When converting \s-1POD\s0 source from standard input, the name will be set to
\&\f(CW\*(C`STDIN\*(C'\fR if this option is not provided.  Providing this option is strongly
recommended to set a meaningful manual page name.
.IP "\fB\-\-nourls\fR" 4
.IX Item "--nourls"
Normally, L<> formatting codes with a \s-1URL\s0 but anchor text are formatted
to show both the anchor text and the \s-1URL.\s0  In other words:
.Sp
.Vb 1
\&    L<foo|http://example.com/>
.Ve
.Sp
is formatted as:
.Sp
.Vb 1
\&    foo <http://example.com/>
.Ve
.Sp
This flag, if given, suppresses the \s-1URL\s0 when anchor text is given, so this
example would be formatted as just \f(CW\*(C`foo\*(C'\fR.  This can produce less
cluttered output in cases where the URLs are not particularly important.
.IP "\fB\-o\fR, \fB\-\-official\fR" 4
.IX Item "-o, --official"
Set the default header to indicate that this page is part of the standard
Perl release, if \fB\-\-center\fR is not also given.
.IP "\fB\-q\fR \fIquotes\fR, \fB\-\-quotes\fR=\fIquotes\fR" 4
.IX Item "-q quotes, --quotes=quotes"
Sets the quote marks used to surround C<> text to \fIquotes\fR.  If
\&\fIquotes\fR is a single character, it is used as both the left and right
quote.  Otherwise, it is split in half, and the first half of the string
is used as the left quote and the second is used as the right quote.
.Sp
\&\fIquotes\fR may also be set to the special value \f(CW\*(C`none\*(C'\fR, in which case no
quote marks are added around C<> text (but the font is still changed for
troff output).
.Sp
Also see the \fB\-\-lquote\fR and \fB\-\-rquote\fR options, which can be used to set the
left and right quotes independently.  If both \fB\-\-quotes\fR and one of the other
options is set, \fB\-\-lquote\fR or \fB\-\-rquote\fR overrides \fB\-\-quotes\fR.
.IP "\fB\-r\fR \fIversion\fR, \fB\-\-release\fR=\fIversion\fR" 4
.IX Item "-r version, --release=version"
Set the centered footer for the \f(CW\*(C`.TH\*(C'\fR macro to \fIversion\fR.  By default,
this is set to the version of Perl you run \fBpod2man\fR under.  Setting this
to the empty string will cause some *roff implementations to use the
system default value.
.Sp
Note that some system \f(CW\*(C`an\*(C'\fR macro sets assume that the centered footer
will be a modification date and will prepend something like \*(L"Last
modified: \*(R".  If this is the case for your target system, you may want to
set \fB\-\-release\fR to the last modified date and \fB\-\-date\fR to the version
number.
.IP "\fB\-s\fR \fIstring\fR, \fB\-\-section\fR=\fIstring\fR" 4
.IX Item "-s string, --section=string"
Set the section for the \f(CW\*(C`.TH\*(C'\fR macro.  The standard section numbering
convention is to use 1 for user commands, 2 for system calls, 3 for
functions, 4 for devices, 5 for file formats, 6 for games, 7 for
miscellaneous information, and 8 for administrator commands.  There is a lot
of variation here, however; some systems (like Solaris) use 4 for file
formats, 5 for miscellaneous information, and 7 for devices.  Still others
use 1m instead of 8, or some mix of both.  About the only section numbers
that are reliably consistent are 1, 2, and 3.
.Sp
By default, section 1 will be used unless the file ends in \f(CW\*(C`.pm\*(C'\fR, in
which case section 3 will be selected.
.IP "\fB\-\-stderr\fR" 4
.IX Item "--stderr"
By default, \fBpod2man\fR dies if any errors are detected in the \s-1POD\s0 input.
If \fB\-\-stderr\fR is given and no \fB\-\-errors\fR flag is present, errors are
sent to standard error, but \fBpod2man\fR does not abort.  This is equivalent
to \f(CW\*(C`\-\-errors=stderr\*(C'\fR and is supported for backward compatibility.
.IP "\fB\-u\fR, \fB\-\-utf8\fR" 4
.IX Item "-u, --utf8"
By default, \fBpod2man\fR produces the most conservative possible *roff
output to try to ensure that it will work with as many different *roff
implementations as possible.  Many *roff implementations cannot handle
non-ASCII characters, so this means all non-ASCII characters are converted
either to a *roff escape sequence that tries to create a properly accented
character (at least for troff output) or to \f(CW\*(C`X\*(C'\fR.
.Sp
This option says to instead output literal \s-1UTF\-8\s0 characters.  If your
*roff implementation can handle it, this is the best output format to use
and avoids corruption of documents containing non-ASCII characters.
However, be warned that *roff source with literal \s-1UTF\-8\s0 characters is not
supported by many implementations and may even result in segfaults and
other bad behavior.
.Sp
Be aware that, when using this option, the input encoding of your \s-1POD\s0
source should be properly declared unless it's US-ASCII.  Pod::Simple will
attempt to guess the encoding and may be successful if it's Latin\-1 or
\&\s-1UTF\-8,\s0 but it will warn, which by default results in a \fBpod2man\fR failure.
Use the \f(CW\*(C`=encoding\*(C'\fR command to declare the encoding.  See \fBperlpod\fR\|(1)
for more information.
.IP "\fB\-v\fR, \fB\-\-verbose\fR" 4
.IX Item "-v, --verbose"
Print out the name of each output file as it is being generated.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
As long as all documents processed result in some output, even if that
output includes errata (a \f(CW\*(C`POD ERRORS\*(C'\fR section generated with
\&\f(CW\*(C`\-\-errors=pod\*(C'\fR), \fBpod2man\fR will exit with status 0.  If any of the
documents being processed do not result in an output document, \fBpod2man\fR
will exit with status 1.  If there are syntax errors in a \s-1POD\s0 document
being processed and the error handling style is set to the default of
\&\f(CW\*(C`die\*(C'\fR, \fBpod2man\fR will abort immediately with exit status 255.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
If \fBpod2man\fR fails with errors, see Pod::Man and Pod::Simple for
information about what those errors might mean.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 3
\&    pod2man program > program.1
\&    pod2man SomeModule.pm /usr/perl/man/man3/SomeModule.3
\&    pod2man \-\-section=7 note.pod > note.7
.Ve
.PP
If you would like to print out a lot of man page continuously, you probably
want to set the C and D registers to set contiguous page numbering and
even/odd paging, at least on some versions of \fBman\fR\|(7).
.PP
.Vb 1
\&    troff \-man \-rC1 \-rD1 perl.1 perldata.1 perlsyn.1 ...
.Ve
.PP
To get index entries on \f(CW\*(C`STDERR\*(C'\fR, turn on the F register, as in:
.PP
.Vb 1
\&    troff \-man \-rF1 perl.1
.Ve
.PP
The indexing merely outputs messages via \f(CW\*(C`.tm\*(C'\fR for each major page,
section, subsection, item, and any \f(CW\*(C`X<>\*(C'\fR directives.  See
Pod::Man for more details.
.SH "BUGS"
.IX Header "BUGS"
Lots of this documentation is duplicated from Pod::Man.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <rra@cpan.org>, based \fIvery\fR heavily on the original
\&\fBpod2man\fR by Larry Wall and Tom Christiansen.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 1999\-2001, 2004, 2006, 2008, 2010, 2012\-2018 Russ Allbery
<rra@cpan.org>
.PP
This program is free software; you may redistribute it and/or modify it
under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Pod::Man, Pod::Simple, \fBman\fR\|(1), \fBnroff\fR\|(1), \fBperlpod\fR\|(1),
\&\fBpodchecker\fR\|(1), \fBperlpodstyle\fR\|(1), \fBtroff\fR\|(1), \fBman\fR\|(7)
.PP
The man page documenting the an macro set may be \fBman\fR\|(5) instead of
\&\fBman\fR\|(7) on your system.
.PP
The current version of this script is always available from its web site at
<https://www.eyrie.org/~eagle/software/podlators/>.  It is also part of the
Perl core distribution as of 5.6.0.
