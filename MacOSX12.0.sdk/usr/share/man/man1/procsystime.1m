.TH procsystime 1m  "Sep 22, 2005" "version 1.00" "USER COMMANDS"
.SH NAME
procsystime \- analyse system call times. Uses DTrace.
.SH SYNOPSIS
.B procsystime
[\-acehoT] [ -p PID | -n name | command ]
.SH DESCRIPTION
procsystime prints details on system call times for processes,
both the elapsed times and on-cpu times can be printed.

The elapsed times are interesting, to help identify syscalls
that take some time to complete (during which the process may
have slept). CPU time helps us identify syscalls that
are consuming CPU cycles to run.

Since this uses DTrace, only users with root privileges can run this command.
.SH OPTIONS
.TP
\-a
print all data
.TP
\-c
print syscall counts
.TP
\-e
print elapsed times, ns
.TP
\-o
print CPU times, ns
.TP
\-T
print totals
.TP
\-p PID
examine this PID
.TP
\-n name
examine processes which have this name
.SH EXAMPLES
.TP
Print elapsed times for PID 1871,
# 
.B procsystime
\-p 1871
.PP
.TP
Print elapsed times for processes called "tar",
# 
.B procsystime
\-n tar 
.PP
.TP
Print CPU times for "tar" processes,
#
.B procsystime
\-on tar
.PP
.TP
Print syscall counts for "tar" processes,
#
.B procsystime
\-cn tar
.PP
.TP
Print elapsed and CPU times for "tar" processes,
#
.B procsystime
\-eon tar
.PP
.TP
print all details for "bash" processes,
#
.B procsystime
\-aTn bash
.PP
.TP
run and print details for "df -h",
#
.B procsystime
df \-h
.PP
.SH FIELDS
.TP
SYSCALL
System call name
.TP
TIME (ns)
Total time, nanoseconds
.TP
COUNT
Number of occurrences
.SH DOCUMENTATION
See the DTraceToolkit for further documentation under the 
Docs directory. The DTraceToolkit docs may include full worked
examples with verbose descriptions explaining the output.
.SH EXIT
procsystime will sample until Ctrl\-C is hit. 
.SH AUTHOR
Brendan Gregg
[Sydney, Australia]
.SH SEE ALSO
dtruss(1M), dtrace(1M), truss(1)

