.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SPFD 1"
.TH SPFD 1 "2006-02-07" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
spfd \- simple forking daemon to provide SPF query services
.SH "VERSION"
.IX Header "VERSION"
2006\-02\-07
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBspfd\fR \fB\-\-port\fR \fIport\fR [\fB\-\-set\-user\fR \fIuid\fR|\fIusername\fR] [\fB\-\-set\-group\fR
\&\fIgid\fR|\fIgroupname\fR]
.PP
\&\fBspfd\fR \fB\-\-socket\fR \fIfilename\fR [\fB\-\-socket\-user\fR \fIuid\fR|\fIusername\fR]
[\fB\-\-socket\-group\fR \fIgid\fR|\fIgroupname\fR] [\fB\-\-socket\-perms\fR \fIoctal-perms\fR]
[\fB\-\-set\-user\fR \fIuid\fR|\fIusername\fR] [\fB\-\-set\-group\fR \fIgid\fR|\fIgroupname\fR]
.PP
\&\fBspfd\fR \fB\-\-help\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBspfd\fR is a simple forking Sender Policy Framework (\s-1SPF\s0) query proxy server.
spfd receives and answers \s-1SPF\s0 query requests on a \s-1TCP/IP\s0 or \s-1UNIX\s0 domain
socket.
.PP
The \fB\-\-port\fR form listens on a \s-1TCP/IP\s0 socket on the specified \fIport\fR.  The
default port is \fB5970\fR.
.PP
The \fB\-\-socket\fR form listens on a \s-1UNIX\s0 domain socket that is created with the
specified \fIfilename\fR.  The socket can be assigned specific user and group
ownership with the \fB\-\-socket\-user\fR and \fB\-\-socket\-group\fR options, and specific
filesystem permissions with the \fB\-\-socket\-perms\fR option.
.PP
Generally, spfd can be instructed with the \fB\-\-set\-user\fR and \fB\-\-set\-group\fR
options to drop root privileges and change to another user and group before it
starts listening for requests.
.PP
The \fB\-\-help\fR form prints usage information for \fBspfd\fR.
.SH "REQUEST"
.IX Header "REQUEST"
A request consists of a series of lines delimited by \ex0A (\s-1LF\s0) characters (or
whatever your system considers a newline).  Each line must be of the form
\&\fIkey\fR\fB=\fR\fIvalue\fR, where the following keys are required:
.IP "\fBip\fR" 4
.IX Item "ip"
The sender \s-1IP\s0 address.
.IP "\fBsender\fR" 4
.IX Item "sender"
The envelope sender address (from the \s-1SMTP\s0 \f(CW\*(C`MAIL FROM\*(C'\fR command).
.IP "\fBhelo\fR" 4
.IX Item "helo"
The envelope sender hostname (from the \s-1SMTP\s0 \f(CW\*(C`HELO\*(C'\fR command).
.SH "RESPONSE"
.IX Header "RESPONSE"
spfd responds to query requests with similar series of lines of the form
\&\fIkey\fR\fB=\fR\fIvalue\fR.  The most important response keys are:
.IP "\fBresult\fR" 4
.IX Item "result"
The result of the \s-1SPF\s0 query:
.RS 4
.IP "\fIpass\fR" 10
.IX Item "pass"
The specified \s-1IP\s0 address is an authorized mailer for the sender domain/address.
.IP "\fIfail\fR" 10
.IX Item "fail"
The specified \s-1IP\s0 address is not an authorized mailer for the sender
domain/address.
.IP "\fIsoftfail\fR" 10
.IX Item "softfail"
The specified \s-1IP\s0 address is not an authorized mailer for the sender
domain/address, however the domain is still in the process of transitioning to
\&\s-1SPF.\s0
.IP "\fIneutral\fR" 10
.IX Item "neutral"
The sender domain makes no assertion about the status of the \s-1IP\s0 address.
.IP "\fIunknown\fR" 10
.IX Item "unknown"
The sender domain has a syntax error in its \s-1SPF\s0 record.
.IP "\fIerror\fR" 10
.IX Item "error"
A temporary \s-1DNS\s0 error occurred while resolving the sender policy.  Try again
later.
.IP "\fInone\fR" 10
.IX Item "none"
There is no \s-1SPF\s0 record for the sender domain.
.RE
.RS 4
.RE
.IP "\fBsmtp_comment\fR" 4
.IX Item "smtp_comment"
The text that should be included in the receiver's \s-1SMTP\s0 response.
.IP "\fBheader_comment\fR" 4
.IX Item "header_comment"
The text that should be included as a comment in the message's \f(CW\*(C`Received\-SPF:\*(C'\fR
header.
.IP "\fBspf_record\fR" 4
.IX Item "spf_record"
The \s-1SPF\s0 record of the envelope sender domain.
.PP
For the description of other response keys see Mail::SPF::Query.
.PP
For more information on \s-1SPF\s0 see <http://www.openspf.org>.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
A running spfd could be tested using the \f(CW\*(C`netcat\*(C'\fR utility like this:
.PP
.Vb 11
\&    $ echo \-e "ip=11.22.33.44\ensender=user@pobox.com\enhelo=spammer.example.net\en" | nc localhost 5970
\&    result=neutral
\&    smtp_comment=Please see http://spf.pobox.com/why.html?sender=user%40pobox.com&ip=11.22.33.44&receiver=localhost
\&    header_comment=localhost: 11.22.33.44 is neither permitted nor denied by domain of user@pobox.com
\&    guess=neutral
\&    smtp_guess=
\&    header_guess=
\&    guess_tf=neutral
\&    smtp_tf=
\&    header_tf=
\&    spf_record=v=spf1 ?all
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mail::SPF::Query, <http://www.openspf.org>
.SH "AUTHORS"
.IX Header "AUTHORS"
This version of \fBspfd\fR was written by Meng Weng Wong <mengwong+spf@pobox.com>.
Improved argument parsing was added by Julian Mehnle <julian@mehnle.net>.
.PP
This man-page was written by Julian Mehnle <julian@mehnle.net>.
