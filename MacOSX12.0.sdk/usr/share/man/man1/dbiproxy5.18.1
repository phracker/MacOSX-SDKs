.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DBIPROXY 1"
.TH DBIPROXY 1 "2021-08-27" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dbiproxy \- A proxy server for the DBD::Proxy driver
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    dbiproxy <options> \-\-localport=<port>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This tool is just a front end for the DBI::ProxyServer package. All it
does is picking options from the command line and calling
\&\fIDBI::ProxyServer::main()\fR. See DBI::ProxyServer for details.
.PP
Available options include:
.IP "\fB\-\-chroot=dir\fR" 4
.IX Item "--chroot=dir"
(\s-1UNIX\s0 only)  After doing a \fIbind()\fR, change root directory to the given
directory by doing a \fIchroot()\fR. This is useful for security, but it
restricts the environment a lot. For example, you need to load \s-1DBI\s0
drivers in the config file or you have to create hard links to Unix
sockets, if your drivers are using them. For example, with MySQL, a
config file might contain the following lines:
.Sp
.Vb 9
\&    my $rootdir = \*(Aq/var/dbiproxy\*(Aq;
\&    my $unixsockdir = \*(Aq/tmp\*(Aq;
\&    my $unixsockfile = \*(Aqmysql.sock\*(Aq;
\&    foreach $dir ($rootdir, "$rootdir$unixsockdir") {
\&        mkdir 0755, $dir;
\&    }
\&    link("$unixsockdir/$unixsockfile",
\&         "$rootdir$unixsockdir/$unixsockfile");
\&    require DBD::mysql;
\&
\&    {
\&        \*(Aqchroot\*(Aq => $rootdir,
\&        ...
\&    }
.Ve
.Sp
If you don't know \fIchroot()\fR, think of an \s-1FTP\s0 server where you can see a
certain directory tree only after logging in. See also the \-\-group and
\&\-\-user options.
.IP "\fB\-\-configfile=file\fR" 4
.IX Item "--configfile=file"
Config files are assumed to return a single hash ref that overrides the
arguments of the new method. However, command line arguments in turn take
precedence over the config file. See the \*(L"\s-1CONFIGURATION FILE\*(R"\s0 section
in the DBI::ProxyServer documentation for details on the config file.
.IP "\fB\-\-debug\fR" 4
.IX Item "--debug"
Turn debugging mode on. Mainly this asserts that logging messages of
level \*(L"debug\*(R" are created.
.IP "\fB\-\-facility=mode\fR" 4
.IX Item "--facility=mode"
(\s-1UNIX\s0 only) Facility to use for Sys::Syslog. The default is
\&\fBdaemon\fR.
.IP "\fB\-\-group=gid\fR" 4
.IX Item "--group=gid"
After doing a \fIbind()\fR, change the real and effective \s-1GID\s0 to the given.
This is useful, if you want your server to bind to a privileged port
(<1024), but don't want the server to execute as root. See also
the \-\-user option.
.Sp
\&\s-1GID\s0's can be passed as group names or numeric values.
.IP "\fB\-\-localaddr=ip\fR" 4
.IX Item "--localaddr=ip"
By default a daemon is listening to any \s-1IP\s0 number that a machine
has. This attribute allows to restrict the server to the given
\&\s-1IP\s0 number.
.IP "\fB\-\-localport=port\fR" 4
.IX Item "--localport=port"
This attribute sets the port on which the daemon is listening. It
must be given somehow, as there's no default.
.IP "\fB\-\-logfile=file\fR" 4
.IX Item "--logfile=file"
Be default logging messages will be written to the syslog (Unix) or
to the event log (Windows \s-1NT\s0). On other operating systems you need to
specify a log file. The special value \*(L"\s-1STDERR\*(R"\s0 forces logging to
stderr. See Net::Daemon::Log for details.
.IP "\fB\-\-mode=modename\fR" 4
.IX Item "--mode=modename"
The server can run in three different modes, depending on the environment.
.Sp
If you are running Perl 5.005 and did compile it for threads, then the
server will create a new thread for each connection. The thread will
execute the server's \fIRun()\fR method and then terminate. This mode is the
default, you can force it with \*(L"\-\-mode=threads\*(R".
.Sp
If threads are not available, but you have a working \fIfork()\fR, then the
server will behave similar by creating a new process for each connection.
This mode will be used automatically in the absence of threads or if
you use the \*(L"\-\-mode=fork\*(R" option.
.Sp
Finally there's a single-connection mode: If the server has accepted a
connection, he will enter the \fIRun()\fR method. No other connections are
accepted until the \fIRun()\fR method returns (if the client disconnects).
This operation mode is useful if you have neither threads nor \fIfork()\fR,
for example on the Macintosh. For debugging purposes you can force this
mode with \*(L"\-\-mode=single\*(R".
.IP "\fB\-\-pidfile=file\fR" 4
.IX Item "--pidfile=file"
(\s-1UNIX\s0 only) If this option is present, a \s-1PID\s0 file will be created at the
given location. Default is to not create a pidfile.
.IP "\fB\-\-user=uid\fR" 4
.IX Item "--user=uid"
After doing a \fIbind()\fR, change the real and effective \s-1UID\s0 to the given.
This is useful, if you want your server to bind to a privileged port
(<1024), but don't want the server to execute as root. See also
the \-\-group and the \-\-chroot options.
.Sp
\&\s-1UID\s0's can be passed as group names or numeric values.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Suppresses startup of the server; instead the version string will
be printed and the program exits immediately.
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 4
\&    Copyright (c) 1997    Jochen Wiedmann
\&                          Am Eisteich 9
\&                          72555 Metzingen
\&                          Germany
\&
\&                          Email: joe@ispsoft.de
\&                          Phone: +49 7123 14881
.Ve
.PP
The DBI::ProxyServer module is free software; you can redistribute it
and/or modify it under the same terms as Perl itself. In particular
permission is granted to Tim Bunce for distributing this as a part of
the \s-1DBI.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBI::ProxyServer, DBD::Proxy, \s-1DBI\s0
