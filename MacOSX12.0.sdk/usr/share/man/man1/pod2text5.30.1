.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2TEXT 1"
.TH POD2TEXT 1 "2021-08-28" "perl v5.30.3" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pod2text \- Convert POD data to formatted ASCII text
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
pod2text [\fB\-aclostu\fR] [\fB\-\-code\fR] [\fB\-\-errors\fR=\fIstyle\fR] [\fB\-i\fR \fIindent\fR]
    [\fB\-q\fR\ \fIquotes\fR] [\fB\-\-nourls\fR] [\fB\-\-stderr\fR] [\fB\-w\fR\ \fIwidth\fR]
    [\fIinput\fR [\fIoutput\fR ...]]
.PP
pod2text \fB\-h\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBpod2text\fR is a front-end for Pod::Text and its subclasses.  It uses them
to generate formatted \s-1ASCII\s0 text from \s-1POD\s0 source.  It can optionally use
either termcap sequences or \s-1ANSI\s0 color escape sequences to format the text.
.PP
\&\fIinput\fR is the file to read for \s-1POD\s0 source (the \s-1POD\s0 can be embedded in
code).  If \fIinput\fR isn't given, it defaults to \f(CW\*(C`STDIN\*(C'\fR.  \fIoutput\fR, if
given, is the file to which to write the formatted output.  If \fIoutput\fR
isn't given, the formatted output is written to \f(CW\*(C`STDOUT\*(C'\fR.  Several \s-1POD\s0
files can be processed in the same \fBpod2text\fR invocation (saving module
load and compile times) by providing multiple pairs of \fIinput\fR and
\&\fIoutput\fR files on the command line.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a\fR, \fB\-\-alt\fR" 4
.IX Item "-a, --alt"
Use an alternate output format that, among other things, uses a different
heading style and marks \f(CW\*(C`=item\*(C'\fR entries with a colon in the left margin.
.IP "\fB\-\-code\fR" 4
.IX Item "--code"
Include any non-POD text from the input file in the output as well.  Useful
for viewing code documented with \s-1POD\s0 blocks with the \s-1POD\s0 rendered and the
code left intact.
.IP "\fB\-c\fR, \fB\-\-color\fR" 4
.IX Item "-c, --color"
Format the output with \s-1ANSI\s0 color escape sequences.  Using this option
requires that Term::ANSIColor be installed on your system.
.IP "\fB\-\-errors\fR=\fIstyle\fR" 4
.IX Item "--errors=style"
Set the error handling style.  \f(CW\*(C`die\*(C'\fR says to throw an exception on any
\&\s-1POD\s0 formatting error.  \f(CW\*(C`stderr\*(C'\fR says to report errors on standard error,
but not to throw an exception.  \f(CW\*(C`pod\*(C'\fR says to include a \s-1POD ERRORS\s0
section in the resulting documentation summarizing the errors.  \f(CW\*(C`none\*(C'\fR
ignores \s-1POD\s0 errors entirely, as much as possible.
.Sp
The default is \f(CW\*(C`die\*(C'\fR.
.IP "\fB\-i\fR \fIindent\fR, \fB\-\-indent=\fR\fIindent\fR" 4
.IX Item "-i indent, --indent=indent"
Set the number of spaces to indent regular text, and the default indentation
for \f(CW\*(C`=over\*(C'\fR blocks.  Defaults to 4 spaces if this option isn't given.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Print out usage information and exit.
.IP "\fB\-l\fR, \fB\-\-loose\fR" 4
.IX Item "-l, --loose"
Print a blank line after a \f(CW\*(C`=head1\*(C'\fR heading.  Normally, no blank line is
printed after \f(CW\*(C`=head1\*(C'\fR, although one is still printed after \f(CW\*(C`=head2\*(C'\fR,
because this is the expected formatting for manual pages; if you're
formatting arbitrary text documents, using this option is recommended.
.IP "\fB\-m\fR \fIwidth\fR, \fB\-\-left\-margin\fR=\fIwidth\fR, \fB\-\-margin\fR=\fIwidth\fR" 4
.IX Item "-m width, --left-margin=width, --margin=width"
The width of the left margin in spaces.  Defaults to 0.  This is the margin
for all text, including headings, not the amount by which regular text is
indented; for the latter, see \fB\-i\fR option.
.IP "\fB\-\-nourls\fR" 4
.IX Item "--nourls"
Normally, L<> formatting codes with a \s-1URL\s0 but anchor text are formatted
to show both the anchor text and the \s-1URL.\s0  In other words:
.Sp
.Vb 1
\&    L<foo|http://example.com/>
.Ve
.Sp
is formatted as:
.Sp
.Vb 1
\&    foo <http://example.com/>
.Ve
.Sp
This flag, if given, suppresses the \s-1URL\s0 when anchor text is given, so this
example would be formatted as just \f(CW\*(C`foo\*(C'\fR.  This can produce less
cluttered output in cases where the URLs are not particularly important.
.IP "\fB\-o\fR, \fB\-\-overstrike\fR" 4
.IX Item "-o, --overstrike"
Format the output with overstrike printing.  Bold text is rendered as
character, backspace, character.  Italics and file names are rendered as
underscore, backspace, character.  Many pagers, such as \fBless\fR, know how
to convert this to bold or underlined text.
.IP "\fB\-q\fR \fIquotes\fR, \fB\-\-quotes\fR=\fIquotes\fR" 4
.IX Item "-q quotes, --quotes=quotes"
Sets the quote marks used to surround C<> text to \fIquotes\fR.  If
\&\fIquotes\fR is a single character, it is used as both the left and right
quote.  Otherwise, it is split in half, and the first half of the string
is used as the left quote and the second is used as the right quote.
.Sp
\&\fIquotes\fR may also be set to the special value \f(CW\*(C`none\*(C'\fR, in which case no
quote marks are added around C<> text.
.IP "\fB\-s\fR, \fB\-\-sentence\fR" 4
.IX Item "-s, --sentence"
Assume each sentence ends with two spaces and try to preserve that spacing.
Without this option, all consecutive whitespace in non-verbatim paragraphs
is compressed into a single space.
.IP "\fB\-\-stderr\fR" 4
.IX Item "--stderr"
By default, \fBpod2text\fR dies if any errors are detected in the \s-1POD\s0 input.
If \fB\-\-stderr\fR is given and no \fB\-\-errors\fR flag is present, errors are
sent to standard error, but \fBpod2text\fR does not abort.  This is
equivalent to \f(CW\*(C`\-\-errors=stderr\*(C'\fR and is supported for backward
compatibility.
.IP "\fB\-t\fR, \fB\-\-termcap\fR" 4
.IX Item "-t, --termcap"
Try to determine the width of the screen and the bold and underline
sequences for the terminal from termcap, and use that information in
formatting the output.  Output will be wrapped at two columns less than the
width of your terminal device.  Using this option requires that your system
have a termcap file somewhere where Term::Cap can find it and requires that
your system support termios.  With this option, the output of \fBpod2text\fR
will contain terminal control sequences for your current terminal type.
.IP "\fB\-u\fR, \fB\-\-utf8\fR" 4
.IX Item "-u, --utf8"
By default, \fBpod2text\fR tries to use the same output encoding as its input
encoding (to be backward-compatible with older versions).  This option
says to instead force the output encoding to \s-1UTF\-8.\s0
.Sp
Be aware that, when using this option, the input encoding of your \s-1POD\s0
source should be properly declared unless it's US-ASCII.  Pod::Simple
will attempt to guess the encoding and may be successful if it's
Latin\-1 or \s-1UTF\-8,\s0 but it will warn, which by default results in a
\&\fBpod2text\fR failure.  Use the \f(CW\*(C`=encoding\*(C'\fR command to declare the
encoding.  See \fBperlpod\fR\|(1) for more information.
.IP "\fB\-w\fR, \fB\-\-width=\fR\fIwidth\fR, \fB\-\fR\fIwidth\fR" 4
.IX Item "-w, --width=width, -width"
The column at which to wrap text on the right-hand side.  Defaults to 76,
unless \fB\-t\fR is given, in which case it's two columns less than the width of
your terminal device.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
As long as all documents processed result in some output, even if that
output includes errata (a \f(CW\*(C`POD ERRORS\*(C'\fR section generated with
\&\f(CW\*(C`\-\-errors=pod\*(C'\fR), \fBpod2text\fR will exit with status 0.  If any of the
documents being processed do not result in an output document, \fBpod2text\fR
will exit with status 1.  If there are syntax errors in a \s-1POD\s0 document
being processed and the error handling style is set to the default of
\&\f(CW\*(C`die\*(C'\fR, \fBpod2text\fR will abort immediately with exit status 255.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
If \fBpod2text\fR fails with errors, see Pod::Text and Pod::Simple for
information about what those errors might mean.  Internally, it can also
produce the following diagnostics:
.IP "\-c (\-\-color) requires Term::ANSIColor be installed" 4
.IX Item "-c (--color) requires Term::ANSIColor be installed"
(F) \fB\-c\fR or \fB\-\-color\fR were given, but Term::ANSIColor could not be
loaded.
.ie n .IP "Unknown option: %s" 4
.el .IP "Unknown option: \f(CW%s\fR" 4
.IX Item "Unknown option: %s"
(F) An unknown command line option was given.
.PP
In addition, other Getopt::Long error messages may result from invalid
command-line options.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\s-1COLUMNS\s0" 4
.IX Item "COLUMNS"
If \fB\-t\fR is given, \fBpod2text\fR will take the current width of your screen
from this environment variable, if available.  It overrides terminal width
information in \s-1TERMCAP.\s0
.IP "\s-1TERMCAP\s0" 4
.IX Item "TERMCAP"
If \fB\-t\fR is given, \fBpod2text\fR will use the contents of this environment
variable if available to determine the correct formatting sequences for your
current terminal device.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <rra@cpan.org>.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 1999\-2001, 2004, 2006, 2008, 2010, 2012\-2018 Russ Allbery
<rra@cpan.org>
.PP
This program is free software; you may redistribute it and/or modify it
under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Pod::Text, Pod::Text::Color, Pod::Text::Overstrike,
Pod::Text::Termcap, Pod::Simple, \fBperlpod\fR\|(1)
.PP
The current version of this script is always available from its web site at
<https://www.eyrie.org/~eagle/software/podlators/>.  It is also part of the
Perl core distribution as of 5.6.0.
