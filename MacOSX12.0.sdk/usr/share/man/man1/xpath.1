.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XPATH 1"
.TH XPATH 1 "2017-07-27" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
xpath \- a script to query XPath statements in XML documents.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBxpath [\-s suffix] [\-p prefix] [\-n] [\-q] \-e query [\-e query] ... [file] ...\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBxpath\fR uses the XML::XPath perl module to make XPath queries to any \s-1XML\s0 document.
The XML::XPath module aims to comply exactly to the XPath specification
at \f(CW\*(C`http://www.w3.org/TR/xpath\*(C'\fR and yet allows extensions to be added in the form of
functions.
.PP
The script takes any number of XPath pointers and tries to apply them to each \s-1XML\s0 document
given on the command line. If no file arguments are given, the query is done using \f(CW\*(C`STDIN\*(C'\fR
as an \s-1XML\s0 document.
.PP
When multiple queries exist, the result of the last query is used as context for the next
query and only the result of the last one is output. The context of the first query is always
the root of the current document.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "\fB\-q\fP"
.IX Subsection "-q"
Be quiet. Output only errors (and no separator) on stderr.
.SS "\fB\-n\fP"
.IX Subsection "-n"
Never use an external \s-1DTD,\s0 ie. instantiate the XML::Parser module with 'ParseParamEnt => 0'.
.SS "\fB\-s suffix\fP"
.IX Subsection "-s suffix"
Place \f(CW\*(C`suffix\*(C'\fR at the end of each entry. Default is a linefeed.
.SS "\fB\-p prefix\fP"
.IX Subsection "-p prefix"
Place \f(CW\*(C`prefix\*(C'\fR preceding each entry. Default is nothing.
.SH "BUGS"
.IX Header "BUGS"
The author of this man page is not very fluant in english. Please, send him (fabien@tzone.org)
any corrections concerning this text.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
XML::XPath
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
This module is  copyright  2000 AxKit.com Ltd. This is free software, and as such
comes with \s-1NO WARRANTY.\s0 No dates are used in this module. You may distribute this
module under the terms  of either the Gnu \s-1GPL,\s0  or the Artistic License (the same
terms as Perl itself).
.PP
For support, please subscribe to the Perl-XML <http://listserv.activestate.com/mailman/listinfo/perl-xml>
mailing list at the \s-1URL\s0
