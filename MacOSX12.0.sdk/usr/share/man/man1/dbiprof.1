.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIPROF 1"
.TH DBIPROF 1 "2021-08-28" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dbiprof \- command\-line client for DBI::ProfileData
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
See a report of the ten queries with the longest total runtime in the
profile dump file \fIprof1.out\fR:
.PP
.Vb 1
\& dbiprof prof1.out
.Ve
.PP
See the top 10 most frequently run queries in the profile file
\&\fIdbi.prof\fR (the default):
.PP
.Vb 1
\&  dbiprof \-\-sort count
.Ve
.PP
See the same report with 15 entries:
.PP
.Vb 1
\&  dbiprof \-\-sort count \-\-number 15
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This tool is a command-line client for the DBI::ProfileData.  It
allows you to analyze the profile data file produced by
DBI::ProfileDumper and produce various useful reports.
.SH "OPTIONS"
.IX Header "OPTIONS"
This program accepts the following options:
.IP "\-\-number N" 4
.IX Item "--number N"
Produce this many items in the report.  Defaults to 10.  If set to
\&\*(L"all\*(R" then all results are shown.
.IP "\-\-sort field" 4
.IX Item "--sort field"
Sort results by the given field. Sorting by multiple fields isn't currently
supported (patches welcome).  The available sort fields are:
.RS 4
.IP "total" 4
.IX Item "total"
Sorts by total time run time across all runs.  This is the default
sort.
.IP "longest" 4
.IX Item "longest"
Sorts by the longest single run.
.IP "count" 4
.IX Item "count"
Sorts by total number of runs.
.IP "first" 4
.IX Item "first"
Sorts by the time taken in the first run.
.IP "shortest" 4
.IX Item "shortest"
Sorts by the shortest single run.
.IP "key1" 4
.IX Item "key1"
Sorts by the value of the first element in the Path, which should be numeric.
You can also sort by \f(CW\*(C`key2\*(C'\fR and \f(CW\*(C`key3\*(C'\fR.
.RE
.RS 4
.RE
.IP "\-\-reverse" 4
.IX Item "--reverse"
Reverses the selected sort.  For example, to see a report of the
shortest overall time:
.Sp
.Vb 1
\&  dbiprof \-\-sort total \-\-reverse
.Ve
.IP "\-\-match keyN=value" 4
.IX Item "--match keyN=value"
Consider only items where the specified key matches the given value.
Keys are numbered from 1.  For example, let's say you used a
DBI::Profile Path of:
.Sp
.Vb 1
\&  [ DBIprofile_Statement, DBIprofile_Methodname ]
.Ve
.Sp
And called dbiprof as in:
.Sp
.Vb 1
\&  dbiprof \-\-match key2=execute
.Ve
.Sp
Your report would only show execute queries, leaving out prepares,
fetches, etc.
.Sp
If the value given starts and ends with slashes (\f(CW\*(C`/\*(C'\fR) then it will be
treated as a regular expression.  For example, to only include \s-1SELECT\s0
queries where key1 is the statement:
.Sp
.Vb 1
\&  dbiprof \-\-match key1=/^SELECT/
.Ve
.Sp
By default the match expression is matched case-insensitively, but
this can be changed with the \-\-case\-sensitive option.
.IP "\-\-exclude keyN=value" 4
.IX Item "--exclude keyN=value"
Remove items for where the specified key matches the given value.  For
example, to exclude all prepare entries where key2 is the method name:
.Sp
.Vb 1
\&  dbiprof \-\-exclude key2=prepare
.Ve
.Sp
Like \f(CW\*(C`\-\-match\*(C'\fR, If the value given starts and ends with slashes
(\f(CW\*(C`/\*(C'\fR) then it will be treated as a regular expression.  For example,
to exclude \s-1UPDATE\s0 queries where key1 is the statement:
.Sp
.Vb 1
\&  dbiprof \-\-match key1=/^UPDATE/
.Ve
.Sp
By default the exclude expression is matched case-insensitively, but
this can be changed with the \-\-case\-sensitive option.
.IP "\-\-case\-sensitive" 4
.IX Item "--case-sensitive"
Using this option causes \-\-match and \-\-exclude to work
case-sensitively.  Defaults to off.
.IP "\-\-delete" 4
.IX Item "--delete"
Sets the \f(CW\*(C`DeleteFiles\*(C'\fR option to DBI::ProfileData which causes the
files to be deleted after reading. See DBI::ProfileData for more details.
.IP "\-\-dumpnodes" 4
.IX Item "--dumpnodes"
Print the list of nodes in the form of a perl data structure.
Use the \f(CW\*(C`\-sort\*(C'\fR option if you want the list sorted.
.IP "\-\-version" 4
.IX Item "--version"
Print the dbiprof version number and exit.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sam Tregar <sam@tregar.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2002 Sam Tregar
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl 5 itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBI::ProfileDumper,
DBI::Profile, \s-1DBI\s0.
