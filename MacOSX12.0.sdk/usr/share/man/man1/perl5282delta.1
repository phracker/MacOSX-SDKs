.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5282DELTA 1"
.TH PERL5282DELTA 1 "2019-10-21" "perl v5.30.3" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5282delta \- what is new for perl v5.28.2
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.28.1 release and the 5.28.2
release.
.PP
If you are upgrading from an earlier release such as 5.28.0, first read
perl5281delta, which describes differences between 5.28.0 and 5.28.1.
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
.SS "Any set of digits in the Common script are legal in a script run of another script"
.IX Subsection "Any set of digits in the Common script are legal in a script run of another script"
There are several sets of digits in the Common script.  \f(CW\*(C`[0\-9]\*(C'\fR is the most
familiar.  But there are also \f(CW\*(C`[\ex{FF10}\-\ex{FF19}]\*(C'\fR (\s-1FULLWIDTH DIGIT ZERO\s0 \-
\&\s-1FULLWIDTH DIGIT NINE\s0), and several sets for use in mathematical notation, such
as the \s-1MATHEMATICAL\s0 DOUBLE-STRUCK DIGITs.  Any of these sets should be able to
appear in script runs of, say, Greek.  But the previous design overlooked all
but the \s-1ASCII\s0 digits \f(CW\*(C`[0\-9]\*(C'\fR, so the design was flawed.  This has been fixed,
so is both a bug fix and an incompatibility.
.PP
All digits in a run still have to come from the same set of ten digits.
.PP
[perl #133547] <https://rt.perl.org/Ticket/Display.html?id=133547>
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "\(bu" 4
Module::CoreList has been upgraded from version 5.20181129_28 to 5.20190419.
.IP "\(bu" 4
PerlIO::scalar has been upgraded from version 0.29 to 0.30.
.IP "\(bu" 4
Storable has been upgraded from version 3.08 to 3.08_01.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "Windows" 4
.IX Item "Windows"
The Windows Server 2003 \s-1SP1\s0 Platform \s-1SDK\s0 build, with its early x64 compiler and
tools, was accidentally broken in Perl 5.27.9.  This has now been fixed.
.IP "Mac \s-1OS X\s0" 4
.IX Item "Mac OS X"
Perl's build and testing process on Mac \s-1OS X\s0 for \f(CW\*(C`\-Duseshrplib\*(C'\fR builds is now
compatible with Mac \s-1OS X\s0 System Integrity Protection (\s-1SIP\s0).
.Sp
\&\s-1SIP\s0 prevents binaries in \fI/bin\fR (and a few other places) being passed the
\&\f(CW\*(C`DYLD_LIBRARY_PATH\*(C'\fR environment variable.  For our purposes this prevents
\&\f(CW\*(C`DYLD_LIBRARY_PATH\*(C'\fR from being passed to the shell, which prevents that
variable being passed to the testing or build process, so running \f(CW\*(C`perl\*(C'\fR
couldn't find \fIlibperl.dylib\fR.
.Sp
To work around that, the initial build of the \fIperl\fR executable expects to
find \fIlibperl.dylib\fR in the build directory, and the library path is then
adjusted during installation to point to the installed library.
.Sp
[perl #126706] <https://rt.perl.org/Ticket/Display.html?id=126706>
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
If an in-place edit is still in progress during global destruction and the
process exit code (as stored in \f(CW$?\fR) is zero, perl will now treat the
in-place edit as successful, replacing the input file with any output produced.
.Sp
This allows code like:
.Sp
.Vb 1
\&  perl \-i \-ne \*(Aqprint "Foo"; last\*(Aq
.Ve
.Sp
to replace the input file, while code like:
.Sp
.Vb 1
\&  perl \-i \-ne \*(Aqprint "Foo"; die\*(Aq
.Ve
.Sp
will not.  Partly resolves [perl #133659].
.Sp
[perl #133659] <https://rt.perl.org/Ticket/Display.html?id=133659>
.IP "\(bu" 4
A regression in Perl 5.28 caused the following code to fail
.Sp
.Vb 1
\& close(STDIN); open(CHILD, "|wc \-l")\*(Aq
.Ve
.Sp
because the child's stdin would be closed on exec.  This has now been fixed.
.IP "\(bu" 4
\&\f(CW\*(C`pack "u", "invalid uuencoding"\*(C'\fR now properly \s-1NUL\s0 terminates the zero-length
\&\s-1SV\s0 produced.
.Sp
[perl #132655] <https://rt.perl.org/Ticket/Display.html?id=132655>
.IP "\(bu" 4
Failing to compile a format now aborts compilation.  Like other errors in
sub-parses this could leave the parser in a strange state, possibly crashing
perl if compilation continued.
.Sp
[perl #132158] <https://rt.perl.org/Ticket/Display.html?id=132158>
.IP "\(bu" 4
See \*(L"Any set of digits in the Common script are legal in a script run of
another script\*(R".
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.28.2 represents approximately 4 months of development since Perl 5.28.1
and contains approximately 2,500 lines of changes across 75 files from 13
authors.
.PP
Excluding auto-generated files, documentation and release tools, there were
approximately 1,200 lines of changes to 29 .pm, .t, .c and .h files.
.PP
Perl continues to flourish into its fourth decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.28.2:
.PP
Aaron Crane, Abigail, Andy Dougherty, David Mitchell, Karen Etheridge, Karl
Williamson, Leon Timmermans, Nicolas R., Sawyer X, Steve Hay, Tina Mu\*:ller,
Tony Cook, Zak B. Elep.
.PP
The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0 modules
included in Perl's core.  We're grateful to the entire \s-1CPAN\s0 community for
helping Perl to flourish.
.PP
For a more complete list of all of Perl's historical contributors, please see
the \fI\s-1AUTHORS\s0\fR file in the Perl source distribution.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the perl bug database
at <https://rt.perl.org/> .  There may also be information at
<http://www.perl.org/> , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the perlbug program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of \f(CW\*(C`perl \-V\*(C'\fR,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
\&\*(L"\s-1SECURITY VULNERABILITY CONTACT INFORMATION\*(R"\s0 in perlsec
for details of how to report the issue.
.SH "Give Thanks"
.IX Header "Give Thanks"
If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the \f(CW\*(C`perlthanks\*(C'\fR program:
.PP
.Vb 1
\&    perlthanks
.Ve
.PP
This will send an email to the Perl 5 Porters list with your show of thanks.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
