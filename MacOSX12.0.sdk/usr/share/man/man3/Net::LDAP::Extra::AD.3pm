.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::LDAP::Extra::AD 3"
.TH Net::LDAP::Extra::AD 3 "2019-04-16" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::LDAP::Extra::AD \-\- AD convenience methods
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Net::LDAP::Extra qw(AD);
\&
\&  $ldap = Net::LDAP\->new( ... );
\&
\&  ...
\&
\&  if ($ldap\->is_AD || $ldap\->is_ADAM) {
\&    $ldap\->change_ADpassword($dn, $old_password, $new_password);
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Net::LDAP::Extra::AD tries to spare users the necessity to
reinvent the wheel again and again in order to correctly encode
password strings so that they can be used in \s-1AD\s0 password change
operations.
.PP
To do so, it provides the following methods:
.SH "METHODS"
.IX Header "METHODS"
.IP "is_AD ( )" 4
.IX Item "is_AD ( )"
Tell if the \s-1LDAP\s0 server queried is an Active Directory Domain Controller.
.Sp
As the check is done by querying the root \s-1DSE\s0 of the directory,
it works without being bound to the directory.
.IP "is_ADAM ( )" 4
.IX Item "is_ADAM ( )"
Tell if the \s-1LDAP\s0 server queried is running \s-1AD LDS\s0
(Active Directory Lightweight Directory Services),
previously known as \s-1ADAM\s0 (Active Directory Application Mode).
.Sp
As the check is done by querying the root \s-1DSE\s0 of the directory,
it works without being bound to the directory.
.IP "change_ADpassword ( \s-1DN, OLD_PASSWORD, NEW_PASSWORD\s0 )" 4
.IX Item "change_ADpassword ( DN, OLD_PASSWORD, NEW_PASSWORD )"
Change the password of the account given by \fI\s-1DN\s0\fR from
its old value \fI\s-1OLD_PASSWORD\s0\fR to the new value \fI\s-1NEW_PASSWORD\s0\fR.
.Sp
This method requires encrypted connections.
.IP "reset_ADpassword ( \s-1DN, NEW_PASSWORD, OPTIONS\s0 )" 4
.IX Item "reset_ADpassword ( DN, NEW_PASSWORD, OPTIONS )"
Reset the password of the account given by \fI\s-1DN\s0\fR to the value
given in \fI\s-1NEW_PASSWORD\s0\fR.
\&\s-1OPTIONS\s0 is a list of key/value pairs. The following keys are recognized:
.RS 4
.IP "force_change" 4
.IX Item "force_change"
If \s-1TRUE,\s0 the affected user is required to change the
password at next login.
.RE
.RS 4
.Sp
For this method to work, the caller needs to be bound to \s-1AD\s0 with
sufficient permissions, and the connection needs to be encrypted.
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Peter Marschall <peter@adpm.de<gt>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2012 Peter Marschall. All rights reserved. This program is
free software; you can redistribute it and/or modify it under the same
terms as Perl itself.
