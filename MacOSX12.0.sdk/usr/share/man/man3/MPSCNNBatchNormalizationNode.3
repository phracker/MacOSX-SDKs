.TH "MPSCNNBatchNormalizationNode" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNBatchNormalizationNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNGraphNodes\&.h>\fP
.PP
Inherits \fBMPSNNFilterNode\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSource:dataSource:\fP"
.br
.in -1c
.SS "Class Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSource:dataSource:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBMPSCNNBatchNormalizationFlags\fP \fBflags\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBA\fP node representing batch normalization for inference or training  Batch normalization operates differently for inference and training\&. For inference, the normalization is done according to a static statistical representation of data saved during training\&. For training, this representation is ever evolving\&. In the low level MPS batch normalization interface, during training, the batch normalization is broken up into two steps: calculation of the statistical representation of input data, followed by normalization once the statistics are known for the entire batch\&. These are \fBMPSCNNBatchNormalizationStatistics\fP and \fBMPSCNNBatchNormalization\fP, respectively\&.
.PP
When this node appears in a graph and is not required to produce a \fBMPSCNNBatchNormalizationState\fP -- that is, \fBMPSCNNBatchNormalizationNode\&.resultState\fP is not used within the graph -- then it operates in inference mode and new batch-only statistics are not calculated\&. When this state node is consumed, then the node is assumed to be in training mode and new statistics will be calculated and written to the \fBMPSCNNBatchNormalizationState\fP and passed along to the \fBMPSCNNBatchNormalizationGradient\fP and \fBMPSCNNBatchNormalizationStatisticsGradient\fP as necessary\&. This should allow you to construct an identical sequence of nodes for inference and training and expect the right thing to happen\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) initWithSource: (\fBMPSNNImageNode\fP *__nonnull) source(nonnull id< \fBMPSCNNBatchNormalizationDataSource\fP >) dataSource"

.SS "+ (nonnull instancetype) nodeWithSource: (\fBMPSNNImageNode\fP *__nonnull) source(nonnull id< \fBMPSCNNBatchNormalizationDataSource\fP >) dataSource"

.SH "Property Documentation"
.PP 
.SS "\- (\fBMPSCNNBatchNormalizationFlags\fP) flags\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
Options controlling how batch normalization is calculated  Default: MPSCNNBatchNormalizationFlagsDefault 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
