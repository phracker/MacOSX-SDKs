.TH "MPSCNNDropoutGradientState" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNDropoutGradientState
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSCNNDropout\&.h>\fP
.PP
Inherits \fBMPSNNGradientState\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinit\fP"
.br
.ti -1c
.RI "(nonnull NSData *) \- \fBmaskData\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework\&.  The \fBMPSCNNDropoutGradientState\fP is used to hold the mask used by both \fBMPSCNNDropout\fP forward filter and \fBMPSCNNDropoutGradient\fP backward filter\&. The \fBMPSCNNDropout\fP forward filter populates the \fBMPSCNNDropoutGradientState\fP object and the \fBMPSCNNDropoutGradient\fP backward filter consumes the state object\&.
.PP
While the mask is stored internally, the mask data is accessible by the user for debugging purposes via an accessor method\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) init "

.PP
Reimplemented from \fBMPSState\fP\&.
.SS "\- (nonnull NSData*) maskData "
Mask data accessor method\&. 
.PP
\fBReturns:\fP
.RS 4
An autoreleased NSData object, containing the mask data\&. The mask data is populated in the -encode call, thus the contents are undefined until you -encode the filter\&. Use for debugging purposes only\&.
.RE
.PP
In order to gaurantee that the mask data is correctly synchronized for CPU side access, it is the application's responsibility to call the [gradientState synchronizeOnCommandBuffer:] method before accessing the mask data\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
