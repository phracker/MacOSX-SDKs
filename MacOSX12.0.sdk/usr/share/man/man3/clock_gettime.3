.\"
.\" Copyright (c) 1980, 1991, 1993
.\" The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd January 26, 2016
.Dt CLOCK_GETTIME 3
.Os
.Sh NAME
.Nm clock_gettime ,
.Nm clock_settime ,
.Nm clock_getres ,
.Nm clock_gettime_nsec_np
.Nd get/set date and time
.Sh SYNOPSIS
.Fd #include <time.h>
.Ft int
.Fn clock_gettime "clockid_t clock_id" "struct timespec *tp"
.Ft int
.Fn clock_settime "clockid_t clock_id" "const struct timespec *tp"
.Ft int
.Fn clock_getres "clockid_t clock_id" "struct timespec *tp"
.Ft uint64_t
.Fn clock_gettime_nsec_np "clockid_t clock_id"
.Sh DESCRIPTION
The
.Fn clock_gettime
and
.Fn clock_settime
functions
allow the calling process to retrieve or set the value used by a clock
which is specified by
.Fa clock_id .
.Pp
.Fa clock_id
can be a value from
one of 8 predefined values:
.Bl -tag -width Er
.It Dv CLOCK_REALTIME
the system's real time (i.e. wall time) clock, expressed as the amount of time
since the Epoch.
This is the same as the value returned by
.Xr gettimeofday 2 .
.It Dv CLOCK_MONOTONIC
clock that increments monotonically, tracking the time since an arbitrary
point, and will continue to increment while the system is asleep.
.It Dv CLOCK_MONOTONIC_RAW
clock that increments monotonically, tracking the time since an arbitrary point
like CLOCK_MONOTONIC.  However, this clock is unaffected by frequency or time
adjustments.  It should not be compared to other system time sources.
.It Dv CLOCK_MONOTONIC_RAW_APPROX
like CLOCK_MONOTONIC_RAW, but reads a value cached by the system at context
switch.  This can be read faster, but at a loss of accuracy as it may return
values that are milliseconds old.
.It Dv CLOCK_UPTIME_RAW
clock that increments monotonically, in the same manner as
.Dv CLOCK_MONOTONIC_RAW,
but that does not increment while the system is asleep.
The returned value is identical to the result of
.Fn mach_absolute_time
after the appropriate mach_timebase conversion is applied.
.It Dv CLOCK_UPTIME_RAW_APPROX
like CLOCK_UPTIME_RAW, but reads a value cached by the system at context
switch.  This can be read faster, but at a loss of accuracy as it may return
values that are milliseconds old.
.It Dv CLOCK_PROCESS_CPUTIME_ID
clock that tracks the amount of CPU (in user- or kernel-mode) used by the
calling process.
.It Dv CLOCK_THREAD_CPUTIME_ID
clock that tracks the amount of CPU (in user- or kernel-mode) used by the
calling thread.
.El
.Pp
The structure pointed to by
.Fa tp
is defined in
.In sys/time.h
as:
.Bd -literal -offset indent
struct timespec {
    time_t  tv_sec;     /* seconds */
    long    tv_nsec;    /* and nanoseconds */
};
.Ed
.Pp
Only the
.Dv CLOCK_REALTIME
clock can be set, and only the superuser may do so.
.Pp
The resolution of a clock is returned by the
.Fn clock_getres
call.
This value is placed in a (non-null)
.Fa *tp .
This value may be smaller than the actual precision of the underlying clock,
but represents a lower bound on the resolution.
.Pp
As a non-portable extension, the
.Fn clock_gettime_nsec_np
function will return the clock value in 64-bit nanoseconds.
.Sh RETURN VALUES
A 0 return value indicates that the call succeeded.
A \-1 return value indicates an error occurred, and in this
case an error code is stored into the global variable
.Va errno .
For
.Fn clock_gettime_nsec_np
a return value of non-0 indicates success.  A 0 return value indicates an error
occurred and an error code is stored in
.Va errno .
.Sh ERRORS
.Fn clock_gettime ,
.Fn clock_settime ,
.Fn clock_getres ,
and
.Fn clock_gettime_nsec_np
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa clock_id
is not a valid value.
.It Bq Er EFAULT
The
.Fa tp
argument address referenced invalid memory.
.El
.Pp
In addition,
.Fn clock_settime
may return the following errors:
.Bl -tag -width Er
.It Bq Er EPERM
A user other than the superuser attempted to set the time.
.It Bq Er EINVAL
.Fa clock_id
specifies a clock that isn't settable,
.Fa tp
specifies a nanosecond value less than zero or greater than 1000 million,
or a value outside the range of the specified clock.
.El
.Sh SEE ALSO
.Xr date 1 ,
.Xr getitimer 2 ,
.Xr gettimeofday 2 ,
.Sh HISTORY
These functions first appeared
in
Mac OSX 10.12
.Sh STANDARDS
The
.Fn clock_gettime ,
.Fn clock_settime ,
and
.Fn clock_getres
system calls conform to
.St -p1003.1b-93 .
.Fn cleck_gettime_nsec_np
is a non-portable Darwin extension.
The clock IDs
.Fa CLOCK_MONOTONIC_RAW
and
.Fa CLOCK_UPTIME_RAW
are extensions to the POSIX interface.
