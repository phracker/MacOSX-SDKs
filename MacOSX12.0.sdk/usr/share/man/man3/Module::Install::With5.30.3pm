.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::Install::With 3"
.TH Module::Install::With 3 "2017-04-04" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::Install::With \- find environnement for Module::Install
.SS "interactive"
.IX Subsection "interactive"
The \f(CW\*(C`interactive\*(C'\fR function tests for an install that has a user present
(or at least, one in which it is reasonable for us to present prompts
and other similar types of things).
.PP
Returns true if in an interactive environment, or false otherwise.
.SS "automated_testing"
.IX Subsection "automated_testing"
Are we currently running in an automated testing environment, such as
\&\s-1CPAN\s0 Testers.
.PP
This is primarily a cleaner and more human-readable equivalent of
checking \f(CW$ENV\fR{\s-1AUTOMATED_TESTING\s0} yourself, but may be improved in line
with best practices at a later date.
.SS "release_testing"
.IX Subsection "release_testing"
Are we currently running in an release testing environment. That is,
are we in the process of running in a potential highly-intensive and
high dependency bloat testing process prior to packaging a module for
release.
.PP
This is primarily a cleaner and more human-readable equivalent of
checking \f(CW$ENV\fR{\s-1RELEASE_TESTING\s0} yourself, but may be improved in line
with best practices at a later date.
.SS "win32"
.IX Subsection "win32"
The \f(CW\*(C`win32\*(C'\fR function tests if the Makefile.PL is currently running in a
native Microsoft Windows Perl, such as ActivePerl or Strawberry Perl.
.PP
This is primarily a cleaner and more human-readable equivalent of
checking \f(CW\*(C`$^O eq \*(AqMSWin32\*(Aq\*(C'\fR yourself, but may be improved in line
with best practices at a later date.
.SS "winlike"
.IX Subsection "winlike"
The \f(CW\*(C`winlike\*(C'\fR function tests if the Makefile.PL is currently running
in a Microsoft Windows Perl, under either cygwin or a native Win32 Perl.
.PP
This is primarily a cleaner and more human-readable equivalent of
checking \f(CW\*(C`$^O eq \*(AqMSWin32\*(Aq or $^O eq \*(Aqcygwin\*(Aq\*(C'\fRyourself, but may be
improved in line with best practices at a later date.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::Install
.SH "AUTHORS"
.IX Header "AUTHORS"
Adam Kennedy <adamk@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2007 \- 2012 Adam Kennedy.
.PP
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.
