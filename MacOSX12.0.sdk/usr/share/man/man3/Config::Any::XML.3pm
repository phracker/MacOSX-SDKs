.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Config::Any::XML 3"
.TH Config::Any::XML 3 "2017-04-09" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Config::Any::XML \- Load XML config files
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Loads \s-1XML\s0 files. Example:
.PP
.Vb 9
\&    <config>
\&        <name>TestApp</name>
\&        <component name="Controller::Foo">
\&            <foo>bar</foo>
\&        </component>
\&        <model name="Baz">
\&            <qux>xyzzy</qux>
\&        </model>
\&    </config>
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "extensions( )"
.IX Subsection "extensions( )"
return an array of valid extensions (\f(CW\*(C`xml\*(C'\fR).
.ie n .SS "load( $file )"
.el .SS "load( \f(CW$file\fP )"
.IX Subsection "load( $file )"
Attempts to load \f(CW$file\fR as an \s-1XML\s0 file.
.SS "requires_all_of( )"
.IX Subsection "requires_all_of( )"
Specifies that this module requires XML::Simple and XML::NamespaceSupport
in order to work.
.SH "CAVEATS"
.IX Header "CAVEATS"
.SS "Strict Mode"
.IX Subsection "Strict Mode"
If, by some chance, XML::Simple has already been loaded with the strict
flag turned on, then you will likely get errors as warnings will become
fatal exceptions and certain arguments to \fBXMLin()\fR will no longer be optional.
.PP
See XML::Simple's strict mode documentation for
more information.
.SH "AUTHORS"
.IX Header "AUTHORS"
Brian Cassidy <bricas@cpan.org>
.PP
Joel Bernstein <rataxis@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2006\-2016 by Brian Cassidy
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
Catalyst
.IP "\(bu" 4
Config::Any
.IP "\(bu" 4
XML::Simple
