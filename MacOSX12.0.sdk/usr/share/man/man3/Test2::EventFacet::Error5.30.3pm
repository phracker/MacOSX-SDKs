.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::EventFacet::Error 3"
.TH Test2::EventFacet::Error 3 "2020-10-22" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test2::EventFacet::Error \- Facet for errors that need to be shown.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This facet is used when an event needs to convey errors.
.SH "NOTES"
.IX Header "NOTES"
This facet has the hash key \f(CW\*(Aqerrors\*(Aq\fR, and is a list of facets instead of a
single item.
.SH "FIELDS"
.IX Header "FIELDS"
.ie n .IP "$string = $error\->{details}" 4
.el .IP "\f(CW$string\fR = \f(CW$error\fR\->{details}" 4
.IX Item "$string = $error->{details}"
.PD 0
.ie n .IP "$string = $error\->\fBdetails()\fR" 4
.el .IP "\f(CW$string\fR = \f(CW$error\fR\->\fBdetails()\fR" 4
.IX Item "$string = $error->details()"
.PD
Explanation of the error, or the error itself (such as an exception). In perl
exceptions may be blessed objects, so this field may contain a blessed object.
.ie n .IP "$short_string = $error\->{tag}" 4
.el .IP "\f(CW$short_string\fR = \f(CW$error\fR\->{tag}" 4
.IX Item "$short_string = $error->{tag}"
.PD 0
.ie n .IP "$short_string = $error\->\fBtag()\fR" 4
.el .IP "\f(CW$short_string\fR = \f(CW$error\fR\->\fBtag()\fR" 4
.IX Item "$short_string = $error->tag()"
.PD
Short tag to categorize the error. This is usually 10 characters or less,
formatters may truncate longer tags.
.ie n .IP "$bool = $error\->{fail}" 4
.el .IP "\f(CW$bool\fR = \f(CW$error\fR\->{fail}" 4
.IX Item "$bool = $error->{fail}"
.PD 0
.ie n .IP "$bool = $error\->\fBfail()\fR" 4
.el .IP "\f(CW$bool\fR = \f(CW$error\fR\->\fBfail()\fR" 4
.IX Item "$bool = $error->fail()"
.PD
Not all errors are fatal, some are displayed having already been handled. Set
this to true if you want the error to cause the test to fail. Without this the
error is simply a diagnostics message that has no effect on the overall
pass/fail result.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2 can be found at
\&\fIhttp://github.com/Test\-More/test\-more/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
