.TH "MPSNNArithmeticGradientNode" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSNNArithmeticGradientNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNGraphNodes\&.h>\fP
.PP
Inherits \fBMPSNNGradientFilterNode\fP\&.
.PP
Inherited by \fBMPSNNAdditionGradientNode\fP, \fBMPSNNMultiplicationGradientNode\fP, and \fBMPSNNSubtractionGradientNode\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSourceGradient:sourceImage:gradientState:isSecondarySourceFilter:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithGradientImages:forwardFilter:isSecondarySourceFilter:\fP"
.br
.in -1c
.SS "Class Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSourceGradient:sourceImage:gradientState:isSecondarySourceFilter:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "float \fBprimaryScale\fP"
.br
.ti -1c
.RI "float \fBsecondaryScale\fP"
.br
.ti -1c
.RI "float \fBbias\fP"
.br
.ti -1c
.RI "NSUInteger \fBsecondaryStrideInPixelsX\fP"
.br
.ti -1c
.RI "NSUInteger \fBsecondaryStrideInPixelsY\fP"
.br
.ti -1c
.RI "NSUInteger \fBsecondaryStrideInFeatureChannels\fP"
.br
.ti -1c
.RI "float \fBminimumValue\fP"
.br
.ti -1c
.RI "float \fBmaximumValue\fP"
.br
.ti -1c
.RI "BOOL \fBisSecondarySourceFilter\fP"
.br
.in -1c
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) initWithGradientImages: (NSArray< \fBMPSNNImageNode\fP * > *__nonnull) gradientImages(\fBMPSNNFilterNode\fP *__nonnull) filter(BOOL) isSecondarySourceFilter"
create a new arithmetic gradient node  See also -[\fBMPSCNNNeuronNode\fP gradientFilterNodesWithSources:] for an easier way to do this\&. 
.PP
\fBParameters:\fP
.RS 4
\fIgradientImages\fP The input gradient from the 'downstream' gradient filter and the source input image from the forward pass (primary or secondary)\&. 
.br
\fIfilter\fP The matching filter node from the forward pass\&. 
.br
\fIisSecondarySourceFilter\fP The isSecondarySourceFilter property is used to indicate whether the arithmetic gradient filter is operating on the primary or secondary source image from the forward pass\&. 
.RE
.PP

.SS "\- (nonnull instancetype) initWithSourceGradient: (\fBMPSNNImageNode\fP *__nonnull) sourceGradient(\fBMPSNNImageNode\fP *__nonnull) sourceImage(\fBMPSNNBinaryGradientStateNode\fP *__nonnull) gradientState(BOOL) isSecondarySourceFilter"
create a new arithmetic gradient node  See also -[\fBMPSCNNNeuronNode\fP gradientFilterNodesWithSources:] for an easier way to do this\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceGradient\fP The input gradient from the 'downstream' gradient filter\&. 
.br
\fIsourceImage\fP The source input image from the forward pass (primary or secondary)\&. 
.br
\fIgradientState\fP The gradient state produced by the concatenation filter, consumed by this filter\&. 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithSourceGradient: (\fBMPSNNImageNode\fP *__nonnull) sourceGradient(\fBMPSNNImageNode\fP *__nonnull) sourceImage(\fBMPSNNBinaryGradientStateNode\fP *__nonnull) gradientState(BOOL) isSecondarySourceFilter"
create a new arithmetic gradient node  See also -[\fBMPSCNNNeuronNode\fP gradientFilterNodesWithSources:] for an easier way to do this\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceGradient\fP The input gradient from the 'downstream' gradient filter\&. 
.br
\fIsourceImage\fP The source input image from the forward pass (primary or secondary)\&. 
.br
\fIgradientState\fP The gradient state produced by the concatenation filter, consumed by this filter\&. 
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "\- (float) bias\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (BOOL) isSecondarySourceFilter\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) maximumValue\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) minimumValue\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) primaryScale\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) secondaryScale\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) secondaryStrideInFeatureChannels\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) secondaryStrideInPixelsX\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) secondaryStrideInPixelsY\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
