.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::DKIM::ARC::MessageSignature 3"
.TH Mail::DKIM::ARC::MessageSignature 3 "2018-10-13" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::DKIM::ARC::Signature \- represents a ARC\-Message\-Signature header
.PP
This is a subclass of Mail::DKIM::Signature
.SH "CONSTRUCTORS"
.IX Header "CONSTRUCTORS"
.SS "\fBnew()\fP \- create a new signature from parameters"
.IX Subsection "new() - create a new signature from parameters"
.Vb 12
\&  my $signature = Mail::DKIM::ARC::MessageSignature\->new(
\&                      [ Algorithm => \*(Aqrsa\-sha256\*(Aq, ]
\&                      [ Signature => $base64, ]
\&                      [ Method => \*(Aqrelaxed\*(Aq, ]
\&                      [ Domain => \*(Aqexample.org\*(Aq, ]
\&                      [ Instance => 1, ]
\&                      [ Headers => \*(Aqfrom:subject:date:message\-id\*(Aq, ]
\&                      [ Query => \*(Aqdns\*(Aq, ]
\&                      [ Selector => \*(Aqalpha\*(Aq, ]
\&                      [ Timestamp => time(), ]
\&                      [ Expiration => time() + 86400, ]
\&                  );
.Ve
.PP
The only differences between this module and Mail::DKIM::Signature are
the header name, and that 'instance' is an integer rather than a base64
encoded value.
.SS "\fBinstance()\fP \- get or set the signing instance (i=) field"
.IX Subsection "instance() - get or set the signing instance (i=) field"
.Vb 1
\&  my $i = $signature\->instance;
.Ve
.PP
Instances must be integers less than 1024 according to the spec.
.PP
\&\s-1NOTE:\s0 the i= field is \*(L"Identity\*(R" in \s-1DKIM\s0 and is a base64 value, but in
\&\s-1ARC\s0 it is \*(L"Instance\*(R" and an integer.  The parsing routine does not
check that the i= value is a number.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mail::DKIM::Signature for DKIM-Signature headers
.SH "AUTHOR"
.IX Header "AUTHOR"
Bron Gondwana, <brong@fastmailteam.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2017 by FastMail Pty Ltd
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.6 or,
at your option, any later version of Perl 5 you may have available.
