'\" t
.\"     Title: glIsEnabled
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLISENABLED" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glIsEnabled \- test whether a capability is enabled
.SH "C SPECIFICATION"
.HP \w'GLboolean\ glIsEnabled('u
.BI "GLboolean glIsEnabled(GLenum\ " "cap" ");"
.SH "PARAMETERS"
.PP
\fIcap\fR
.RS 4
Specifies a symbolic constant indicating a GL capability\&.
.RE
.SH "DESCRIPTION"
.PP

\fBglIsEnabled\fR
returns
\fBGL_TRUE\fR
if
\fIcap\fR
is an enabled capability and returns
\fBGL_FALSE\fR
otherwise\&. Initially all capabilities except
\fBGL_DITHER\fR
are disabled;
\fBGL_DITHER\fR
is initially enabled\&.
.PP
The following capabilities are accepted for
\fIcap\fR:
.PP
.TS
allbox tab(:);
lB lB.
T{
\fB
                        Constant
                        \fR
T}:T{
\fB
                        See
                        \fR
T}
.T&
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
\fBGL_BLEND\fR
T}:T{
\fBglBlendFunc\fR(), \fBglLogicOp\fR()
T}
T{
\fBGL_CLIP_DISTANCE\fR\fIi\fR
T}:T{
\fBglEnable\fR()
T}
T{
\fBGL_COLOR_LOGIC_OP\fR
T}:T{
\fBglLogicOp\fR()
T}
T{
\fBGL_CULL_FACE\fR
T}:T{
\fBglCullFace\fR()
T}
T{
\fBGL_DEPTH_CLAMP\fR
T}:T{
\fBglEnable\fR()
T}
T{
\fBGL_DEPTH_TEST\fR
T}:T{
\fBglDepthFunc\fR(), \fBglDepthRange\fR()
T}
T{
\fBGL_DITHER\fR
T}:T{
\fBglEnable\fR()
T}
T{
\fBGL_FRAMEBUFFER_SRGB\fR
T}:T{
\fBglEnable\fR()
T}
T{
\fBGL_LINE_SMOOTH\fR
T}:T{
\fBglLineWidth\fR()
T}
T{
\fBGL_MULTISAMPLE\fR
T}:T{
\fBglSampleCoverage\fR()
T}
T{
\fBGL_POLYGON_SMOOTH\fR
T}:T{
\fBglPolygonMode\fR()
T}
T{
\fBGL_POLYGON_OFFSET_FILL\fR
T}:T{
\fBglPolygonOffset\fR()
T}
T{
\fBGL_POLYGON_OFFSET_LINE\fR
T}:T{
\fBglPolygonOffset\fR()
T}
T{
\fBGL_POLYGON_OFFSET_POINT\fR
T}:T{
\fBglPolygonOffset\fR()
T}
T{
\fBGL_PROGRAM_POINT_SIZE\fR
T}:T{
\fBglEnable\fR()
T}
T{
\fBGL_PRIMITIVE_RESTART\fR
T}:T{
\fBglEnable\fR(), \fBglPrimitiveRestartIndex\fR()
T}
T{
\fBGL_SAMPLE_ALPHA_TO_COVERAGE\fR
T}:T{
\fBglSampleCoverage\fR()
T}
T{
\fBGL_SAMPLE_ALPHA_TO_ONE\fR
T}:T{
\fBglSampleCoverage\fR()
T}
T{
\fBGL_SAMPLE_COVERAGE\fR
T}:T{
\fBglSampleCoverage\fR()
T}
T{
\fBGL_SAMPLE_MASK\fR
T}:T{
\fBglEnable\fR()
T}
T{
\fBGL_SCISSOR_TEST\fR
T}:T{
\fBglScissor\fR()
T}
T{
\fBGL_STENCIL_TEST\fR
T}:T{
\fBglStencilFunc\fR(), \fBglStencilOp\fR()
T}
T{
\fBGL_TEXTURE_CUBEMAP_SEAMLESS\fR
T}:T{
\fBglEnable\fR()
T}
.TE
.sp 1
.PP
.SH "NOTES"
.PP
If an error is generated,
\fBglIsEnabled\fR
returns
\fBGL_FALSE\fR\&.
.SH "ERRORS"
.PP

\fBGL_INVALID_ENUM\fR
is generated if
\fIcap\fR
is not an accepted value\&.
.SH "SEE ALSO"
.PP

\fBglEnable\fR(),
\fBglGet\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
