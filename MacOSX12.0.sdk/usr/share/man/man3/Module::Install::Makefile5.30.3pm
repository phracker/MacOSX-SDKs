.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::Install::Makefile 3"
.TH Module::Install::Makefile 3 "2017-04-04" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::Install::MakeMaker \- Extension Rules for ExtUtils::MakeMaker
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In your \fIMakefile.PL\fR:
.PP
.Vb 2
\&    use inc::Module::Install;
\&    WriteMakefile();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is a wrapper around \fBExtUtils::MakeMaker\fR.  It exports
two functions: \f(CW\*(C`prompt\*(C'\fR (an alias for \f(CW\*(C`ExtUtils::MakeMaker::prompt\*(C'\fR)
and \f(CW\*(C`WriteMakefile\*(C'\fR.
.PP
The \f(CW\*(C`WriteMakefile\*(C'\fR function will pass on keyword/value pair functions
to \f(CW\*(C`ExtUtils::MakeMaker::WriteMakefile\*(C'\fR. The required parameters
\&\f(CW\*(C`NAME\*(C'\fR and \f(CW\*(C`VERSION\*(C'\fR (or \f(CW\*(C`VERSION_FROM\*(C'\fR) are not necessary if
it can find them unambiguously in your code.
.SH "CONFIGURATION OPTIONS"
.IX Header "CONFIGURATION OPTIONS"
This module also adds some Configuration parameters of its own:
.SS "\s-1NAME\s0"
.IX Subsection "NAME"
The \s-1NAME\s0 parameter is required by \fBExtUtils::MakeMaker\fR. If you have a
single module in your distribution, or if the module name indicated by
the current directory exists under \fIlib/\fR, this module will use the
guessed package name as the default.
.PP
If this module can't find a default for \f(CW\*(C`NAME\*(C'\fR it will ask you to specify
it manually.
.SS "\s-1VERSION\s0"
.IX Subsection "VERSION"
\&\fBExtUtils::MakeMaker\fR requires either the \f(CW\*(C`VERSION\*(C'\fR or \f(CW\*(C`VERSION_FROM\*(C'\fR
parameter.  If this module can guess the package's \f(CW\*(C`NAME\*(C'\fR, it will attempt
to parse the \f(CW\*(C`VERSION\*(C'\fR from it.
.PP
If this module can't find a default for \f(CW\*(C`VERSION\*(C'\fR it will ask you to
specify it manually.
.SH "MAKE TARGETS"
.IX Header "MAKE TARGETS"
\&\fBExtUtils::MakeMaker\fR provides you with many useful \f(CW\*(C`make\*(C'\fR targets. A
\&\f(CW\*(C`make\*(C'\fR \fBtarget\fR is the word you specify after \f(CW\*(C`make\*(C'\fR, like \f(CW\*(C`test\*(C'\fR
for \f(CW\*(C`make test\*(C'\fR. Some of the more useful targets are:
.IP "\(bu" 4
all
.Sp
This is the default target. When you type \f(CW\*(C`make\*(C'\fR it is the same as
entering \f(CW\*(C`make all\*(C'\fR. This target builds all of your code and stages it
in the \f(CW\*(C`blib\*(C'\fR directory.
.IP "\(bu" 4
test
.Sp
Run your distribution's test suite.
.IP "\(bu" 4
install
.Sp
Copy the contents of the \f(CW\*(C`blib\*(C'\fR directory into the appropriate
directories in your Perl installation.
.IP "\(bu" 4
dist
.Sp
Create a distribution tarball, ready for uploading to \s-1CPAN\s0 or sharing
with a friend.
.IP "\(bu" 4
clean distclean purge
.Sp
Remove the files created by \f(CW\*(C`perl Makefile.PL\*(C'\fR and \f(CW\*(C`make\*(C'\fR.
.IP "\(bu" 4
help
.Sp
Same as typing \f(CW\*(C`perldoc ExtUtils::MakeMaker\*(C'\fR.
.PP
This module modifies the behaviour of some of these targets, depending
on your requirements, and also adds the following targets to your Makefile:
.IP "\(bu" 4
cpurge
.Sp
Just like purge, except that it also deletes the files originally added
by this module itself.
.IP "\(bu" 4
chelp
.Sp
Short cut for typing \f(CW\*(C`perldoc Module::Install\*(C'\fR.
.IP "\(bu" 4
distsign
.Sp
Short cut for typing \f(CW\*(C`cpansign \-s\*(C'\fR, for \fBModule::Signature\fR users to
sign the distribution before release.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::Install, CPAN::MakeMaker, CPAN::MakeMaker::Philosophy
.SH "AUTHORS"
.IX Header "AUTHORS"
Adam Kennedy <adamk@cpan.org>
.PP
Audrey Tang <autrijus@autrijus.org>
.PP
Brian Ingerson <INGY@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Some parts copyright 2008 \- 2012 Adam Kennedy.
.PP
Copyright 2002, 2003, 2004 Audrey Tang and Brian Ingerson.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
