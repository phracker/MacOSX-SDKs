.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::LDAP::Control::MatchedValues 3"
.TH Net::LDAP::Control::MatchedValues 3 "2015-04-08" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::LDAP::Control::MatchedValues \- LDAPv3 MatchedValues Control
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& use Net::LDAP;
\& use Net::LDAP::Control::MatchedValues;
\&
\& $ldap = Net::LDAP\->new( "ldap.mydomain.eg" );
\&
\& $mv = Net::LDAP::Control::MatchedValues\->new( matchedValues => \*(Aq((sn=Jensen)(sn=Miller))\*(Aq );
\&
\& # return the entries of all people with first name "Babs",
\& # but only show the sn if it is "Jensen" or "Miller"
\& my $mesg = $ldap\->search( base => "o=University of Michigan, c=US",
\&                           filter => "(givenName=Babs)",
\&                           attrs => [ qw/sn/ ],
\&                           control => $mv );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Net::LDAP::Control::MatchedValues\*(C'\fR provides an interface for the creation and
manipulation of objects that represent the \f(CW\*(C`MatchedValues Control\*(C'\fR as described
by \s-1RFC 3876.\s0
.PP
The \f(CW\*(C`MatchedValues Control\*(C'\fR, which only has a meaning with the \f(CW\*(C`Search\*(C'\fR operation,
allows the client to specify criteria that restrict the values of attributes returned.
It has no effect on the number of objects found, but only allows one to restrict the
values of the attributes returned by the search to those matching the criteria.
.SH "CONSTRUCTOR ARGUMENTS"
.IX Header "CONSTRUCTOR ARGUMENTS"
In addition to the constructor arguments described in
Net::LDAP::Control the following are provided.
.IP "matchedValues => \s-1VALUESRETURNFILTER\s0" 4
.IX Item "matchedValues => VALUESRETURNFILTER"
A filter giving the criteria which attribute values shall be returned.
.Sp
\&\s-1VALUESRETURNFILTER\s0 is a sequence of simple filter items of the form
\&\f(CW\*(C`( <ATTRSPEC> <OP> <VALUE> )\*(C'\fR surrounded by an additional set of parentheses;
e.g.
.RS 4
.IP "((personsAge<=29))" 4
.IX Item "((personsAge<=29))"
Only return the age if is less than 30 ;\-)
.IP "((cn=*Emergency*)(telephoneNumber=+1*)(telephoneNumber=911))" 4
.IX Item "((cn=*Emergency*)(telephoneNumber=+1*)(telephoneNumber=911))"
Only return those values of the cn that contain \f(CW\*(C`Emergency\*(C'\fR,
and phone numbers from North America including the one for emergency calls.
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
As with Net::LDAP::Control each constructor argument
described above is also available as a method on the object which will
return the current value for the attribute if called without an argument,
and set a new value for the attribute if called with an argument.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Net::LDAP,
Net::LDAP::Control,
http://www.ietf.org/rfc/rfc3876.txt
.SH "AUTHOR"
.IX Header "AUTHOR"
Peter Marschall <peter@adpm.de>
.PP
Please report any bugs, or post any suggestions, to the perl-ldap mailing list
<perl\-ldap@perl.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2011 Peter Marschall. All rights reserved. This program is
free software; you can redistribute it and/or modify it under the same
terms as Perl itself.
