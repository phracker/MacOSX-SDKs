'\" t
.\"     Title: glDrawBuffers
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLDRAWBUFFERS" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDrawBuffers \- Specifies a list of color buffers to be drawn into
.SH "C SPECIFICATION"
.HP \w'void\ glDrawBuffers('u
.BI "void glDrawBuffers(GLsizei\ " "n" ", const\ GLenum\ *" "bufs" ");"
.SH "PARAMETERS"
.PP
\fIn\fR
.RS 4
Specifies the number of buffers in
\fIbufs\fR\&.
.RE
.PP
\fIbufs\fR
.RS 4
Points to an array of symbolic constants specifying the buffers into which fragment colors or data values will be written\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglDrawBuffers\fR
defines an array of buffers into which outputs from the fragment shader data will be written\&. If a fragment shader writes a value to one or more user defined output variables, then the value of each variable will be written into the buffer specified at a location within
\fIbufs\fR
corresponding to the location assigned to that user defined output\&. The draw buffer used for user defined outputs assigned to locations greater than or equal to
\fIn\fR
is implicitly set to
\fBGL_NONE\fR
and any data written to such an output is discarded\&.
.PP
The symbolic constants contained in
\fIbufs\fR
may be any of the following:
.PP
\fBGL_NONE\fR
.RS 4
The fragment shader output value is not written into any color buffer\&.
.RE
.PP
\fBGL_FRONT_LEFT\fR
.RS 4
The fragment shader output value is written into the front left color buffer\&.
.RE
.PP
\fBGL_FRONT_RIGHT\fR
.RS 4
The fragment shader output value is written into the front right color buffer\&.
.RE
.PP
\fBGL_BACK_LEFT\fR
.RS 4
The fragment shader output value is written into the back left color buffer\&.
.RE
.PP
\fBGL_BACK_RIGHT\fR
.RS 4
The fragment shader output value is written into the back right color buffer\&.
.RE
.PP
\fBGL_COLOR_ATTACHMENT\fR\fB\fIn\fR\fR
.RS 4
The fragment shader output value is written into the
\fIn\fRth color attachment of the current framebuffer\&.
\fIn\fR
may range from 0 to the value of
\fBGL_MAX_COLOR_ATTACHMENTS\fR\&.
.RE
.PP
Except for
\fBGL_NONE\fR, the preceding symbolic constants may not appear more than once in
\fIbufs\fR\&. The maximum number of draw buffers supported is implementation dependent and can be queried by calling
\fBglGet\fR()
with the argument
\fBGL_MAX_DRAW_BUFFERS\fR\&.
.SH "NOTES"
.PP
The symbolic constants
\fBGL_FRONT\fR,
\fBGL_BACK\fR,
\fBGL_LEFT\fR,
\fBGL_RIGHT\fR, and
\fBGL_FRONT_AND_BACK\fR
are not allowed in the
\fIbufs\fR
array since they may refer to multiple buffers\&.
.PP
If a fragment shader does not write to a user defined output variable, the values of the fragment colors following shader execution are undefined\&. For each fragment generated in this situation, a different value may be written into each of the buffers specified by
\fIbufs\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if one of the values in
\fIbufs\fR
is not an accepted value\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if the GL is bound to the default framebuffer and one or more of the values in
\fIbufs\fR
is one of the
\fBGL_COLOR_ATTACHMENT\fR\fB\fIn\fR\fR
tokens\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if the GL is bound to a framebuffer object and one or more of the values in
\fIbufs\fR
is anything other than
\fBGL_NONE\fR
or one of the
\fBGL_COLOR_ATTACHMENTS\fR\fB\fIn\fR\fR
tokens\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIn\fR
is less than 0\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a symbolic constant other than
\fBGL_NONE\fR
appears more than once in
\fIbufs\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if any of the entries in
\fIbufs\fR
(other than
\fBGL_NONE\fR
) indicates a color buffer that does not exist in the current GL context\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIn\fR
is greater than
\fBGL_MAX_DRAW_BUFFERS\fR\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_DRAW_BUFFERS\fR
.PP
\fBglGet\fR()
with argument
\fBGL_DRAW_BUFFER\fR\fB\fIi\fR\fR
where
\fIi\fR
indicates the number of the draw buffer whose value is to be queried
.SH "SEE ALSO"
.PP

\fBglBlendFunc\fR(),
\fBglColorMask\fR(),
\fBglDrawBuffers\fR(),
\fBglLogicOp\fR(),
\fBglReadBuffer\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2005 3Dlabs Inc\&. Ltd\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
