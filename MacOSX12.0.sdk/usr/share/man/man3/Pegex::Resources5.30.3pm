.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Pegex::Resources 3"
.TH Pegex::Resources 3 "2020-02-13" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Pegex Resources"
.IX Header "Pegex Resources"
The best way to learn about Pegex, is to look at projects that
currently use it.
.PP
This document attempts to name as many interesting Pegex things as possible.
.SS "\s-1IRC\s0 Channel"
.IX Subsection "IRC Channel"
Many of the people who are actively developing Pegex, hangout on the \f(CW\*(C`#pegex\*(C'\fR
\&\s-1IRC\s0 channel on \f(CW\*(C`irc.freenode.net\*(C'\fR. Stop by. We'd love to chat with you!
.PP
Note, if you are unfamiliar with \s-1IRC,\s0 there's a really simple way to get
started. Simply click this link: <http://webchat.freenode.net/>. Then, Just
enter a nickname, enter '#pegex' for the channel, and enter the captcha. You
will be connected and you type stuff in the input box at the bottom of the
screen. After you type something, hit the Enter key, and your text will be
sent. Try it!
.SS "The examples Directory"
.IX Subsection "The examples Directory"
The Pegex git\-repository/code\-base is here:
<https://github.com/ingydotnet/pegex\-pm>.
It contains a directory of example parsers:
.ie n .IP """calculator1.pl""" 4
.el .IP "\f(CWcalculator1.pl\fR" 4
.IX Item "calculator1.pl"
This an arithmetic expression parser and evaluator. It uses the precedence
climbing method to deal with operator precedence.
.ie n .IP """calculator2.pl""" 4
.el .IP "\f(CWcalculator2.pl\fR" 4
.IX Item "calculator2.pl"
This is the same as above, except it uses a precedence table, and the shunting
yard algorithm, to handle precedence.
.SS "Pegex Grammar Repositories"
.IX Subsection "Pegex Grammar Repositories"
.IP "\(bu" 4
The Pegex Grammar <https://github.com/ingydotnet/pegex-pgx>
.IP "\(bu" 4
The TestML Grammar <https://github.com/ingydotnet/testml-pgx>
.IP "\(bu" 4
A \s-1JSON\s0 Grammar <https://github.com/ingydotnet/json-pgx>
.IP "\(bu" 4
A CronTab Grammar <https://github.com/ingydotnet/crontab-pgx>
.SS "Module Repositories"
.IX Subsection "Module Repositories"
.IP "\(bu" 4
The Pegex Perl Module <https://github.com/ingydotnet/pegex-pm>
.IP "\(bu" 4
The TestML Perl Module <https://github.com/ingydotnet/testml-pm>
.IP "\(bu" 4
Pegex \s-1JSON\s0 Parser for Perl <https://github.com/ingydotnet/pegex-json-pm>
.IP "\(bu" 4
A \s-1JSONY\s0 Decoder Perl Module <https://github.com/ingydotnet/json-pgx>
.IP "\(bu" 4
A CronTab Parser Perl Module <https://github.com/ingydotnet/pegex-crontab-pm>
