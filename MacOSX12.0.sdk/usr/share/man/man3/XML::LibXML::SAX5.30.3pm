.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XML::LibXML::SAX 3"
.TH XML::LibXML::SAX 3 "2014-02-01" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
XML::LibXML::SAX \- XML::LibXML direct SAX parser
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
XML::LibXML provides an interface to libxml2 direct \s-1SAX\s0 interface. Through this
interface it is possible to generate \s-1SAX\s0 events directly while parsing a
document. While using the \s-1SAX\s0 parser XML::LibXML will not create a \s-1DOM\s0 Document
tree.
.PP
Such an interface is useful if very large \s-1XML\s0 documents have to be processed
and no \s-1DOM\s0 functions are required. By using this interface it is possible to
read data stored within an \s-1XML\s0 document directly into the application data
structures without loading the document into memory.
.PP
The \s-1SAX\s0 interface of XML::LibXML is based on the famous \s-1XML::SAX\s0 interface. It
uses the generic interface as provided by XML::SAX::Base.
.PP
Additionally to the generic functions, which are only able to process entire
documents, XML::LibXML::SAX provides \fI\f(BIparse_chunk()\fI\fR. This method generates \s-1SAX\s0 events from well balanced data such as is often
provided by databases.
.SH "FEATURES"
.IX Header "FEATURES"
\&\fI\s-1NOTE:\s0\fR This feature is experimental.
.PP
You can enable character data joining which may yield a significant speed boost
in your \s-1XML\s0 processing in lower markup ratio situations by enabling the
http://xmlns.perl.org/sax/join\-character\-data feature of this parser. This is
done via the set_feature method like this:
.PP
.Vb 1
\&  $p\->set_feature(\*(Aqhttp://xmlns.perl.org/sax/join\-character\-data\*(Aq, 1);
.Ve
.PP
You can also specify a 0 to disable. The default is to have this feature
disabled.
.SH "AUTHORS"
.IX Header "AUTHORS"
Matt Sergeant,
Christian Glahn,
Petr Pajas
.SH "VERSION"
.IX Header "VERSION"
2.0110
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
2001\-2007, AxKit.com Ltd.
.PP
2002\-2006, Christian Glahn.
.PP
2006\-2009, Petr Pajas.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
