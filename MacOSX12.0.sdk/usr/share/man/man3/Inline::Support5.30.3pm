.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Inline::Support 3"
.TH Inline::Support 3 "2020-01-09" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Inline\-Support \- Support Information for Inline.pm and related modules.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document contains all of the latest support information for \f(CW\*(C`Inline.pm\*(C'\fR
and the recognized Inline Language Support Modules (ILSMs) available on \s-1CPAN.\s0
.SH "SUPPORTED LANGUAGES"
.IX Header "SUPPORTED LANGUAGES"
The most important language that Inline supports is \f(CW\*(C`C\*(C'\fR. That is because Perl
itself is written in \f(CW\*(C`C\*(C'\fR. By giving a your Perl scripts access to \f(CW\*(C`C\*(C'\fR, you
in effect give them access to the entire glorious internals of Perl. (Caveat
scriptor :\-)
.PP
As of this writing, Inline also supports:
.IP "\(bu" 4
\&\*(C+
.IP "\(bu" 4
Java
.IP "\(bu" 4
Python
.IP "\(bu" 4
Tcl
.IP "\(bu" 4
Assembly
.IP "\(bu" 4
\&\s-1CPR\s0
.IP "\(bu" 4
And even Inline::Foo! :)
.PP
Projects that I would most like to see happen in the year 2001 are:
.IP "\(bu" 4
Fortran
.IP "\(bu" 4
Ruby
.IP "\(bu" 4
Lisp
.IP "\(bu" 4
Guile
.IP "\(bu" 4
Bash
.IP "\(bu" 4
Perl4
.SH "SUPPORTED PLATFORMS"
.IX Header "SUPPORTED PLATFORMS"
\&\f(CW\*(C`Inline::C\*(C'\fR should work anywhere that \s-1CPAN\s0 extension modules (those that use
\&\s-1XS\s0) can be installed, using the typical install format of:
.PP
.Vb 4
\&    perl Makefile.PL
\&    make
\&    make test
\&    make install
.Ve
.PP
It has been tested on many Unix and Windows variants.
.PP
\&\fB\s-1NOTE\s0\fR: \f(CW\*(C`Inline::C\*(C'\fR requires Perl 5.005 or higher because
\&\f(CW\*(C`Parse::RecDescent\*(C'\fR requires it. (Something to do with the \f(CW\*(C`qr\*(C'\fR operator)
.PP
Inline has been successfully tested at one time or another on the following
platforms:
.IP "\(bu" 4
Linux
.IP "\(bu" 4
Solaris
.IP "\(bu" 4
SunOS
.IP "\(bu" 4
\&\s-1HPUX\s0
.IP "\(bu" 4
\&\s-1AIX\s0
.IP "\(bu" 4
FreeBSD
.IP "\(bu" 4
OpenBSD
.IP "\(bu" 4
BeOS
.IP "\(bu" 4
\&\s-1OS X\s0
.IP "\(bu" 4
WinNT
.IP "\(bu" 4
Win2K
.IP "\(bu" 4
WinME
.IP "\(bu" 4
Win98
.IP "\(bu" 4
Cygwin
.PP
The Microsoft tests deserve a little more explanation. I used the following:
.IP "\(bu" 4
Windows \s-1NT 4.0\s0 (service pack 6)
.IP "\(bu" 4
Perl 5.005_03 (ActiveState build 522)
.IP "\(bu" 4
\&\s-1MS\s0 Visual \*(C+ 6.0
.IP "\(bu" 4
The \*(L"nmake\*(R" make utility (distributed w/ Visual \*(C+)
.PP
\&\f(CW\*(C`Inline::C\*(C'\fR pulls all of its base configuration (including which \f(CW\*(C`make\*(C'\fR
utility to use) from \f(CW\*(C`Config.pm\*(C'\fR. Since your MSWin32 version of Perl probably
came from ActiveState (as a binary distribution) the \f(CW\*(C`Config.pm\*(C'\fR will
indicate that \f(CW\*(C`nmake\*(C'\fR is the system's \f(CW\*(C`make\*(C'\fR utility. That is because
ActiveState uses Visual \*(C+ to compile Perl.
.PP
To install \f(CW\*(C`Inline.pm\*(C'\fR (or any other \s-1CPAN\s0 module) on MSWin32 w/ Visual \*(C+,
use these:
.PP
.Vb 4
\&    perl Makefile.PL
\&    nmake
\&    nmake test
\&    nmake install
.Ve
.PP
Inline has also been made to work with Mingw32/gcc on all Windows platforms.
This is a free compiler for Windows. You must also use a perl built with
that compiler.
.PP
The \*(L"Cygwin\*(R" test was done on a Windows 98 machine using the Cygwin Unix/Win32
porting layer software from Cygnus. The \f(CW\*(C`perl\*(C'\fR binary on this machine was
also compiled using the Cygwin tool set (\f(CW\*(C`gcc\*(C'\fR). This software is freely
available from <http://sources.redhat.com/cygwin/>
.PP
If you get Inline to work on a new platform, please send me email email. If it
doesn't work, let me know as well and I'll see what can be done.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
For general information about Inline see Inline.
.PP
For information about using Inline with C see Inline::C.
.PP
For sample programs using Inline with C see Inline::C\-Cookbook.
.PP
For information on writing your own Inline Language Support Module, see
Inline-API.
.PP
Inline's mailing list is inline@perl.org
.PP
To subscribe, send email to inline\-subscribe@perl.org
.SH "AUTHOR"
.IX Header "AUTHOR"
ingy döt Net <ingy@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2000\-2019. Ingy döt Net.
.PP
Copyright 2008, 2010, 2011. Sisyphus.
.PP
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
