.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::Install::Share 3"
.TH Module::Install::Share 3 "2017-04-04" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::Install::Share \- Install non\-code files for use during run\-time
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    # Put everything inside ./share/ into the distribution \*(Aqauto\*(Aq path
\&    install_share \*(Aqshare\*(Aq;
\&
\&    # Same thing as above using the default directory name
\&    install_share;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
As well as Perl modules and Perl binary applications, some distributions
need to install read-only data files to a location on the file system
for use at run-time.
.PP
\&\s-1XML\s0 Schemas, \s-1YAML\s0 data files, and SQLite databases are examples of
the sort of things distributions might typically need to have available
after installation.
.PP
\&\f(CW\*(C`Module::Install::Share\*(C'\fR is a Module::Install extension that provides
commands to allow these files to be installed to the applicable location
on disk.
.PP
To locate the files after installation so they can be used inside your
module, see this extension's companion module File::ShareDir.
.SH "TO DO"
.IX Header "TO DO"
Currently \f(CW\*(C`install_share\*(C'\fR installs not only the files you want, but
if called by the author will also copy \fI.svn\fR and other source-control
directories, and other junk.
.PP
Enhance this to copy only files under \fIshare\fR that are in the
\&\fI\s-1MANIFEST\s0\fR, or possibly those not in \fI\s-1MANIFEST.SKIP\s0\fR.
.SH "AUTHORS"
.IX Header "AUTHORS"
Audrey Tang <autrijus@autrijus.org>
.PP
Adam Kennedy <adamk@cpan.org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::Install, File::ShareDir
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2006 Audrey Tang, Adam Kennedy.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
