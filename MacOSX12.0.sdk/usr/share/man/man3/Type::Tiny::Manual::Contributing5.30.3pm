.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Type::Tiny::Manual::Contributing 3"
.TH Type::Tiny::Manual::Contributing 3 "2020-10-28" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Type::Tiny::Manual::Contributing \- contributing to Type::Tiny development.
.SH "MANUAL"
.IX Header "MANUAL"
.SS "Reporting bugs"
.IX Subsection "Reporting bugs"
Bug reports (including wishlist items) can be submitted to \s-1RT.\s0
.PP
<https://rt.cpan.org/Dist/Display.html?Queue=Type\-Tiny>.
.PP
Test cases written using Test::More are always appreciated.
.SS "Fixing bugs"
.IX Subsection "Fixing bugs"
If something doesn't work as documented, or causes unexpected crashes,
and you know how to fix it, then either attach a patch to the bug report
(see above) or as a pull request to the project on GitHub.
.PP
<https://github.com/tobyink/p5\-type\-tiny>.
.PP
Please try to follow the coding style used in the rest of the project.
(Tab indents, spaces for alignment, British English spellings, pod at
the end of code but the start of test cases, etc.)
.SS "Adding Test Cases"
.IX Subsection "Adding Test Cases"
New test cases for the Type::Tiny test suite are always welcome.
The coveralls page for Type::Tiny should reveal what parts of the
code are most needing good test cases. Any files with below 95%
coverage are highest priority.
.PP
<https://coveralls.io/github/tobyink/p5\-type\-tiny>.
.PP
Type::Tiny is now also on Codecov which does coverage accounting
slightly differently, giving some stricter targets to aim for.
.PP
<https://codecov.io/gh/tobyink/p5\-type\-tiny>
.SS "Type::Tiny::XS"
.IX Subsection "Type::Tiny::XS"
I'm not really a C programmer, nor am I that familiar with Perl's internals,
so help with Type::Tiny::XS is always appreciated. There are some type
constraints in Types::Standard, Types::Common::String, and
Types::Common::Numeric which don't have \s-1XS\s0 implementations.
.SS "Writing Type Libraries"
.IX Subsection "Writing Type Libraries"
Though I'm unlikely to bundle many more type libraries in this distribution,
uploading your own type libraries to \s-1CPAN\s0 will strengthen the Type::Tiny
ecosystem.
.SS "Donate"
.IX Subsection "Donate"
If you or your organization uses Type::Tiny and you wish to contribute
financially, you should be able to find links to donate on the Type::Tiny
website at <https://typetiny.toby.ink/>.
.PP
Please note that I am not suggesting that you must do this in order for me
to continue working on Type::Tiny and related modules.
.SH "NEXT STEPS"
.IX Header "NEXT STEPS"
You've reached the end of the manual!
.PP
But each class, type library, and other package includes more detailed
documentation.
.SH "AUTHOR"
.IX Header "AUTHOR"
Toby Inkster <tobyink@cpan.org>.
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2013\-2014, 2017\-2020 by Toby Inkster.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "DISCLAIMER OF WARRANTIES"
.IX Header "DISCLAIMER OF WARRANTIES"
\&\s-1THIS PACKAGE IS PROVIDED \*(L"AS IS\*(R" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.\s0
