.TH "MPSNNBinaryArithmeticNode" 3 "Mon Jul 9 2018" "Version MetalPerformanceShaders-119.3" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSNNBinaryArithmeticNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNGraphNodes\&.h>\fP
.PP
Inherits \fBMPSNNFilterNode\fP\&.
.PP
Inherited by \fBMPSNNAdditionNode\fP, \fBMPSNNDivisionNode\fP, \fBMPSNNMultiplicationNode\fP, and \fBMPSNNSubtractionNode\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSources:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithLeftSource:rightSource:\fP"
.br
.ti -1c
.RI "(nonnull Class) \- \fBgradientClass\fP"
.br
.ti -1c
.RI "(\fBMPSNNGradientFilterNode\fP *__nonnull) \- \fBgradientFilterWithSources:\fP"
.br
.ti -1c
.RI "(NSArray< \fBMPSNNGradientFilterNode\fP * > *__nonnull) \- \fBgradientFiltersWithSources:\fP"
.br
.in -1c
.SS "Class Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSources:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithLeftSource:rightSource:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "float \fBprimaryScale\fP"
.br
.ti -1c
.RI "float \fBsecondaryScale\fP"
.br
.ti -1c
.RI "float \fBbias\fP"
.br
.ti -1c
.RI "NSUInteger \fBprimaryStrideInPixelsX\fP"
.br
.ti -1c
.RI "NSUInteger \fBprimaryStrideInPixelsY\fP"
.br
.ti -1c
.RI "NSUInteger \fBprimaryStrideInFeatureChannels\fP"
.br
.ti -1c
.RI "NSUInteger \fBsecondaryStrideInPixelsX\fP"
.br
.ti -1c
.RI "NSUInteger \fBsecondaryStrideInPixelsY\fP"
.br
.ti -1c
.RI "NSUInteger \fBsecondaryStrideInFeatureChannels\fP"
.br
.ti -1c
.RI "float \fBminimumValue\fP"
.br
.ti -1c
.RI "float \fBmaximumValue\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
virtual base class for basic arithmetic nodes 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull Class) gradientClass "

.SS "\- (NSArray <\fBMPSNNGradientFilterNode\fP*> * __nonnull) gradientFiltersWithSources: (NSArray< \fBMPSNNImageNode\fP * > *__nonnull) gradientImages"
create new arithmetic gradient nodes  Create two new arithmetic gradient nodes - one that computes the gradient for the primary source image and one that computes the gradient for the secondary sourcefrom the inference pass\&. 
.PP
Reimplemented from \fBMPSNNFilterNode\fP\&.
.SS "\- (\fBMPSNNGradientFilterNode\fP*__nonnull) gradientFilterWithSources: (NSArray< \fBMPSNNImageNode\fP * > *__nonnull) gradientImages"
Return the gradient (backwards) version of this filter\&.  The backwards training version of the filter will be returned\&. The non-gradient image and state arguments for the filter are automatically obtained from the target\&. 
.PP
\fBParameters:\fP
.RS 4
\fIgradientImages\fP The gradient images corresponding with the resultImage of the target 
.RE
.PP

.PP
Reimplemented from \fBMPSNNFilterNode\fP\&.
.SS "\- (nonnull instancetype) initWithLeftSource: (\fBMPSNNImageNode\fP *__nonnull) left(\fBMPSNNImageNode\fP *__nonnull) right"
init an arithemtic node with two sources 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP the left operand 
.br
\fIright\fP the right operand 
.RE
.PP

.SS "\- (nonnull instancetype) initWithSources: (NSArray< \fBMPSNNImageNode\fP * > *__nonnull) sourceNodes"
init an arithemtic node with an array of sources 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNodes\fP \fBA\fP valid NSArray containing two sources 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithLeftSource: (\fBMPSNNImageNode\fP *__nonnull) left(\fBMPSNNImageNode\fP *__nonnull) right"
create an autoreleased arithemtic node with two sources 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP the left operand 
.br
\fIright\fP the right operand 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithSources: (NSArray< \fBMPSNNImageNode\fP * > *__nonnull) sourceNodes"
create an autoreleased arithemtic node with an array of sources 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNodes\fP \fBA\fP valid NSArray containing two sources 
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "\- (float) bias\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) maximumValue\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) minimumValue\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) primaryScale\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) primaryStrideInFeatureChannels\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) primaryStrideInPixelsX\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) primaryStrideInPixelsY\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (float) secondaryScale\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) secondaryStrideInFeatureChannels\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) secondaryStrideInPixelsX\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"

.SS "\- (NSUInteger) secondaryStrideInPixelsY\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
