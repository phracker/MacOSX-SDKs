.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Authen::SASL::Perl 3"
.TH Authen::SASL::Perl 3 "2010-03-11" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Authen::SASL::Perl \-\- Perl implementation of the SASL Authentication framework
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use Authen::SASL qw(Perl);
\&
\& $sasl = Authen::SASL\->new(
\&   mechanism => \*(AqCRAM\-MD5 PLAIN ANONYMOUS\*(Aq,
\&   callback => {
\&     user => $user,
\&     pass => \e&fetch_password
\&   }
\& );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBAuthen::SASL::Perl\fR is the pure Perl implementation of \s-1SASL\s0 mechanisms
in the \fBAuthen::SASL\fR framework.
.PP
At the time of this writing it provides the client part implementation
for the following \s-1SASL\s0 mechanisms:
.IP "\s-1ANONYMOUS\s0" 4
.IX Item "ANONYMOUS"
The Anonymous \s-1SASL\s0 Mechanism as defined in \s-1RFC 2245\s0 resp. 
in \s-1IETF\s0 Draft draft\-ietf\-sasl\-anon\-03.txt from February 2004
provides a method to anonymously access internet services.
.Sp
Since it does no authentication it does not need to send 
any confidential information such as passwords in plain text
over the network.
.IP "\s-1CRAM\-MD5\s0" 4
.IX Item "CRAM-MD5"
The \s-1CRAM\-MD5 SASL\s0 Mechanism as defined in \s-1RFC2195\s0 resp.
in \s-1IETF\s0 Draft draft\-ietf\-sasl\-crammd5\-XX.txt
offers a simple challenge-response authentication mechanism.
.Sp
Since it is a challenge-response authentication mechanism
no passwords are transferred in clear-text over the wire.
.Sp
Due to the simplicity of the protocol \s-1CRAM\-MD5\s0 is susceptible
to replay and dictionary attacks, so \s-1DIGEST\-MD5\s0 should be used
in preferrence.
.IP "\s-1DIGEST\-MD5\s0" 4
.IX Item "DIGEST-MD5"
The \s-1DIGEST\-MD5 SASL\s0 Mechanism as defined in \s-1RFC 2831\s0 resp.
in \s-1IETF\s0 Draft draft\-ietf\-sasl\-rfc2831bis\-XX.txt
offers the \s-1HTTP\s0 Digest Access Authentication as \s-1SASL\s0 mechanism.
.Sp
Like \s-1CRAM\-MD5\s0 it is a challenge-response authentication
method that does not send plain text passwords over the network.
.Sp
Compared to \s-1CRAM\-MD5, DIGEST\-MD5\s0 prevents chosen plaintext
attacks, and permits the use of third party authentication servers,
so that it is recommended to use \s-1DIGEST\-MD5\s0 instead of \s-1CRAM\-MD5\s0
when possible.
.IP "\s-1EXTERNAL\s0" 4
.IX Item "EXTERNAL"
The \s-1EXTERNAL SASL\s0 mechanism as defined in \s-1RFC 2222\s0
allows the use of external authentication systems as \s-1SASL\s0 mechanisms.
.IP "\s-1GSSAPI\s0" 4
.IX Item "GSSAPI"
The \s-1GSSAPI SASL\s0 mechanism as defined in \s-1RFC 2222\s0 resp. \s-1IETF\s0 Draft
draft\-ietf\-sasl\-gssapi\-XX.txt allows using the Generic Security Service
Application Program Interface [\s-1GSSAPI\s0] \s-1KERBEROS V5\s0 as as \s-1SASL\s0 mechanism.
.Sp
Although \s-1GSSAPI\s0 is a general mechanism for authentication it is almost
exlusively used for Kerberos 5.
.IP "\s-1LOGIN\s0" 4
.IX Item "LOGIN"
The \s-1LOGIN SASL\s0 Mechanism as defined in \s-1IETF\s0 Draft
draft\-murchison\-sasl\-login\-XX.txt allows  the
combination of username and clear-text password to be used
in a \s-1SASL\s0 mechanism.
.Sp
It does does not provide a security layer and sends the credentials
in clear over the wire.
Thus this mechanism should not be used without adequate security
protection.
.IP "\s-1PLAIN\s0" 4
.IX Item "PLAIN"
The Plain \s-1SASL\s0 Mechanism as defined in \s-1RFC 2595\s0 resp. \s-1IETF\s0 Draft
draft\-ietf\-sasl\-plain\-XX.txt is another \s-1SASL\s0 mechanism that allows
username and clear-text password combinations in \s-1SASL\s0 environments.
.Sp
Like \s-1LOGIN\s0 it sends the credentials in clear over the network
and should not be used without sufficient security protection.
.PP
As for server support, only \fI\s-1PLAIN\s0\fR, \fI\s-1LOGIN\s0\fR and \fI\s-1DIGEST\-MD5\s0\fR are supported
at the time of this writing.
.PP
\&\f(CW\*(C`server_new\*(C'\fR \s-1OPTIONS\s0 is a hashref that is only relevant for \fI\s-1DIGEST\-MD5\s0\fR for
now and it supports the following options:
.IP "\- no_integrity" 4
.IX Item "- no_integrity"
.PD 0
.IP "\- no_confidentiality" 4
.IX Item "- no_confidentiality"
.PD
.PP
which configures how the security layers are negotiated with the client (or
rather imposed to the client).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Authen::SASL,
Authen::SASL::Perl::ANONYMOUS,
Authen::SASL::Perl::CRAM_MD5,
Authen::SASL::Perl::DIGEST_MD5,
Authen::SASL::Perl::EXTERNAL,
Authen::SASL::Perl::GSSAPI,
Authen::SASL::Perl::LOGIN,
Authen::SASL::Perl::PLAIN
.SH "AUTHOR"
.IX Header "AUTHOR"
Peter Marschall <peter@adpm.de>
.PP
Please report any bugs, or post any suggestions, to the perl-ldap mailing list
<perl\-ldap@perl.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2004\-2006 Peter Marschall.
All rights reserved. This document is distributed, and may be redistributed,
under the same terms as Perl itself.
