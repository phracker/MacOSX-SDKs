.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Geography::Countries 3"
.TH Geography::Countries 3 "2009-04-13" "perl v5.30.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Geography::Countries \- 2\-letter, 3\-letter, and numerical codes for countries.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Geography::Countries;
\&
\&    $country = country \*(AqDE\*(Aq;  # \*(AqGermany\*(Aq
\&    @list    = country  666;  # (\*(AqPM\*(Aq, \*(AqSPM\*(Aq, 666,
\&                              #  \*(AqSaint Pierre and Miquelon\*(Aq, 1)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module maps country names, and their 2\-letter, 3\-letter and
numerical codes, as defined by the \s-1ISO\-3166\s0 maintenance agency [1],
and defined by the \s-1UNSD.\s0
.ie n .SS "The ""country"" subroutine."
.el .SS "The \f(CWcountry\fP subroutine."
.IX Subsection "The country subroutine."
This subroutine is exported by default. It takes a 2\-letter, 3\-letter or
numerical code, or a country name as argument. In scalar context, it will
return the country name, in list context, it will return a list consisting
of the 2\-letter code, the 3\-letter code, the numerical code, the country
name, and a flag, which is explained below. Note that not all countries
have all 3 codes; if a code is unknown, the undefined value is returned.
.PP
There are 3 categories of countries. The largest category are the 
current countries. Then there is a small set of countries that no
longer exist. The final set consists of areas consisting of multiple
countries, like \fIAfrica\fR. No 2\-letter or 3\-letter codes are available
for the second two sets. (\s-1ISO 3166\-3\s0 [3] defines 4 letter codes for the
set of countries that no longer exist, but the author of this module
was unable to get her hands on that standard.) By default, \f(CW\*(C`country\*(C'\fR
only returns countries from the first set, but this can be changed
by giving \f(CW\*(C`country\*(C'\fR an optional second argument.
.PP
The module optionally exports the constants \f(CW\*(C`CNT_F_REGULAR\*(C'\fR,
\&\f(CW\*(C`CNT_F_OLD\*(C'\fR, \f(CW\*(C`CNT_F_REGION\*(C'\fR and \f(CW\*(C`CNT_F_ANY\*(C'\fR. These constants can also
be important all at once by using the tag \f(CW\*(C`:FLAGS\*(C'\fR. \f(CW\*(C`CNT_F_ANY\*(C'\fR is just
the binary or of the three other flags. The second argument of \f(CW\*(C`country\*(C'\fR
should be the binary or of a subset of the flags \f(CW\*(C`CNT_F_REGULAR\*(C'\fR,
\&\f(CW\*(C`CNT_F_OLD\*(C'\fR, and \f(CW\*(C`CNT_F_REGION\*(C'\fR \- if no, or a false, second argument is
given, \f(CW\*(C`CNT_F_REGULAR\*(C'\fR is assumed. If \f(CW\*(C`CNT_F_REGULAR\*(C'\fR is set, regular
(current) countries will be returned; if \f(CW\*(C`CNT_F_OLD\*(C'\fR is set, old,
no longer existing, countries will be returned, while \f(CW\*(C`CNT_F_REGION\*(C'\fR
is used in case a region (not necessarely) a country might be returned.
If \f(CW\*(C`country\*(C'\fR is used in list context, the fifth returned element is
one of \f(CW\*(C`CNT_F_REGULAR\*(C'\fR, \f(CW\*(C`CNT_F_OLD\*(C'\fR and \f(CW\*(C`CNT_F_REGION\*(C'\fR, indicating
whether the result is a regular country, an old country, or a region.
.PP
In list context, \f(CW\*(C`country\*(C'\fR returns a 5 element list. To avoid having
to remember which element is in which index, the constants \f(CW\*(C`CNT_I_CODE2\*(C'\fR,
\&\f(CW\*(C`CNT_I_CODE3\*(C'\fR, \f(CW\*(C`CNT_I_NUMCODE\*(C'\fR, \f(CW\*(C`CNT_I_COUNTRY\*(C'\fR and \f(CW\*(C`CNT_I_FLAG\*(C'\fR
can be imported. Those constants contain the indices of the 2\-letter code,
the 3\-letter code, the numerical code, the country, and the flag explained
above, respectively. All index constants can be imported by using the
\&\f(CW\*(C`:INDICES\*(C'\fR tag.
.ie n .SS "The ""code2"", ""code3"", ""numcode"" and ""countries"" routines."
.el .SS "The \f(CWcode2\fP, \f(CWcode3\fP, \f(CWnumcode\fP and \f(CWcountries\fP routines."
.IX Subsection "The code2, code3, numcode and countries routines."
All known 2\-letter codes, 3\-letter codes, numerical codes and country
names can be returned by the routines \f(CW\*(C`code2\*(C'\fR, \f(CW\*(C`code3\*(C'\fR, \f(CW\*(C`numcode\*(C'\fR and
\&\f(CW\*(C`countries\*(C'\fR. None of these methods is exported by default; all need to
be imported if one wants to use them. The tag \f(CW\*(C`:LISTS\*(C'\fR imports them 
all. In scalar context, the number of known codes or countries is returned.
.SH "REFERENCES"
.IX Header "REFERENCES"
The 2\-letter codes come from the \s-1ISO 3166\-1:1997\s0 standard [2]. \s-1ISO 3166\s0
bases its list of country names on the list of names published by
the United Nations. This list is published by the Statistical Division
of the United Nations [4]. The \s-1UNSD\s0 uses 3\-letter codes, and numerical
codes [5]. The information about old countries [6] and regions [7] also
comes from the United Nations.
.PP
In a few cases, there was a conflict between the way how the United 
Nations spelled a name, and how \s-1ISO 3166\s0 spells it. In most cases,
is was word order (for instance whether \fIThe republic of\fR should
preceed the name, or come after the name. A few cases had minor
spelling variations. In all such cases, the method in which the \s-1UN\s0
spelled the name was choosen; \s-1ISO 3166\s0 claims to take the names from
the \s-1UN,\s0 so we consider the \s-1UN\s0 authoritative.
.IP "[1]" 4
.IX Item "[1]"
\&\s-1ISO\s0 Maintenance Agency (\s-1ISO 3166/MA\s0)
\&\fIhttp://www.din.de/gremien/nas/nabd/iso3166ma/index.html\fR.
.IP "[2]" 4
.IX Item "[2]"
\&\fICountry codes\fR,
\&\fIhttp://www.din.de/gremien/nas/nabd/iso3166ma/codlstp1.html\fR,
7 September 1999.
.IP "[3]" 4
.IX Item "[3]"
\&\s-1ISO 3166\-3,\s0 \fICode for formerly used country names\fR.
\&\fIhttp://www.din.de/gremien/nas/nabd/iso3166ma/info_pt3.html\fR.
.IP "[4]" 4
.IX Item "[4]"
United Nations, Statistics Division.
\&\fIhttp://www.un.org/Depts/unsd/statdiv.htm\fR.
.IP "[5]" 4
.IX Item "[5]"
\&\fICountry or area codes in alphabetical order\fR.
\&\fIhttp://www.un.org/Depts/unsd/methods/m49alpha.htm\fR,
26 August 1999.
.IP "[6]" 4
.IX Item "[6]"
\&\fICodes added or changed\fR.
\&\fIhttp://www.un.org/Depts/unsd/methods/m49chang.htm\fR,
26 August 1999.
.IP "[7]" 4
.IX Item "[7]"
\&\fIGeographical regions\fR.
\&\fIhttp://www.un.org/Depts/unsd/methods/m49regin.htm\fR,
26 August 1999.
.SH "BUGS"
.IX Header "BUGS"
Looking up information using country names is far from perfect.
Except for case and the amount of white space, the exact name as it
appears on the list has to be given. \fI\s-1USA\s0\fR will not return anything,
but \fIUnited States\fR will.
.SH "DEVELOPMENT"
.IX Header "DEVELOPMENT"
The current sources of this module are found on github,
<git://github.com/Abigail/geography\*(--countries.git>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Abigail <mailto:geography\-countries@abigail.be>.
.SH "COPYRIGHT and LICENSE"
.IX Header "COPYRIGHT and LICENSE"
Copyright (C) 1999, 2009 by Abigail
.PP
Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the \*(L"Software\*(R"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.\s0
