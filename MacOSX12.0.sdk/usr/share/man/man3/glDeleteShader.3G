'\" t
.\"     Title: glDeleteShader
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2011
.\"    Manual: OpenGL 3.3
.\"    Source: OpenGL 3.3
.\"  Language: English
.\"
.TH "GLDELETESHADER" "3G" "03/08/2011" "OpenGL 3.3" "OpenGL 3\&.3"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDeleteShader \- Deletes a shader object
.SH "C SPECIFICATION"
.HP \w'void\ glDeleteShader('u
.BI "void glDeleteShader(GLuint\ " "shader" ");"
.SH "PARAMETERS"
.PP
\fIshader\fR
.RS 4
Specifies the shader object to be deleted\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglDeleteShader\fR
frees the memory and invalidates the name associated with the shader object specified by
\fIshader\fR\&. This command effectively undoes the effects of a call to
\fBglCreateShader\fR()\&.
.PP
If a shader object to be deleted is attached to a program object, it will be flagged for deletion, but it will not be deleted until it is no longer attached to any program object, for any rendering context (i\&.e\&., it must be detached from wherever it was attached before it will be deleted)\&. A value of 0 for
\fIshader\fR
will be silently ignored\&.
.PP
To determine whether an object has been flagged for deletion, call
\fBglGetShader\fR()
with arguments
\fIshader\fR
and
\fBGL_DELETE_STATUS\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIshader\fR
is not a value generated by OpenGL\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetAttachedShaders\fR()
with the program object to be queried
.PP
\fBglGetShader\fR()
with arguments
\fIshader\fR
and
\fBGL_DELETE_STATUS\fR
.PP
\fBglIsShader\fR()
.SH "SEE ALSO"
.PP
\fBglCreateProgram\fR(),
\fBglCreateShader\fR(),
\fBglDetachShader\fR(),
\fBglUseProgram\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2005 3Dlabs Inc\&. Ltd\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
