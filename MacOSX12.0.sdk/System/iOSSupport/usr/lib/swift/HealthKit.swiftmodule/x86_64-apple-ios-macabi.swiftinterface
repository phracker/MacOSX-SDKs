// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.29.207 clang-1300.0.28.1)
// swift-module-flags: -target x86_64-apple-ios15.0-macabi -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftHealthKit -swift-version 5 -enforce-exclusivity=checked -O -module-name HealthKit
import Foundation
@_exported import HealthKit
import Swift
import _Concurrency
extension HealthKit.HKCategoryType {
  @available(iOS 15.0, *)
  convenience public init(_ identifier: HealthKit.HKCategoryTypeIdentifier)
}
extension HealthKit.HKCharacteristicType {
  @available(iOS 15.0, *)
  convenience public init(_ identifier: HealthKit.HKCharacteristicTypeIdentifier)
}
@available(iOS 15.0, *)
extension HealthKit.HKClinicalType {
  @available(iOS 15.0, *)
  convenience public init(_ identifier: HealthKit.HKClinicalTypeIdentifier)
}
extension HealthKit.HKCorrelationType {
  @available(iOS 15.0, *)
  convenience public init(_ identifier: HealthKit.HKCorrelationTypeIdentifier)
}
extension HealthKit.HKDocumentType {
  @available(iOS 15.0, *)
  convenience public init(_ identifier: HealthKit.HKDocumentTypeIdentifier)
}
extension HealthKit.HKQuantityType {
  @available(iOS 15.0, *)
  convenience public init(_ identifier: HealthKit.HKQuantityTypeIdentifier)
}
@available(iOS 15.0, *)
extension HealthKit.HKAppleWalkingSteadinessClassification {
  public init(for appleWalkingSteadiness: HealthKit.HKQuantity) throws
  public var minimum: HealthKit.HKQuantity {
    get
  }
  public var maximum: HealthKit.HKQuantity {
    get
  }
}
@available(iOS 15.0, *)
extension HealthKit.HKAppleWalkingSteadinessClassification : Swift.CaseIterable {
  public static var allCases: [HealthKit.HKAppleWalkingSteadinessClassification] {
    get
  }
  public typealias AllCases = [HealthKit.HKAppleWalkingSteadinessClassification]
}
extension HealthKit.HKHealthStore {
  
  #if compiler(>=5.3) && $AsyncAwait
  @available(iOS 15.0, *)
  public func requestAuthorization(toShare typesToShare: Swift.Set<HealthKit.HKSampleType>, read typesToRead: Swift.Set<HealthKit.HKObjectType>) async throws
  #endif

}
@available(iOS 14.0, *)
extension HealthKit.HKElectrocardiogramQuery {
  public enum Result {
    case measurement(HealthKit.HKElectrocardiogram.VoltageMeasurement)
    case error(Swift.Error)
    case done
  }
  convenience public init(_ ecg: HealthKit.HKElectrocardiogram, dataHandler: @escaping (HealthKit.HKElectrocardiogramQuery, HealthKit.HKElectrocardiogramQuery.Result) -> Swift.Void)
}
