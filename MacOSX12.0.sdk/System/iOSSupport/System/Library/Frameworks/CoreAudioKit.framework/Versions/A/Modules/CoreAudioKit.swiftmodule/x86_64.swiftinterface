// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.29.207 clang-1300.0.28.1)
// swift-module-flags: -target x86_64-apple-ios14.0-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CoreAudioKit
import AVFoundation
@_exported import CoreAudioKit
import CoreFoundation
import Foundation
import Swift
import UIKit
import _Concurrency
@_inheritsConvenienceInitializers @available(iOS 14, *)
@objc(AUGenericViewInternal) @_Concurrency.MainActor(unsafe) public class AUGenericView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var auAudioUnit: AudioToolbox.AUAudioUnit? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var owningController: UIKit.UIViewController?
  @objc @_Concurrency.MainActor(unsafe) public var paramObserverToken: AudioToolbox.AUParameterObserverToken?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func traitCollectionDidChange(_ previousTraitCollection: UIKit.UITraitCollection?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @objc @_Concurrency.MainActor(unsafe) public func removeScheduledUpdatesTimer()
  @objc deinit
}
@available(iOS 14.0, *)
extension CoreAudioKit.AUGenericView : UIKit.UICollectionViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, willDisplaySupplementaryView view: UIKit.UICollectionReusableView, forElementKind elementKind: Swift.String, at indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, willDisplay cell: UIKit.UICollectionViewCell, forItemAt indexPath: Foundation.IndexPath)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUEQHeaderView : UIKit.UIView, UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMoveToSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc @_Concurrency.MainActor(unsafe) public func textFieldEditingDidChange(_ sender: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidBeginEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidEndEditing(_ textField: UIKit.UITextField, reason: UIKit.UITextField.DidEndEditingReason)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldShouldReturn(_ textField: UIKit.UITextField) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc public func textField(_ textField: UIKit.UITextField, shouldChangeCharactersIn range: Foundation.NSRange, replacementString string: Swift.String) -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public func addParameter(id: AudioToolbox.AudioUnitParameterID, name: Swift.String, shortName: Swift.String, value: Swift.Float, min: Swift.Float, max: Swift.Float, logBase: Swift.Float, formatter: Foundation.Formatter, unit: Swift.String, additionalPad: CoreGraphics.CGFloat)
  @objc @_Concurrency.MainActor(unsafe) public func setTitle(_ name: Swift.String, abbreviated title: Swift.String? = nil)
  @objc @_Concurrency.MainActor(unsafe) public func setColorForParameter(id: AudioToolbox.AudioUnitParameterID, color: UIKit.UIColor)
  @objc @_Concurrency.MainActor(unsafe) public func setParameter(id: AudioToolbox.AudioUnitParameterID, value: Swift.Float)
  @objc @_Concurrency.MainActor(unsafe) public func beginGesture(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func endGesture(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func beginTouch(notification: Foundation.Notification)
  @objc @_Concurrency.MainActor(unsafe) public func endTouch(notification: Foundation.Notification)
  @objc @_Concurrency.MainActor(unsafe) public func startEditing(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func endEditing(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func adjustViewIfHorizontallyCompressed(_ newSize: CoreGraphics.CGSize)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public class var requiresConstraintBasedLayout: Swift.Bool {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUEQGraphView : CoreAudioKit.CAAUGraphView {
  @objc @_Concurrency.MainActor(unsafe) public var dataSource: CoreAudioKit.CAAUViewParameterDataSource? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc @_Concurrency.MainActor(unsafe) public func addPointControl(for x: Swift.UInt32, for y: Swift.UInt32) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func addRegionControl(for x: Swift.UInt32, width: Swift.UInt32) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func addRegionControl(for x: Swift.UInt32, y: Swift.UInt32, width: Swift.UInt32) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func graphFrame() -> CoreGraphics.CGRect
  @objc @_Concurrency.MainActor(unsafe) public func graphView() -> CoreAudioKit.CAAUEQGraphView
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesEnded(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @objc @_Concurrency.MainActor(unsafe) public func valueForX(location: CoreGraphics.CGFloat) -> Swift.Float
  @objc @_Concurrency.MainActor(unsafe) public func valueForY(location: CoreGraphics.CGFloat) -> Swift.Float
  @objc @_Concurrency.MainActor(unsafe) public func redrawCurve()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSublayers(of layer: QuartzCore.CALayer)
  @objc @_Concurrency.MainActor(unsafe) public func updateView(for param: Swift.UInt32, value: Swift.Float)
  @objc deinit
}
@available(iOS 14, *)
@objc public protocol CAAUViewParameterDataSource {
  @objc func name(for param: Swift.UInt32) -> Swift.String?
  @objc func shortName(for param: Swift.UInt32) -> Swift.String?
  @objc func unitLabel(for param: Swift.UInt32) -> Swift.String?
  @objc func value(for param: Swift.UInt32) -> Swift.Float
  @objc func minValue(for param: Swift.UInt32) -> Swift.Float
  @objc func maxValue(for param: Swift.UInt32) -> Swift.Float
  @objc func widthType(for param: Swift.UInt32) -> Swift.Int
  @objc func stringValues(for param: Swift.UInt32) -> [Swift.String]?
  @objc func curve(in rect: CoreGraphics.CGRect) -> CoreGraphics.CGPath?
  @objc func set(parameter address: Swift.UInt32, value: Swift.Float)
}
@_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc public class CAAUFilterControl : ObjectiveC.NSObject, QuartzCore.CALayerDelegate {
  @objc final public let dataSource: CoreAudioKit.CAAUViewParameterDataSource
  @objc public var controlLayer: QuartzCore.CALayer?
  @objc public func layoutSublayers(of layer: QuartzCore.CALayer)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUGraphView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public func configure(data: Swift.Dictionary<Swift.String, Any>)
  @objc @_Concurrency.MainActor(unsafe) public func data() -> Foundation.NSDictionary
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSublayers(of layer: QuartzCore.CALayer)
  @objc @_Concurrency.MainActor(unsafe) public func locationForX(value: Swift.Float) -> CoreGraphics.CGFloat
  @objc @_Concurrency.MainActor(unsafe) public func locationForY(value: Swift.Float) -> CoreGraphics.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesEnded(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func gestureRecognizerShouldBegin(_ gestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUEQViewBase : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var headerView: CoreAudioKit.CAAUEQHeaderView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var graphView: CoreAudioKit.CAAUEQGraphView {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMoveToSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc @_Concurrency.MainActor(unsafe) public func configureView(for identifier: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public class var requiresConstraintBasedLayout: Swift.Bool {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @objc deinit
}
