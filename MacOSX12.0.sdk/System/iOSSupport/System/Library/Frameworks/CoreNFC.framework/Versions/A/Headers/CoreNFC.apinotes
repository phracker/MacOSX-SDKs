Name: CoreNFC
Protocols:
  - Name: NFCISO15693Tag
    Methods:
      - Selector: "sendCustomCommandWithConfiguration:completionHandler:"
        MethodKind: Instance
        SwiftName: "sendCustomCommand(commandConfiguration:completionHandler:)"
      - Selector: "readMultipleBlocksWithConfiguration:completionHandler:"
        MethodKind: Instance
        SwiftName: "readMultipleBlock(readConfiguration:completionHandler:)"
      - Selector: "readSingleBlockWithRequestFlags:blockNumber:completionHandler:"
        MethodKind: Instance
        SwiftName: "readSingleBlock(requestFlags:blockNumber:completionHandler:)"
      - Selector: "writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:"
        MethodKind: Instance
        SwiftName: "writeSingleBlock(requestFlags:blockNumber:dataBlock:completionHandler:)"
      - Selector: "lockBlockWithRequestFlags:blockNumber:completionHandler:"
        MethodKind: Instance
        SwiftName: "lockBlock(requestFlags:blockNumber:completionHandler:)"
      - Selector: "readMultipleBlocksWithRequestFlags:blockRange:completionHandler:"
        MethodKind: Instance
        SwiftName: "readMultipleBlocks(requestFlags:blockRange:completionHandler:)"
      - Selector: "writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:"
        MethodKind: Instance
        SwiftName: "writeMultipleBlocks(requestFlags:blockRange:dataBlocks:completionHandler:)"
      - Selector: "selectWithRequestFlags:completionHandler:"
        MethodKind: Instance
        SwiftName: "select(requestFlags:completionHandler:)"
      - Selector: "resetToReadyWithRequestFlags:completionHandler:"
        MethodKind: Instance
        SwiftName: "resetToReady(requestFlags:completionHandler:)"
      - Selector: "writeAFIWithRequestFlag:afi:completionHandler:"
        MethodKind: Instance
        SwiftName: "writeAFI(requestFlags:afi:completionHandler:)"
      - Selector: "lockAFIWithRequestFlag:completionHandler:"
        MethodKind: Instance
        SwiftName: "lockAFI(requestFlags:completionHandler:)"
      - Selector: "writeDSFIDWithRequestFlag:dsfid:completionHandler:"
        MethodKind: Instance
        SwiftName: "writeDSFID(requestFlags:dsfid:completionHandler:)"
      - Selector: "lockDFSIDWithRequestFlag:completionHandler:"
        MethodKind: Instance
        SwiftName: "lockDFSID(requestFlags:completionHandler:)"
      - Selector: "lockDSFIDWithRequestFlag:completionHandler:"
        MethodKind: Instance
        SwiftName: "lockDSFID(requestFlags:completionHandler:)"
      - Selector: "getSystemInfoWithRequestFlag:completionHandler:"
        MethodKind: Instance
        SwiftName: "getSystemInfo(requestFlags:completionHandler:)"
      - Selector: "getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:"
        MethodKind: Instance
        SwiftName: "getMultipleBlockSecurityStatus(requestFlags:blockRange:completionHandler:)"
      - Selector: "customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:"
        MethodKind: Instance
        SwiftName: "customCommand(requestFlags:customCommandCode:customRequestParameters:completionHandler:)"
      - Selector: "extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:"
        MethodKind: Instance
        SwiftName: "extendedReadSingleBlock(requestFlags:blockNumber:completionHandler:)"
      - Selector: "extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:"
        MethodKind: Instance
        SwiftName: "extendedWriteSingleBlock(requestFlags:blockNumber:dataBlock:completionHandler:)"
      - Selector: "extendedLockBlockWithRequestFlags:blockNumber:completionHandler:"
        MethodKind: Instance
        SwiftName: "extendedLockBlock(requestFlags:blockNumber:completionHandler:)"
      - Selector: "fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:"
        MethodKind: Instance
        SwiftName: "extendedReadMultipleBlocks(requestFlags:blockRange:completionHandler:)"
      - Selector: "extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "readBufferWithRequestFlags:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "sendRequestWithFlag:commandCode:data:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "getSystemInfoAndUIDWithRequestFlag:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true

  - Name: NFCISO7816Tag
    Methods:
      - Selector: "sendCommandAPDU:completionHandler:"
        MethodKind: Instance
        SwiftName: "sendCommand(apdu:completionHandler:)"
      - Selector: "sendMiFareISO7816Command:completionHandler:"
        MethodKind: Instance
        SwiftName: "sendMiFareISO7816Command(apdu:completionHandler:)"
  - Name: NFCFeliCaTag
    Methods:
      - Selector: "pollingWithSystemCode:requestCode:timeSlot:completionHandler:"
        MethodKind: Instance
        SwiftName: "polling(systemCode:requestCode:timeSlot:completionHandler:)"
      - Selector: "requestServiceWithNodeCodeList:completionHandler:"
        MethodKind: Instance
        SwiftName: "requestService(nodeCodeList:completionHandler:)"
      - Selector: "requestResponseWithCompletionHandler:"
        MethodKind: Instance
        SwiftName: "requestResponse(completionHandler:)"
      - Selector: "readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:"
        MethodKind: Instance
        SwiftName: "readWithoutEncryption(serviceCodeList:blockList:completionHandler:)"
      - Selector: "writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:"
        MethodKind: Instance
        SwiftName: "writeWithoutEncryption(serviceCodeList:blockList:blockData:completionHandler:)"
      - Selector: "requestSystemCodeWithCompletionHandler:"
        MethodKind: Instance
        SwiftName: "requestSystemCode(completionHandler:)"
      - Selector: "requestServiceV2WithNodeCodeList:completionHandler:"
        MethodKind: Instance
        SwiftName: "requestServiceV2(nodeCodeList:completionHandler:)"
      - Selector: "requestSpecificationVersionWithCompletionHandler:"
        MethodKind: Instance
        SwiftName: "requestSpecificationVersion(completionHandler:)"
      - Selector: "resetModeWithCompletionHandler:"
        MethodKind: Instance
        SwiftName: "resetMode(completionHandler:)"
      - Selector: "sendFeliCaCommandPacket:completionHandler:"
        MethodKind: Instance
        SwiftName: "sendFeliCaCommand(commandPacket:completionHandler:)"
  - Name: NFCMiFareTag
    Methods:
      - Selector: "sendMiFareCommand:completionHandler:"
        MethodKind: Instance
        SwiftName: "sendMiFareCommand(commandPacket:completionHandler:)"
  - Name: NFCNDEFReaderSessionDelegate
    Methods:
      - Selector: "readerSession:didDetectTags:"
        MethodKind: Instance
        SwiftName: "readerSession(_:didDetect:)"
  - Name: NFCReaderSession
    Methods:
      - Selector: "invalidateSession"
        MethodKind: Instance
        SwiftName: "invalidate()"
      - Selector: "invalidateSessionWithErrorMessage:"
        MethodKind: Instance
        SwiftName: "invalidate(errorMessage:)"
  - Name: NFCReaderSessionDelegate
    SwiftPrivate: true
  - Name: NFCTag
    SwiftPrivate: true
  - Name: NFCTagReaderSessionDelegate
    SwiftPrivate: true
  
Classes:
  - Name: NFCISO7816APDU
    Methods:
      - Selector: "initWithClass:instruction:p1:p2:data:le:"
        MethodKind: Instance
        SwiftName: "init(class:instruction:p1:p2:data:le:)"
  - Name: NFCNDEFMessage
    Methods:
      - Selector: "initWithNDEFRecords:"
        MethodKind: Instance
        SwiftName: "init(records:)"
  - Name: NFCNDEFPayload
    Methods:
      - Selector: "wellKnownTypeTextPayloadWithLocale:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "wellKnownTypeURIPayloadWithString:"
        MethodKind: Class
        SwiftName: "wellKnownTypeURIPayload(string:)"
      - Selector: "wellKnownTypeURIPayloadWithURL:"
        MethodKind: Class
        SwiftName: "wellKnownTypeURIPayload(url:)"
      - Selector: "wellKnowTypeTextPayloadWithString:locale:"
        MethodKind: Class
        SwiftName: "wellKnowTypeTextPayload(string:locale:)"
      - Selector: "wellKnownTypeTextPayloadWithString:locale:"
        MethodKind: Class
        SwiftName: "wellKnownTypeTextPayload(string:locale:)"
  - Name: NFCTagReaderSession
    Methods:
      - Selector: "connectToTag:completionHandler:"
        MethodKind: Instance
        SwiftPrivate: true
      - Selector: "initWithPollingOption:delegate:queue:"
        MethodKind: Instance
        SwiftPrivate: true
    Properties:
      - Name: connectedTag
        PropertyKind: Instance 
        SwiftPrivate: true
  - Name: NFCISO15693ReaderSession
    SwiftPrivate: true

Tags:
  - Name: NFCVASMode
    SwiftName: NFCVASCommandConfiguration.Mode
  - Name: NFCVASErrorCode
    SwiftName: NFCVASResponse.ErrorCode
  - Name: NFCPollingOption
    SwiftName: NFCTagReaderSession.PollingOption
  - Name: NFCTagType
    SwiftPrivate: true

Enumerators:
  - Name: NFCMiFareDESFire
    SwiftName: "desfire"
  - Name: NFCPollingISO14443
    SwiftName: "iso14443"
  - Name: NFCPollingISO15693
    SwiftName: "iso15693"
  - Name: NFCPollingISO18092
    SwiftName: "iso18092"
  - Name: EncryptionIdAES
    SwiftName: "aes"
  - Name: EncryptionIdAES_DES
    SwiftName: "aes_des"
  
SwiftVersions:
  - Version: 4
    Protocols:

    Classes:

    Tags:
        
    Enumerators:

        
